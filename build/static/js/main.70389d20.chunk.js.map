{"version":3,"sources":["components/navbar/tonalify.svg","reducers/track-selection.reducer.ts","reducers/auth.reducer.ts","reducers/flash-messages.reducer.ts","reducers/ajax.reducer.ts","reducers/index.reducer.ts","constants/constants.ts","actions/selection.actions.ts","actions/auth.actions.ts","actions/flash-messages.actions.ts","actions/ajax.actions.ts","FlashMessages.tsx","components/navbar/Navbar.tsx","components/home/Home.tsx","components/albumsAndPlaylists/AlbumsAndPlaylists.tsx","components/auth/RequireAuth.tsx","components/tracks/TracksTable.tsx","components/userSelection/UserSelection.tsx","AjaxSpinner.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","isAuthenticated","id","isLoading","requests","AJAX_REQUEST_TYPES","FLASH_MESSAGE_TYPES","trackSelection","state","action","type","payload","auth","flashMessages","filter","message","ajax","request","API_ROOT","HTTP_ORIGIN","FlashMessages","props","previousProps","previousLastMessage","length","lastMessage","this","renderFlashMessage","setTimeout","deleteFlashMessage","className","SUCCESS","text","ERROR","Component","connect","dispatch","Navbar","mobile","requestId","uuidv4","addPendingRequest","PROFILE","axios","get","withCredentials","loggedOut","finishPendingRequest","data","deauthenticate","setState","to","src","Logo","role","aria-label","data-target","onClick","e","clickHamburger","aria-hidden","activeClassName","logout","defaults","Home","displayName","authenticateUser","code","URLSearchParams","window","location","search","getProfile","addFlashMessage","post","spotify_path","spotify_payload","crud_operation","headers","profile","authenticate","display_name","loginUri","href","alt","style","marginLeft","fontSize","preventDefault","login","userId","AlbumsAndPlaylists","collection","showTracks","tracksPath","showTable","selectedPlaylistPath","selectedPlaylistTitle","errorFetching","query","spotifyPath","fetching","collectionType","getPlaylists","USER_LIBRARY","items","next","concat","map","item","album","title","history","push","description","name","toLocaleLowerCase","toString","toLowerCase","includes","filterCollection","htmlFor","onChange","target","value","placeholder","open","images","url","compose","withRouter","ComposedComponent","extraProps","Authenticate","checkAndRedirect","React","keysMap","0","1","2","3","4","5","6","7","8","9","10","11","modesMap","signatureMap","SortButton","column","selectedColumn","direction","sortColumn","Table","storedSelection","localStorage","getItem","parsedSelection","JSON","parse","trackList","filtered","key","mode","sort","errorFetchingTracks","disableTable","modalActive","fetchingAnalysis","trackAnalysis","trackToAnalyze","getTracks","track","analyzed","featuresRequestId","tracks","tracksFeaturesResponse","tracksFeatures","audio_features","updatedTrackList","features","find","selected","tempo","artist","artists","passesFilter","property","selectionString","oldSelection","updatedSelection","setItem","stringify","cachedTrack","filteredTracks","first","second","i","hue2rgb","p","q","t","rgb","h","s","l","r","g","b","Math","floor","hslToRgb","getFilteredTracks","sortedTracks","getSortedTracks","width","display","alignItems","removeFromSelection","addToSelection","backgroundColor","numberToColorHsl","key_confidence","border","mode_confidence","overflow","tempo_confidence","toFixed","time_signature_confidence","time_signature","sections","row","start","duration","filterByKey","disabled","align","getAnalysis","Number","SelectionTable","updatePlaylistRequestId","newPlaylistName","playlist_name","newPlaylistDescription","playlist_description","exportedSelection","uris","uri","updatedPlaylist","snapshot_id","onSubmit","exportSelection","rows","AjaxSpinner","store","createStore","combineReducers","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","App","path","component","authRequired","TracksTable","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70389d20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tonalify.8482fd0a.svg\";","import { UPDATE_SELECTION } from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function trackSelectionReducer(\n  state = initialState,\n  action: { type: string; payload: any[] }\n) {\n  switch (action.type) {\n    case UPDATE_SELECTION:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n","import { DEAUTHENTICATE, AUTHENTICATE } from '../actions/index.actions';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  id: string | null;\n}\n\nconst initialState = { isAuthenticated: false, id: null };\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: string }\n) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return { ...state, isAuthenticated: true, id: action.payload };\n    case DEAUTHENTICATE:\n      return { ...state, isAuthenticated: false, id: null };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_FLASH_MESSAGE,\n  DELETE_FLASH_MESSAGE\n} from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_FLASH_MESSAGE:\n      return [...state, action.payload];\n    case DELETE_FLASH_MESSAGE:\n      return [...state].filter((message: any) => message.id != action.payload);\n    default:\n      return state;\n  }\n}\n","import {\n  IS_LOADING,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../actions/index.actions';\n\nexport interface AjaxState {\n  isLoading: boolean;\n  requests: any[];\n}\n\nconst initialState = { isLoading: false, requests: [] };\nexport default function ajaxReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_PENDING_REQUEST:\n      return { ...state, requests: [...state.requests, action.payload] };\n    case FINISH_PENDING_REQUEST:\n      return {\n        ...state,\n        requests: [...state.requests].filter(\n          (request: any) => !!request.id === action.payload\n        )\n      };\n    case IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import trackSelectionReducer from './track-selection.reducer';\nimport authReducer from './auth.reducer';\nimport { AuthState } from './auth.reducer';\nimport flashMessagesReducer from './flash-messages.reducer';\nimport ajaxReducer from './ajax.reducer';\nimport { AjaxState } from './ajax.reducer';\n\nexport interface GlobalState {\n  trackSelection: any[];\n  auth: AuthState;\n  flashMessages: any[];\n  ajax: AjaxState;\n}\n\nexport default {\n  trackSelection: trackSelectionReducer,\n  auth: authReducer,\n  flashMessages: flashMessagesReducer,\n  ajax: ajaxReducer\n};\n","// https://yfitops.herokuapp.com root\n// 'http://localhost:4200' root\n//https://tonalify.herokuapp.com origin\n//http://localhost:3000 origin\nexport const API_ROOT = 'http://localhost:4200';\nexport const HTTP_ORIGIN = 'http://localhost:3000';\nexport enum AJAX_REQUEST_TYPES {\n  'PROFILE',\n  'USER_LIBRARY'\n}\nexport enum FLASH_MESSAGE_TYPES {\n  'ERROR',\n  'SUCCESS'\n}\n","export const UPDATE_SELECTION = 'UPDATE_SELECTION';\n","export const AUTHENTICATE = 'AUTHENTICATE';\nexport const DEAUTHENTICATE = 'DEAUTHENTICATE';\n","export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\n","export const IS_LOADING = 'IS_LOADING';\nexport const ADD_PENDING_REQUEST = 'ADD_PENDING_REQUEST';\nexport const FINISH_PENDING_REQUEST = 'FINISH_PENDING_REQUEST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\nimport { DELETE_FLASH_MESSAGE } from './actions/index.actions';\nimport { FLASH_MESSAGE_TYPES } from './constants/constants';\ninterface FlashMessagesProps {\n  flashMessages: any[];\n  deleteFlashMessage: Function;\n}\ninterface FlashMessagesState {\n  message: any;\n}\n\nclass FlashMessages extends Component<FlashMessagesProps, FlashMessagesState> {\n  constructor(props: FlashMessagesProps) {\n    super(props);\n    this.state = {\n      message: null\n    };\n  }\n\n  componentDidUpdate(previousProps: any) {\n    const previousLastMessage =\n      previousProps.flashMessages[previousProps.flashMessages.length - 1];\n    const lastMessage = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (\n      lastMessage &&\n      previousLastMessage &&\n      lastMessage.id !== previousLastMessage.id\n    ) {\n      this.renderFlashMessage();\n      return;\n    }\n\n    if (!previousLastMessage && lastMessage) {\n      this.renderFlashMessage();\n    }\n  }\n\n  renderFlashMessage() {\n    const message = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (!message) return;\n    setTimeout(() => {\n      this.props.deleteFlashMessage(message.id);\n    }, 5000);\n  }\n\n  render() {\n    const { flashMessages } = this.props;\n    const message = flashMessages[flashMessages.length - 1];\n    return (\n      <div className=\"flash-messages-wrapper\">\n        {message ? (\n          <div className=\"flash-message-content\">\n            {message.type === FLASH_MESSAGE_TYPES.SUCCESS ? (\n              <div className=\"notification is-success\">{message.text}</div>\n            ) : null}\n\n            {message.type === FLASH_MESSAGE_TYPES.ERROR ? (\n              <div className=\"notification is-danger\">{message.text}</div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteFlashMessage: (id: string) =>\n      dispatch({ type: DELETE_FLASH_MESSAGE, payload: id })\n  };\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    flashMessages: state.flashMessages\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashMessages);\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  DEAUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport { API_ROOT, AJAX_REQUEST_TYPES } from '../../constants/constants';\nimport Logo from './tonalify.svg';\n\ninterface NavbarProps {\n  deauthenticate: Function;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  isAuthenticated: boolean;\n}\n\ninterface NavbarState {\n  mobile: boolean;\n}\n\nclass Navbar extends Component<NavbarProps, NavbarState> {\n  constructor(props: NavbarProps) {\n    super(props);\n    this.state = {\n      mobile: false\n    };\n  }\n  async logout() {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.PROFILE,\n      message: 'Logging Out'\n    });\n    const loggedOut = await axios.get(`${API_ROOT}/logout`, {\n      withCredentials: true\n    });\n\n    this.props.finishPendingRequest(requestId);\n\n    if (!loggedOut || !loggedOut.data) return;\n\n    this.props.deauthenticate();\n  }\n\n  clickHamburger() {\n    this.setState({ mobile: !!this.state.mobile ? false : true });\n  }\n  render() {\n    return (\n      <nav className=\"navbar-wrapper navbar is-spaced\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className=\"navbar-tonalify-link navbar-item is-family-sans-serif has-text-primary has-text-weight-bold\"\n            to=\"/home\"\n          >\n            <img src={Logo} />\n          </NavLink>\n\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${\n              this.state.mobile ? 'is-active' : ''\n            }`}\n            aria-label=\"menu\"\n            data-target=\"nav-menu\"\n            onClick={e => this.clickHamburger()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"nav-menu\"\n          className={`navbar-menu ${this.state.mobile ? 'is-active' : ''}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/home\"\n              activeClassName=\"is-active\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/your-playlists\"\n              activeClassName=\"is-active\"\n            >\n              Playlists\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/your-albums\"\n              activeClassName=\"is-active\"\n            >\n              Albums\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/selection\"\n              activeClassName=\"is-active\"\n            >\n              Export\n            </NavLink>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                {this.props.isAuthenticated ? (\n                  <a className=\"button is-light\" onClick={() => this.logout()}>\n                    Logout\n                  </a>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deauthenticate: () => dispatch({ type: DEAUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\n\naxios.defaults.withCredentials = true;\n\ninterface HomeProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n}\n\ninterface HomeState {\n  displayName: string;\n}\n\nclass Home extends Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = { displayName: '' };\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) return;\n    this.authenticateUser();\n  }\n\n  async authenticateUser() {\n    const requestId = uuidv4();\n    try {\n      const code = new URLSearchParams(window.location.search).get('code');\n      if (code) {\n        this.props.addPendingRequest({\n          id: requestId,\n          type: AJAX_REQUEST_TYPES.PROFILE,\n          message: 'Authenticating'\n        });\n        await axios.get(`${API_ROOT}/authorize?code=${code}`, {\n          withCredentials: true\n        });\n\n        this.getProfile();\n      }\n      this.props.finishPendingRequest(requestId);\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Authenticating',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getProfile() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Fetching Profile'\n      });\n      const profile = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: 'https://api.spotify.com/v1/me',\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (profile.data && profile.data.id) {\n        this.props.authenticate(profile.data.id);\n        this.setState({ displayName: profile.data.display_name });\n\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async login() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Logging In'\n      });\n      const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n      this.props.finishPendingRequest(requestId);\n      if (loginUri && loginUri.data) {\n        window.location.href = loginUri.data;\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const { displayName } = this.state;\n    return (\n      <div className=\"home-view-wrapper\">\n        {isAuthenticated ? (\n          <div className=\"section\">\n            <div className=\"container is-widescreen has-text-centered\">\n              <p className=\"title\">Welcome, {displayName}</p>{' '}\n              <p>\n                Browse your library and make track selections based on key or\n                tempo, then export your selection as a Spotify playlist. This\n                app won't modify your playlists, it will only add new playlists\n                that you create\n              </p>\n              <hr />\n              <p>\n                Keep in mind that key and bpm come from the spotify api and\n                accuracy can vary\n              </p>\n            </div>\n            <div className=\"section\">\n              <div className=\"container is-widescreen has-text-centered\">\n                <div className=\"links\">\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-albums\"\n                  >\n                    <p>Your Albums</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-playlists\"\n                  >\n                    <p>Your Playlists</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/selection\"\n                  >\n                    <p>Export Selection</p>\n                  </NavLink>\n                </div>\n                <hr />\n                <div className=\"buy-me-coffee-wrapper\">\n                  <a\n                    className=\"bmc-button has-background-link\"\n                    href=\"https://www.buymeacoffee.com/tonalify\"\n                  >\n                    <img\n                      src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\n                      alt=\"Buy me a coffee\"\n                    />\n                    <span\n                      style={{ marginLeft: '5px', fontSize: '19px !important' }}\n                    >\n                      Buy me a coffee\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {!isAuthenticated ? (\n          <div className=\"section\">\n            <div className=\"container is-fullwidth has-text-centered\">\n              <a\n                href=\"\"\n                onClick={e => {\n                  e.preventDefault();\n                  this.login();\n                }}\n              >\n                Login\n              </a>{' '}\n              using your Spotify account to continue\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: (userId: string) =>\n      dispatch({ type: AUTHENTICATE, payload: userId }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AlbumsAndPlaylistsProps {\n  route: any;\n  history: any;\n  type: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\ninterface AlbumsAndPlaylistsState {\n  collection: any[];\n  showTracks: boolean;\n  tracksPath: string;\n  showTable: boolean;\n  selectedPlaylistPath: string;\n  selectedPlaylistTitle: string;\n  errorFetching: boolean;\n  query: string;\n  spotifyPath: string;\n  fetching: boolean;\n  collectionType: string;\n}\n\nclass AlbumsAndPlaylists extends Component<\n  AlbumsAndPlaylistsProps,\n  AlbumsAndPlaylistsState\n> {\n  constructor(props: AlbumsAndPlaylistsProps) {\n    super(props);\n    this.state = {\n      collection: [],\n      showTracks: false,\n      tracksPath: '',\n      showTable: false,\n      selectedPlaylistPath: '',\n      selectedPlaylistTitle: '',\n      errorFetching: false,\n      query: '',\n      spotifyPath:\n        this.props.type === 'PLAYLISTS'\n          ? 'https://api.spotify.com/v1/me/playlists?limit=50'\n          : 'https://api.spotify.com/v1/me/albums?limit=50',\n      fetching: false,\n      collectionType: this.props.type === 'PLAYLISTS' ? 'Playlist' : 'Album'\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylists();\n  }\n\n  async getPlaylists() {\n    const requestId = uuidv4();\n    try {\n      this.setState({ fetching: true });\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message:\n          this.props.type === 'PLAYLISTS'\n            ? 'Fetching Playlists'\n            : 'Fetching Albums'\n      });\n      const collection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!collection || !collection.data || !collection.data.items) return;\n\n      const { next } = collection.data;\n\n      this.setState(\n        {\n          collection: [...this.state.collection].concat(\n            this.props.type === 'PLAYLISTS'\n              ? collection.data.items\n              : collection.data.items.map((item: any) => item.album)\n          ),\n          spotifyPath: next,\n          fetching: false\n        },\n        () => {\n          if (!next) return;\n          this.getPlaylists();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.setState({ errorFetching: true, fetching: false });\n    }\n  }\n\n  open(id: string, title: string) {\n    this.props.history.push(\n      `/tracks?spotify_path=https://api.spotify.com/v1/${\n        this.props.type === 'PLAYLISTS' ? 'playlists' : 'albums'\n      }/${id}/tracks&title=${title}`\n    );\n  }\n\n  search(query: any) {\n    this.setState({ query });\n  }\n\n  filterCollection() {\n    return [...this.state.collection].filter((item: any) => {\n      const { description, name } = item;\n      const query = this.state.query.toLocaleLowerCase();\n      if (\n        (description &&\n          description\n            .toString()\n            .toLowerCase()\n            .includes(query)) ||\n        (name &&\n          name\n            .toString()\n            .toLowerCase()\n            .includes(query))\n      )\n        return item;\n    });\n  }\n\n  render() {\n    let items =\n      this.state.query && this.state.query.length\n        ? this.filterCollection()\n        : this.state.collection;\n    return (\n      <div className=\"playlists-view-wrapper\">\n        <div className=\"section\">\n          <div className=\"container has-text-centered playlists-and-albums-header\">\n            <p className=\"title\">Your {this.state.collectionType}s</p>\n\n            <p>Choose {this.state.collectionType} to Select Tracks From</p>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"container is-widescreen\">\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"search-input\">\n                Search Your {this.state.collectionType}s\n              </label>\n              <div className=\"search-playlists-input-wrapper\">\n                <input\n                  id=\"search-input\"\n                  className=\"search-input input\"\n                  onChange={e => this.search(e.target.value)}\n                  placeholder=\"Search\"\n                  value={this.state.query}\n                ></input>\n                {this.state.query.length ? (\n                  <button\n                    onClick={() => {\n                      this.setState({ query: '' });\n                    }}\n                  >\n                    <CloseIcon className=\"has-text-link\" />\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            {!this.state.errorFetching ? (\n              <div className=\"playlists-wrapper\">\n                {items.length ? (\n                  items.map((item: any) => (\n                    <div\n                      className=\"playlist-wrapper has-background-grey-lighter\"\n                      onClick={() => this.open(item.id, item.name)}\n                    >\n                      {item.images[0] ? (\n                        <img\n                          className=\"cover-image\"\n                          src={item.images[0].url}\n                        ></img>\n                      ) : (\n                        <div className=\"cover-image\"></div>\n                      )}\n                      <p>{item.name}</p>\n                    </div>\n                  ))\n                ) : !this.state.fetching ? (\n                  <p>no results</p>\n                ) : null}\n              </div>\n            ) : (\n              <p className=\"notification is-danger\">\n                Error Loading {this.state.collectionType}s, Refresh the Page\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: () => dispatch({ type: AUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(AlbumsAndPlaylists);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  AUTHENTICATE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AuthenticateProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\nexport default function(ComposedComponent: any, extraProps?: any): any {\n  class Authenticate extends React.Component<AuthenticateProps> {\n    componentDidMount() {\n      this.checkAndRedirect();\n    }\n\n    componentDidUpdate() {\n      this.checkAndRedirect();\n    }\n\n    async checkAndRedirect() {\n      const { isAuthenticated } = this.props;\n      if (isAuthenticated) return;\n      const requestId = uuidv4();\n\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          message: 'Fetching Profile',\n          type: AJAX_REQUEST_TYPES.PROFILE\n        });\n\n        const profile = await axios.post(\n          `${API_ROOT}/spotify-request`,\n          {\n            spotify_path: 'https://api.spotify.com/v1/me',\n            spotify_payload: null,\n            crud_operation: 'get'\n          },\n          {\n            withCredentials: true,\n            headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n          }\n        );\n\n        this.props.finishPendingRequest(requestId);\n\n        if (profile.data && profile.data.id) {\n          this.props.authenticate(profile.data.id);\n          return;\n        }\n\n        this.props.history.push('/home');\n      } catch (error) {\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          {this.props.isAuthenticated ? (\n            <ComposedComponent {...(this.props, extraProps)} />\n          ) : null}\n        </div>\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch: any) => {\n    return {\n      authenticate: (userId: string) =>\n        dispatch({ type: AUTHENTICATE, payload: userId }),\n      addPendingRequest: (request: any) =>\n        dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n      finishPendingRequest: (id: any) =>\n        dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n    };\n  };\n\n  const mapStateToProps = (state: GlobalState) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(Authenticate);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  UPDATE_SELECTION,\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport { color, flexbox } from '@material-ui/system';\n\nconst keysMap: any = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B'\n};\n\nconst modesMap: any = {\n  0: 'minor',\n  1: 'major'\n};\n\nconst signatureMap: any = {\n  3: '3/4',\n  4: '4/4',\n  5: '5/4',\n  6: '6/4',\n  7: '7/4'\n};\ninterface TableProps {\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  spotifyPath: string | null;\n}\n\ninterface TableState {\n  trackList: any;\n  spotifyPath: string | null;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetchingTracks: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n  modalActive: boolean;\n  fetchingAnalysis: boolean;\n  trackAnalysis: any;\n  trackToAnalyze: any;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass Table extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection);\n\n    this.state = {\n      trackList: [],\n      spotifyPath: new URLSearchParams(window.location.search).get(\n        'spotify_path'\n      ),\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetchingTracks: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : [],\n      modalActive: false,\n      fetchingAnalysis: false,\n      trackAnalysis: {},\n      trackToAnalyze: {}\n    };\n\n    this.getTracks();\n  }\n\n  async getAnalysis(track: any) {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Audio Details'\n    });\n    this.setState({\n      fetchingAnalysis: true,\n      modalActive: true,\n      trackToAnalyze: track\n    });\n    const analyzed = await axios.post(\n      `${API_ROOT}/spotify-request`,\n      {\n        spotify_path: `https://api.spotify.com/v1/audio-analysis/${track.id}`,\n        spotify_payload: null,\n        crud_operation: 'get'\n      },\n      {\n        withCredentials: true,\n        headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n      }\n    );\n\n    this.props.finishPendingRequest(requestId);\n\n    this.setState({\n      trackAnalysis: analyzed.data,\n      fetchingAnalysis: false\n    });\n  }\n\n  async getTracks() {\n    const requestId = uuidv4();\n    const featuresRequestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Tracks'\n      });\n\n      const tracks = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!tracks.data || !tracks.data.items) return;\n\n      const { items, next } = tracks.data;\n\n      this.props.addPendingRequest({\n        id: featuresRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Audio Details'\n      });\n\n      const tracksFeaturesResponse = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/audio-features?ids=${items.map(\n            (item: any) => {\n              if (item.track) {\n                item = item.track;\n              }\n              return item.id;\n            }\n          )}`,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(featuresRequestId);\n\n      let tracksFeatures: [] = [];\n\n      if (\n        tracksFeaturesResponse &&\n        tracksFeaturesResponse.data &&\n        tracksFeaturesResponse.data.audio_features\n      ) {\n        tracksFeatures = tracksFeaturesResponse.data.audio_features;\n      }\n\n      const updatedTrackList = [...this.state.trackList].concat(\n        items.map((item: any) => {\n          if (item.track) {\n            item = item.track;\n          }\n          const features: any | undefined = tracksFeatures.find(\n            (track: any) => track && item && track.id === item.id\n          );\n\n          return {\n            ...item,\n            selected: false,\n            tempo: features ? features.tempo : null,\n            key: features ? keysMap[features.key] : null,\n            mode: features ? modesMap[features.mode] : null,\n            artist:\n              item.artists && item.artists.length ? item.artists[0].name : null\n          };\n        })\n      );\n\n      this.setState(\n        {\n          ...this.state,\n          trackList: updatedTrackList,\n          spotifyPath: next,\n          errorFetchingTracks: false\n        },\n        () => {\n          if (!next) return;\n          this.getTracks();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.finishPendingRequest(featuresRequestId);\n      this.setState({\n        ...this.state,\n        errorFetchingTracks: true\n      });\n    }\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackList].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  addToSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n    const updatedSelection = [...oldSelection, track];\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  numberToColorHsl(i: any) {\n    i = i * 100;\n    function hue2rgb(p: any, q: any, t: any) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    function hslToRgb(h: any, s: any, l: any) {\n      var r, g, b;\n\n      if (s == 0) {\n        r = g = b = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    }\n    // as the function expects a value between 0 and 1, and red = 0° and green = 120°\n    // we convert the input to the appropriate hue value\n    var hue = (i * 1.2) / 360;\n    // we convert hsl to rgb (saturation 100%, lightness 50%)\n    var rgb = hslToRgb(hue, 1, 0.5);\n    // we format to css value and return\n    return rgb[0] + ',' + rgb[1] + ',' + rgb[2];\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackList;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const title = new URLSearchParams(window.location.search).get('title');\n\n    const { fetchingAnalysis, trackAnalysis, trackToAnalyze } = this.state;\n\n    return (\n      <div className=\"tracks-view-wrapper\">\n        {this.state.modalActive ? (\n          <div className=\"modal is-active\">\n            <div\n              className=\"modal-background\"\n              onClick={() => {\n                this.setState({ modalActive: false });\n              }}\n            ></div>\n\n            <div className=\"modal-content has-background-light\">\n              {!fetchingAnalysis && trackAnalysis && trackAnalysis.track ? (\n                <div className=\"track-analysis-content\">\n                  <div\n                    style={{\n                      width: '100%',\n                      display: 'flex',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <p>{trackToAnalyze.name}</p>\n                    {!this.state.trackSelection.find(\n                      (track: any) => track.id === trackToAnalyze.id\n                    ) ? (\n                      <AddIcon\n                        className={`selection-button-icon has-text-link ${\n                          this.state.disableTable ? 'disabled-icon' : ''\n                        }`}\n                        onClick={() => {\n                          this.addToSelection(trackToAnalyze);\n                        }}\n                      />\n                    ) : (\n                      <RemoveIcon\n                        className={`selection-button-icon has-text-link ${\n                          this.state.disableTable ? 'disabled-icon' : ''\n                        }`}\n                        onClick={() => {\n                          this.removeFromSelection(trackToAnalyze);\n                        }}\n                      />\n                    )}\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\n                    <div\n                      className=\"confidence-bar\"\n                      style={{\n                        backgroundColor: `rgba(${this.numberToColorHsl(\n                          trackAnalysis.track.key_confidence\n                        )},0.2)`,\n                        border: `1px solid rgb(${this.numberToColorHsl(\n                          trackAnalysis.track.key_confidence\n                        )}`\n                      }}\n                    >\n                      <p>{keysMap[trackAnalysis.track.key]}</p>\n                      <div\n                        style={{\n                          width: trackAnalysis.track.key_confidence * 100 + '%',\n                          backgroundColor: `rgb(${this.numberToColorHsl(\n                            trackAnalysis.track.key_confidence\n                          )}`\n                        }}\n                      ></div>\n                    </div>\n\n                    <div\n                      className=\"confidence-bar\"\n                      style={{\n                        backgroundColor: `rgba(${this.numberToColorHsl(\n                          trackAnalysis.track.mode_confidence\n                        )},0.2)`,\n                        border: `1px solid rgb(${this.numberToColorHsl(\n                          trackAnalysis.track.mode_confidence\n                        )}`\n                      }}\n                    >\n                      <p>{modesMap[trackAnalysis.track.mode]}</p>\n                      <div\n                        style={{\n                          width:\n                            trackAnalysis.track.mode_confidence * 100 + '%',\n                          backgroundColor: `rgb(${this.numberToColorHsl(\n                            trackAnalysis.track.mode_confidence\n                          )}`\n                        }}\n                      ></div>\n                    </div>\n                    <div\n                      className=\"confidence-bar\"\n                      style={{\n                        overflow: 'visible !important',\n                        backgroundColor: `rgba(${this.numberToColorHsl(\n                          trackAnalysis.track.tempo_confidence\n                        )},0.2)`,\n                        border: `1px solid rgb(${this.numberToColorHsl(\n                          trackAnalysis.track.tempo_confidence\n                        )}`\n                      }}\n                    >\n                      <p>{trackAnalysis.track.tempo.toFixed(2)}</p>\n                      <div\n                        style={{\n                          width:\n                            trackAnalysis.track.tempo_confidence * 100 + '%',\n                          backgroundColor: `rgb(${this.numberToColorHsl(\n                            trackAnalysis.track.tempo_confidence\n                          )}`\n                        }}\n                      ></div>\n                    </div>\n                    <div\n                      className=\"confidence-bar\"\n                      style={{\n                        backgroundColor: `rgba(${this.numberToColorHsl(\n                          trackAnalysis.track.time_signature_confidence\n                        )},0.2)`,\n                        border: `1px solid rgb(${this.numberToColorHsl(\n                          trackAnalysis.track.time_signature_confidence\n                        )}`\n                      }}\n                    >\n                      <p>{signatureMap[trackAnalysis.track.time_signature]}</p>\n                      <div\n                        style={{\n                          width:\n                            trackAnalysis.track.time_signature_confidence *\n                              100 +\n                            '%',\n                          backgroundColor: `rgb(${this.numberToColorHsl(\n                            trackAnalysis.track.time_signature_confidence\n                          )}`\n                        }}\n                      ></div>\n                    </div>\n                  </div>\n\n                  <div className=\"table-wrapper\">\n                    <table className=\"table is-bordered is-striped\">\n                      <thead>\n                        <tr>\n                          <th>section</th>\n                          <th>start</th>\n                          <th>duration</th>\n                          <th>key</th>\n                          <th>mode</th>\n                          <th>tempo</th>\n                          <th>meter</th>\n\n                          {/* {SortButton(\n                            'name',\n                            this.state.sort.column,\n                            this.state.sort.direction,\n                            (e: any) => {\n                              e.preventDefault();\n                              this.sortColumn('name');\n                            }\n                          )}\n\n                          {SortButton(\n                            'key',\n                            this.state.sort.column,\n                            this.state.sort.direction,\n                            (e: any) => {\n                              e.preventDefault();\n                              this.sortColumn('key');\n                            }\n                          )}\n\n                          {SortButton(\n                            'mode',\n                            this.state.sort.column,\n                            this.state.sort.direction,\n                            (e: any) => {\n                              e.preventDefault();\n                              this.sortColumn('mode');\n                            }\n                          )}\n\n                          {SortButton(\n                            'tempo',\n                            this.state.sort.column,\n                            this.state.sort.direction,\n                            (e: any) => {\n                              e.preventDefault();\n                              this.sortColumn('tempo');\n                            }\n                          )}\n\n                          {SortButton(\n                            'artist',\n                            this.state.sort.column,\n                            this.state.sort.direction,\n                            (e: any) => {\n                              e.preventDefault();\n                              this.sortColumn('artist');\n                            }\n                          )} */}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {trackAnalysis.sections.map((row: any, i: any) => (\n                          <tr>\n                            <td>{i + 1}</td>\n                            <td>{row.start}</td>\n                            <td>{row.duration}</td>\n                            <td\n                              style={{\n                                backgroundColor: `rgb(${this.numberToColorHsl(\n                                  row.key_confidence\n                                )}`\n                              }}\n                            >\n                              {keysMap[row.key]}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor: `rgb(${this.numberToColorHsl(\n                                  row.mode_confidence\n                                )}`\n                              }}\n                            >\n                              {modesMap[row.mode]}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor: `rgb(${this.numberToColorHsl(\n                                  row.tempo_confidence\n                                )}`\n                              }}\n                            >\n                              {row.tempo.toFixed(2)}\n                            </td>\n                            <td\n                              style={{\n                                backgroundColor: `rgb(${this.numberToColorHsl(\n                                  row.time_signature_confidence\n                                )}`\n                              }}\n                            >\n                              {signatureMap[row.time_signature]}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n\n            <button\n              className=\"modal-close is-large\"\n              aria-label=\"close\"\n              onClick={() => {\n                this.setState({ modalActive: false });\n              }}\n            ></button>\n          </div>\n        ) : null}\n        {!this.state.errorFetchingTracks ? (\n          <div className=\"tracks-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">{title}</p>\n                <p>\n                  This won't modify {title} or your library, selecting and\n                  deselecting tracks only modifies your selection of tracks in\n                  this app. Use the table below to select and deselect tracks.{' '}\n                  <NavLink to=\"/selection\">Export</NavLink> to modify and export\n                  your full selection of tracks, or continue to{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option value={key}>{key}</option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped\">\n                  <thead>\n                    <tr>\n                      <th>select</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr>\n                        <td align=\"center\">\n                          {!this.state.trackSelection.find(\n                            (track: any) => track && row && track.id === row.id\n                          ) ? (\n                            <AddIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.addToSelection(row);\n                              }}\n                            />\n                          ) : (\n                            <RemoveIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.removeFromSelection(row);\n                              }}\n                            />\n                          )}\n                        </td>\n                        <td>\n                          <a\n                            onClick={() => {\n                              this.getAnalysis(row);\n                            }}\n                          >\n                            {row.name}\n                          </a>\n                        </td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo).toFixed(2)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return {};\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { NavLink } from 'react-router-dom';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  UPDATE_SELECTION,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\n\ninterface TableProps {\n  userId: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n}\n\ninterface TableState {\n  trackList: any;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetching: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass SelectionTable extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection);\n\n    this.state = {\n      trackList: [],\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetching: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : []\n    };\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackSelection].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  async exportSelection(e: any) {\n    e.preventDefault();\n    const requestId = uuidv4();\n    const updatePlaylistRequestId = uuidv4();\n    const newPlaylistName = e.target.playlist_name.value;\n    const newPlaylistDescription = e.target.playlist_description.value;\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Creating New Playlist'\n      });\n      const exportedSelection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/users/${this.props.userId}/playlists`,\n          spotify_payload: {\n            name: newPlaylistName,\n            description: newPlaylistDescription\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (\n        !exportedSelection ||\n        !exportedSelection.data ||\n        !exportedSelection.data.id\n      ) {\n        return;\n      }\n\n      this.props.addPendingRequest({\n        id: updatePlaylistRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Adding Tracks To Playlist'\n      });\n\n      const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackSelection;\n\n      const updatedPlaylist = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/playlists/${exportedSelection.data.id}/tracks`,\n          spotify_payload: {\n            uris: tracks.map((track: any) => track.uri)\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (\n        !updatedPlaylist ||\n        !updatedPlaylist.data ||\n        !updatedPlaylist.data.snapshot_id\n      )\n        return;\n\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.SUCCESS,\n        text: `Created ${newPlaylistName}`,\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Creating Playlist',\n        id: uuidv4()\n      });\n    }\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackSelection;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    return (\n      <div className=\"user-selection-wrapper\">\n        {!this.state.errorFetching ? (\n          <>\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">Export To Spotify</p>\n                <p>\n                  Modify and export your current selection or return to your{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks\n                </p>\n              </div>\n            </div>\n            <div className=\"section\">\n              <div className=\"columns is-centered\">\n                <div className=\"form-wrapper box column is-half\">\n                  <div className=\"has-text-centered\">\n                    <p>Export Playlist</p>\n                  </div>\n\n                  <form\n                    id=\"playlist-form\"\n                    className=\"create-playlist-form\"\n                    onSubmit={e => this.exportSelection(e)}\n                  >\n                    <div className=\"playlist-inputs\">\n                      <div className=\"field\">\n                        <label htmlFor=\"name\" className=\"label\">\n                          Name\n                        </label>\n                        <input\n                          id=\"name\"\n                          className=\"input\"\n                          name=\"playlist_name\"\n                          placeholder=\"Playlist Name\"\n                        ></input>\n                      </div>\n                      <div className=\"field\">\n                        <label htmlFor=\"description\" className=\"label\">\n                          Description\n                        </label>\n                        <textarea\n                          id=\"description\"\n                          rows={2}\n                          className=\"playlist-description textarea\"\n                          name=\"playlist_description\"\n                          placeholder=\"Playlist Description\"\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div className=\"export-button-wrapper\">\n                      <button className=\"export-button button is-primary\">\n                        Create\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option value={key}>{key}</option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper field\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}{' '}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped \">\n                  <thead>\n                    <tr>\n                      <th>deselect</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr>\n                        <td align=\"center\">\n                          <RemoveIcon\n                            className={`selection-button-icon has-text-link ${\n                              this.state.disableTable ? 'disabled-icon' : ''\n                            }`}\n                            onClick={() => {\n                              this.removeFromSelection(row);\n                            }}\n                          />\n                        </td>\n                        <td>{row.name}</td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Track Selection, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { userId: state.auth.id };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\n\ninterface AjaxSpinnerProps {\n  requests: any[];\n}\ninterface AjaxSpinnerState {}\n\nclass AjaxSpinner extends Component<AjaxSpinnerProps, AjaxSpinnerState> {\n  constructor(props: AjaxSpinnerProps) {\n    super(props);\n    this.state = {};\n  }\n\n  // componentDidUpdate(previousProps: any) {\n  //   const previousLastRequest =\n  //     previousProps.requests[previousProps.requests.length - 1];\n  //   const lastRequest = this.props.requests[this.props.requests.length - 1];\n  //   if (\n  //     lastRequest &&\n  //     previousLastRequest &&\n  //     lastRequest.id !== previousLastRequest.id\n  //   ) {\n  //     this.renderSpinner();\n  //     return;\n  //   }\n\n  //   if (!previousLastRequest && lastRequest) {\n  //     this.renderSpinner();\n  //   }\n  // }\n\n  // renderSpinner() {\n  //   const request = this.props.requests[this.props.requests.length - 1];\n  //   if (!request) return;\n  //   setTimeout(() => {\n  //     this.props.finishRequest(request.id);\n  //   }, 2000);\n  // }\n\n  render() {\n    const { requests } = this.props;\n    const request = requests[requests.length - 1];\n    return request ? (\n      <div className=\"spinner-wrapper\">\n        <div className=\"spinner-content\">\n          <div>\n            <div className=\"spinner\"></div>\n          </div>\n          {request ? <p>{request.message}</p> : null}\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {};\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    requests: state.ajax.requests\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AjaxSpinner);\n","import './App.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bulma/css/bulma.css';\n\nimport reducer from './reducers/index.reducer';\n\nimport FlashMessages from './FlashMessages';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './components/home/Home';\nimport AlbumsAndPlaylists from './components/albumsAndPlaylists/AlbumsAndPlaylists';\nimport authRequired from './components/auth/RequireAuth';\nimport TracksTable from './components/tracks/TracksTable';\nimport SelectionTable from './components/userSelection/UserSelection';\nimport AjaxSpinner from './AjaxSpinner';\n\nconst store = createStore(\n  combineReducers(reducer),\n  composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n    // other store enhancers if any\n  )\n);\n\nconst renderFlashMessages = () => {};\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <AjaxSpinner />\n          <FlashMessages />\n          <Navbar />\n          <Switch>\n            <Route path=\"/search\"></Route>\n            <Route\n              path=\"/your-playlists\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'PLAYLISTS'\n              })}\n            ></Route>\n            <Route\n              path=\"/your-albums\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'ALBUMS'\n              })}\n            ></Route>\n            <Route path=\"/tracks\" component={authRequired(TracksTable)}></Route>\n            <Route\n              path=\"/selection\"\n              component={authRequired(SelectionTable)}\n            ></Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}