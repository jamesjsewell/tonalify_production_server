{"version":3,"sources":["components/navbar/tonalify.svg","reducers/track-selection.reducer.ts","reducers/auth.reducer.ts","reducers/flash-messages.reducer.ts","reducers/ajax.reducer.ts","reducers/index.reducer.ts","constants/constants.ts","actions/selection.actions.ts","actions/auth.actions.ts","actions/flash-messages.actions.ts","actions/ajax.actions.ts","FlashMessages.tsx","components/navbar/Navbar.tsx","components/home/Home.tsx","components/albumsAndPlaylists/AlbumsAndPlaylists.tsx","components/auth/RequireAuth.tsx","components/tracks/TracksTable.tsx","components/userSelection/UserSelection.tsx","AjaxSpinner.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","isAuthenticated","id","isLoading","requests","AJAX_REQUEST_TYPES","FLASH_MESSAGE_TYPES","trackSelection","state","action","type","payload","auth","flashMessages","filter","message","ajax","request","API_ROOT","HTTP_ORIGIN","FlashMessages","props","previousProps","previousLastMessage","length","lastMessage","this","renderFlashMessage","setTimeout","deleteFlashMessage","className","SUCCESS","text","ERROR","Component","connect","dispatch","Navbar","mobile","requestId","uuidv4","addPendingRequest","PROFILE","axios","get","withCredentials","loggedOut","finishPendingRequest","data","deauthenticate","setState","to","src","Logo","role","aria-label","data-target","onClick","e","clickHamburger","aria-hidden","activeClassName","logout","Home","displayName","authenticateUser","code","URLSearchParams","window","location","search","getProfile","addFlashMessage","post","spotify_path","spotify_payload","crud_operation","headers","profile","authenticate","display_name","loginUri","href","preventDefault","login","userId","AlbumsAndPlaylists","collection","showTracks","tracksPath","showTable","selectedPlaylistPath","selectedPlaylistTitle","errorFetching","query","spotifyPath","getPlaylists","USER_LIBRARY","items","next","concat","map","item","album","title","history","push","description","name","toLocaleLowerCase","toString","toLowerCase","includes","filterCollection","htmlFor","onChange","target","value","placeholder","open","images","url","compose","withRouter","ComposedComponent","extraProps","Authenticate","checkAndRedirect","React","keysMap","0","1","2","3","4","5","6","7","8","9","10","11","modesMap","SortButton","column","selectedColumn","direction","sortColumn","Table","trackList","filtered","key","mode","sort","errorFetchingTracks","disableTable","getTracks","getUserSelection","selection","updateSelection","featuresRequestId","tracks","track","tracksFeaturesResponse","tracksFeatures","audio_features","updatedTrackList","features","find","selected","tempo","artist","artists","console","log","passesFilter","property","new_track","Array","isArray","delete_track","filteredTracks","first","second","getFilteredTracks","sortedTracks","getSortedTracks","filterByKey","disabled","row","align","removeFromSelection","addToSelection","Number","SelectionTable","updatePlaylistRequestId","newPlaylistName","playlist_name","newPlaylistDescription","playlist_description","exportedSelection","uris","uri","updatedPlaylist","snapshot_id","onSubmit","exportSelection","rows","AjaxSpinner","store","createStore","combineReducers","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","App","path","component","authRequired","TracksTable","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a841f6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tonalify.8482fd0a.svg\";","import { UPDATE_SELECTION } from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function trackSelectionReducer(\n  state = initialState,\n  action: { type: string; payload: any[] }\n) {\n  switch (action.type) {\n    case UPDATE_SELECTION:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n","import { DEAUTHENTICATE, AUTHENTICATE } from '../actions/index.actions';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  id: string | null;\n}\n\nconst initialState = { isAuthenticated: false, id: null };\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: string }\n) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return { ...state, isAuthenticated: true, id: action.payload };\n    case DEAUTHENTICATE:\n      return { ...state, isAuthenticated: false, id: null };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_FLASH_MESSAGE,\n  DELETE_FLASH_MESSAGE\n} from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_FLASH_MESSAGE:\n      return [...state, action.payload];\n    case DELETE_FLASH_MESSAGE:\n      return [...state].filter((message: any) => message.id != action.payload);\n    default:\n      return state;\n  }\n}\n","import {\n  IS_LOADING,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../actions/index.actions';\n\nexport interface AjaxState {\n  isLoading: boolean;\n  requests: any[];\n}\n\nconst initialState = { isLoading: false, requests: [] };\nexport default function ajaxReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_PENDING_REQUEST:\n      return { ...state, requests: [...state.requests, action.payload] };\n    case FINISH_PENDING_REQUEST:\n      return {\n        ...state,\n        requests: [...state.requests].filter(\n          (request: any) => !!request.id === action.payload\n        )\n      };\n    case IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import trackSelectionReducer from './track-selection.reducer';\nimport authReducer from './auth.reducer';\nimport { AuthState } from './auth.reducer';\nimport flashMessagesReducer from './flash-messages.reducer';\nimport ajaxReducer from './ajax.reducer';\nimport { AjaxState } from './ajax.reducer';\n\nexport interface GlobalState {\n  trackSelection: any[];\n  auth: AuthState;\n  flashMessages: any[];\n  ajax: AjaxState;\n}\n\nexport default {\n  trackSelection: trackSelectionReducer,\n  auth: authReducer,\n  flashMessages: flashMessagesReducer,\n  ajax: ajaxReducer\n};\n","// https://yfitops.herokuapp.com root\n// 'http://localhost:4200' root\n//https://tonalify.herokuapp.com origin\n//http://localhost:3000 origin\nexport const API_ROOT = 'https://yfitops.herokuapp.com';\nexport const HTTP_ORIGIN = 'https://tonalify.herokuapp.com';\nexport enum AJAX_REQUEST_TYPES {\n  'PROFILE',\n  'USER_LIBRARY'\n}\nexport enum FLASH_MESSAGE_TYPES {\n  'ERROR',\n  'SUCCESS'\n}\n","export const UPDATE_SELECTION = 'UPDATE_SELECTION';\n","export const AUTHENTICATE = 'AUTHENTICATE';\nexport const DEAUTHENTICATE = 'DEAUTHENTICATE';\n","export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\n","export const IS_LOADING = 'IS_LOADING';\nexport const ADD_PENDING_REQUEST = 'ADD_PENDING_REQUEST';\nexport const FINISH_PENDING_REQUEST = 'FINISH_PENDING_REQUEST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\nimport { DELETE_FLASH_MESSAGE } from './actions/index.actions';\nimport { FLASH_MESSAGE_TYPES } from './constants/constants';\ninterface FlashMessagesProps {\n  flashMessages: any[];\n  deleteFlashMessage: Function;\n}\ninterface FlashMessagesState {\n  message: any;\n}\n\nclass FlashMessages extends Component<FlashMessagesProps, FlashMessagesState> {\n  constructor(props: FlashMessagesProps) {\n    super(props);\n    this.state = {\n      message: null\n    };\n  }\n\n  componentDidUpdate(previousProps: any) {\n    const previousLastMessage =\n      previousProps.flashMessages[previousProps.flashMessages.length - 1];\n    const lastMessage = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (\n      lastMessage &&\n      previousLastMessage &&\n      lastMessage.id !== previousLastMessage.id\n    ) {\n      this.renderFlashMessage();\n      return;\n    }\n\n    if (!previousLastMessage && lastMessage) {\n      this.renderFlashMessage();\n    }\n  }\n\n  renderFlashMessage() {\n    const message = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (!message) return;\n    setTimeout(() => {\n      this.props.deleteFlashMessage(message.id);\n    }, 5000);\n  }\n\n  render() {\n    const { flashMessages } = this.props;\n    const message = flashMessages[flashMessages.length - 1];\n    return (\n      <div className=\"flash-messages-wrapper\">\n        {message ? (\n          <div className=\"flash-message-content\">\n            {message.type === FLASH_MESSAGE_TYPES.SUCCESS ? (\n              <div className=\"notification is-success\">{message.text}</div>\n            ) : null}\n\n            {message.type === FLASH_MESSAGE_TYPES.ERROR ? (\n              <div className=\"notification is-danger\">{message.text}</div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteFlashMessage: (id: string) =>\n      dispatch({ type: DELETE_FLASH_MESSAGE, payload: id })\n  };\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    flashMessages: state.flashMessages\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashMessages);\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  DEAUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport { API_ROOT, AJAX_REQUEST_TYPES } from '../../constants/constants';\nimport Logo from './tonalify.svg';\n\ninterface NavbarProps {\n  deauthenticate: Function;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  isAuthenticated: boolean;\n}\n\ninterface NavbarState {\n  mobile: boolean;\n}\n\nclass Navbar extends Component<NavbarProps, NavbarState> {\n  constructor(props: NavbarProps) {\n    super(props);\n    this.state = {\n      mobile: false\n    };\n  }\n  async logout() {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.PROFILE,\n      message: 'Logging Out'\n    });\n    const loggedOut = await axios.get(`${API_ROOT}/logout`, {\n      withCredentials: true\n    });\n\n    this.props.finishPendingRequest(requestId);\n\n    if (!loggedOut || !loggedOut.data) return;\n\n    this.props.deauthenticate();\n  }\n\n  clickHamburger() {\n    this.setState({ mobile: !!this.state.mobile ? false : true });\n  }\n  render() {\n    return (\n      <nav className=\"navbar-wrapper navbar is-spaced\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className=\"navbar-tonalify-link navbar-item is-family-sans-serif has-text-primary has-text-weight-bold\"\n            to=\"/home\"\n          >\n            <img src={Logo} />\n          </NavLink>\n\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${\n              this.state.mobile ? 'is-active' : ''\n            }`}\n            aria-label=\"menu\"\n            data-target=\"nav-menu\"\n            onClick={e => this.clickHamburger()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"nav-menu\"\n          className={`navbar-menu ${this.state.mobile ? 'is-active' : ''}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/home\"\n              activeClassName=\"is-active\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/your-playlists\"\n              activeClassName=\"is-active\"\n            >\n              Playlists\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/your-albums\"\n              activeClassName=\"is-active\"\n            >\n              Albums\n            </NavLink>\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/selection\"\n              activeClassName=\"is-active\"\n            >\n              Export\n            </NavLink>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                {this.props.isAuthenticated ? (\n                  <a className=\"button is-light\" onClick={() => this.logout()}>\n                    Logout\n                  </a>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deauthenticate: () => dispatch({ type: DEAUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\n\ninterface HomeProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n}\n\ninterface HomeState {\n  displayName: string;\n}\n\nclass Home extends Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = { displayName: '' };\n  }\n\n  componentDidMount() {\n    this.authenticateUser();\n  }\n\n  async authenticateUser() {\n    const requestId = uuidv4();\n    try {\n      const code = new URLSearchParams(window.location.search).get('code');\n      if (code) {\n        this.props.addPendingRequest({\n          id: requestId,\n          type: AJAX_REQUEST_TYPES.PROFILE,\n          message: 'Authenticating'\n        });\n        await axios.get(`${API_ROOT}/authorize?code=${code}`, {\n          withCredentials: true\n        });\n\n        this.getProfile();\n      }\n      this.props.finishPendingRequest(requestId);\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Authenticating',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getProfile() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Fetching Profile'\n      });\n      const profile = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: 'https://api.spotify.com/v1/me',\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (profile.data && profile.data.id) {\n        this.props.authenticate(profile.data.id);\n        this.setState({ displayName: profile.data.display_name });\n\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async login() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Logging In'\n      });\n      const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n      this.props.finishPendingRequest(requestId);\n      if (loginUri && loginUri.data) {\n        window.location.href = loginUri.data;\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const { displayName } = this.state;\n    return (\n      <div className=\"home-view-wrapper\">\n        {isAuthenticated ? (\n          <div className=\"section\">\n            <div className=\"container is-widescreen has-text-centered\">\n              <p className=\"title\">Welcome, {displayName}</p>{' '}\n              <p>\n                Browse your library and make track selections based on key or\n                tempo, then export your selection as a Spotify playlist. This\n                app won't modify your playlists, it will only add new playlists\n                that you create\n              </p>\n            </div>\n            <div className=\"section\">\n              <div className=\"container is-widescreen has-text-centered\">\n                <div className=\"links\">\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-albums\"\n                  >\n                    <p>Your Albums</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-playlists\"\n                  >\n                    <p>Your Playlists</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/selection\"\n                  >\n                    <p>Export Selection</p>\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {!isAuthenticated ? (\n          <div className=\"section\">\n            <div className=\"container is-fullwidth has-text-centered\">\n              <a\n                href=\"\"\n                onClick={e => {\n                  e.preventDefault();\n                  this.login();\n                }}\n              >\n                Login\n              </a>{' '}\n              using your Spotify account to continue\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: (userId: string) =>\n      dispatch({ type: AUTHENTICATE, payload: userId }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AlbumsAndPlaylistsProps {\n  route: any;\n  history: any;\n  type: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\ninterface AlbumsAndPlaylistsState {\n  collection: any[];\n  showTracks: boolean;\n  tracksPath: string;\n  showTable: boolean;\n  selectedPlaylistPath: string;\n  selectedPlaylistTitle: string;\n  errorFetching: boolean;\n  query: string;\n  spotifyPath: string;\n}\n\nclass AlbumsAndPlaylists extends Component<\n  AlbumsAndPlaylistsProps,\n  AlbumsAndPlaylistsState\n> {\n  constructor(props: AlbumsAndPlaylistsProps) {\n    super(props);\n    this.state = {\n      collection: [],\n      showTracks: false,\n      tracksPath: '',\n      showTable: false,\n      selectedPlaylistPath: '',\n      selectedPlaylistTitle: '',\n      errorFetching: false,\n      query: '',\n      spotifyPath:\n        this.props.type === 'PLAYLISTS'\n          ? 'https://api.spotify.com/v1/me/playlists?limit=50'\n          : 'https://api.spotify.com/v1/me/albums?limit=50'\n    };\n  }\n\n  componentDidMount() {\n    this.getPlaylists();\n  }\n\n  async getPlaylists() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message:\n          this.props.type === 'PLAYLISTS'\n            ? 'Fetching Playlists'\n            : 'Fetching Albums'\n      });\n      const collection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!collection || !collection.data || !collection.data.items) return;\n\n      const { next } = collection.data;\n\n      this.setState(\n        {\n          collection: [...this.state.collection].concat(\n            this.props.type === 'PLAYLISTS'\n              ? collection.data.items\n              : collection.data.items.map((item: any) => item.album)\n          ),\n          spotifyPath: next\n        },\n        () => {\n          if (!next) return;\n          this.getPlaylists();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.setState({ errorFetching: true });\n    }\n  }\n\n  open(id: string, title: string) {\n    this.props.history.push(\n      `/tracks?spotify_path=https://api.spotify.com/v1/${\n        this.props.type === 'PLAYLISTS' ? 'playlists' : 'albums'\n      }/${id}/tracks&title=${title}`\n    );\n  }\n\n  search(query: any) {\n    this.setState({ query });\n  }\n\n  filterCollection() {\n    return [...this.state.collection].filter((item: any) => {\n      const { description, name } = item;\n      const query = this.state.query.toLocaleLowerCase();\n      if (\n        (description &&\n          description\n            .toString()\n            .toLowerCase()\n            .includes(query)) ||\n        (name &&\n          name\n            .toString()\n            .toLowerCase()\n            .includes(query))\n      )\n        return item;\n    });\n  }\n\n  render() {\n    let items =\n      this.state.query && this.state.query.length\n        ? this.filterCollection()\n        : this.state.collection;\n    return (\n      <div className=\"playlists-view-wrapper\">\n        <div className=\"section\">\n          <div className=\"container has-text-centered playlists-and-albums-header\">\n            <p className=\"title\">\n              Your {this.props.type === 'PLAYLISTS' ? 'Playlists' : 'Albums'}\n            </p>\n\n            <p>\n              Choose{' '}\n              {this.props.type === 'PLAYLISTS' ? 'a playlist' : 'an album'} to\n              select tracks from\n            </p>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"container is-widescreen\">\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"search-input\">\n                Search Your{' '}\n                {this.props.type === 'PLAYLISTS' ? 'Playlists' : 'Albums'}\n              </label>\n              <div className=\"search-playlists-input-wrapper\">\n                <input\n                  id=\"search-input\"\n                  className=\"search-input input\"\n                  onChange={e => this.search(e.target.value)}\n                  placeholder=\"Search\"\n                  value={this.state.query}\n                ></input>\n                {this.state.query.length ? (\n                  <button\n                    onClick={() => {\n                      this.setState({ query: '' });\n                    }}\n                  >\n                    <CloseIcon className=\"has-text-link\" />\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            {!this.state.errorFetching ? (\n              <div className=\"playlists-wrapper\">\n                {items.map((item: any) => (\n                  <div\n                    className=\"playlist-wrapper has-background-grey-lighter\"\n                    onClick={() => this.open(item.id, item.name)}\n                  >\n                    {item.images[0] ? (\n                      <img\n                        className=\"cover-image\"\n                        src={item.images[0].url}\n                      ></img>\n                    ) : (\n                      <div className=\"cover-image\"></div>\n                    )}\n                    <p>{item.name}</p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"notification is-danger\">\n                Error Loading{' '}\n                {this.props.type === 'PLAYLISTS' ? 'Playlists' : 'Albums'},\n                Refresh the Page\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: () => dispatch({ type: AUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(AlbumsAndPlaylists);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  AUTHENTICATE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AuthenticateProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\nexport default function(ComposedComponent: any, extraProps?: any): any {\n  class Authenticate extends React.Component<AuthenticateProps> {\n    componentDidMount() {\n      this.checkAndRedirect();\n    }\n\n    componentDidUpdate() {\n      this.checkAndRedirect();\n    }\n\n    async checkAndRedirect() {\n      const { isAuthenticated } = this.props;\n      if (isAuthenticated) return;\n      const requestId = uuidv4();\n\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          message: 'Fetching Profile',\n          type: AJAX_REQUEST_TYPES.PROFILE\n        });\n\n        const profile = await axios.post(\n          `${API_ROOT}/spotify-request`,\n          {\n            spotify_path: 'https://api.spotify.com/v1/me',\n            spotify_payload: null,\n            crud_operation: 'get'\n          },\n          {\n            withCredentials: true,\n            headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n          }\n        );\n\n        this.props.finishPendingRequest(requestId);\n\n        if (profile.data && profile.data.id) {\n          this.props.authenticate(profile.data.id);\n          return;\n        }\n\n        this.props.history.push('/home');\n      } catch (error) {\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          {this.props.isAuthenticated ? (\n            <ComposedComponent {...(this.props, extraProps)} />\n          ) : null}\n        </div>\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch: any) => {\n    return {\n      authenticate: (userId: string) =>\n        dispatch({ type: AUTHENTICATE, payload: userId }),\n      addPendingRequest: (request: any) =>\n        dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n      finishPendingRequest: (id: any) =>\n        dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n    };\n  };\n\n  const mapStateToProps = (state: GlobalState) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(Authenticate);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  UPDATE_SELECTION,\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\n\nconst keysMap: any = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B'\n};\n\nconst modesMap: any = {\n  0: 'minor',\n  1: 'major'\n};\n\ninterface TableProps {\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  spotifyPath: string | null;\n  updateSelection: Function;\n  trackSelection: any[];\n}\n\ninterface TableState {\n  trackList: any;\n  spotifyPath: string | null;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetchingTracks: boolean;\n  disableTable: boolean;\n  query: string;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass Table extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n    this.state = {\n      trackList: [],\n      spotifyPath: new URLSearchParams(window.location.search).get(\n        'spotify_path'\n      ),\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetchingTracks: false,\n      disableTable: false,\n      query: ''\n    };\n\n    this.getTracks();\n    this.getUserSelection();\n  }\n\n  async getUserSelection() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        message: 'Fetching User Selection'\n      });\n      const selection = await axios.get(`${API_ROOT}/user/track-selection`, {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': HTTP_ORIGIN\n        }\n      });\n\n      this.props.finishPendingRequest(requestId);\n\n      this.props.updateSelection(selection.data);\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getTracks() {\n    const requestId = uuidv4();\n    const featuresRequestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Tracks'\n      });\n\n      const tracks = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!tracks.data || !tracks.data.items) return;\n\n      const { items, next } = tracks.data;\n\n      this.props.addPendingRequest({\n        id: featuresRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Audio Details'\n      });\n\n      const tracksFeaturesResponse = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/audio-features?ids=${items.map(\n            (item: any) => {\n              if (item.track) {\n                item = item.track;\n              }\n              return item.id;\n            }\n          )}`,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(featuresRequestId);\n\n      let tracksFeatures: [] = [];\n\n      if (\n        tracksFeaturesResponse &&\n        tracksFeaturesResponse.data &&\n        tracksFeaturesResponse.data.audio_features\n      ) {\n        tracksFeatures = tracksFeaturesResponse.data.audio_features;\n      }\n\n      const updatedTrackList = [...this.state.trackList].concat(\n        items.map((item: any) => {\n          if (item.track) {\n            item = item.track;\n          }\n          const features: any | undefined = tracksFeatures.find(\n            (track: any) => track && item && track.id === item.id\n          );\n\n          return {\n            ...item,\n            selected: false,\n            tempo: features ? features.tempo : null,\n            key: features ? keysMap[features.key] : null,\n            mode: features ? modesMap[features.mode] : null,\n            artist:\n              item.artists && item.artists.length ? item.artists[0].name : null\n          };\n        })\n      );\n\n      this.setState(\n        {\n          ...this.state,\n          trackList: updatedTrackList,\n          spotifyPath: next,\n          errorFetchingTracks: false\n        },\n        () => {\n          if (!next) return;\n          this.getTracks();\n        }\n      );\n    } catch (error) {\n      console.log(error);\n      this.props.finishPendingRequest(requestId);\n      this.props.finishPendingRequest(featuresRequestId);\n      this.setState({\n        ...this.state,\n        errorFetchingTracks: true\n      });\n    }\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackList].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  async addToSelection(track: any) {\n    this.setState({ disableTable: true });\n    try {\n      const selection = await axios.post(\n        `${API_ROOT}/user/track-selection`,\n        {\n          new_track: track\n        },\n        {\n          withCredentials: true,\n          headers: {\n            'Access-Control-Allow-Origin': HTTP_ORIGIN\n          }\n        }\n      );\n      this.setState({ disableTable: false });\n      if (!selection || !selection.data) return;\n\n      if (selection.data && Array.isArray(selection.data)) {\n        this.props.updateSelection(selection.data);\n        return;\n      }\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: `Error selecting ${track.name}`,\n        id: uuidv4()\n      });\n      this.setState({ disableTable: false });\n    }\n  }\n\n  async removeFromSelection(track: any) {\n    this.setState({ disableTable: true });\n    try {\n      const selection = await axios.post(\n        `${API_ROOT}/user/track-selection`,\n        {\n          delete_track: track\n        },\n        {\n          withCredentials: true,\n          headers: {\n            'Access-Control-Allow-Origin': HTTP_ORIGIN\n          }\n        }\n      );\n\n      this.setState({ disableTable: false });\n\n      if (selection.data && Array.isArray(selection.data)) {\n        this.props.updateSelection(selection.data);\n        return;\n      }\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: `Error deselecting ${track.name}`,\n        id: uuidv4()\n      });\n      this.setState({ disableTable: false });\n    }\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackList;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const title = new URLSearchParams(window.location.search).get('title');\n\n    return (\n      <div className=\"tracks-view-wrapper\">\n        {!this.state.errorFetchingTracks ? (\n          <div className=\"tracks-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">{title}</p>\n                <p>\n                  This won't modify {title} or your library, selecting and\n                  deselecting tracks only modifies your selection of tracks in\n                  this app. Use the table below to select and deselect tracks.{' '}\n                  <NavLink to=\"/selection\">Export</NavLink> to modify and export\n                  your full selection of tracks, or continue to{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option value={key}>{key}</option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped\">\n                  <thead>\n                    <tr>\n                      <th>select</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr>\n                        <td align=\"center\">\n                          {!this.props.trackSelection.find(\n                            track => track.id === row.id\n                          ) ? (\n                            <AddIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.addToSelection(row);\n                              }}\n                            />\n                          ) : (\n                            <RemoveIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.removeFromSelection(row);\n                              }}\n                            />\n                          )}\n                        </td>\n                        <td>{row.name}</td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { trackSelection: state.trackSelection };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    updateSelection: (selection: any[]) =>\n      dispatch({ type: UPDATE_SELECTION, payload: selection }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { NavLink } from 'react-router-dom';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  UPDATE_SELECTION,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\n\ninterface TableProps {\n  updateSelection: Function;\n  trackSelection: any[];\n  userId: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n}\n\ninterface TableState {\n  trackList: any;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetching: boolean;\n  disableTable: boolean;\n  query: string;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass SelectionTable extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n    this.state = {\n      trackList: [],\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetching: false,\n      disableTable: false,\n      query: ''\n    };\n\n    this.getTracks();\n  }\n\n  async getTracks() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Selection'\n      });\n      const tracks = await axios.get(`${API_ROOT}/user/track-selection`, {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': HTTP_ORIGIN\n        }\n      });\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!tracks.data || !tracks.data.length) return;\n\n      this.props.updateSelection(tracks.data);\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.setState({ errorFetching: true });\n    }\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.props.trackSelection].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  async removeFromSelection(track: any) {\n    this.setState({ disableTable: true });\n    try {\n      const selection = await axios.post(\n        `${API_ROOT}/user/track-selection`,\n        {\n          delete_track: track\n        },\n        {\n          withCredentials: true,\n          headers: {\n            'Access-Control-Allow-Origin': HTTP_ORIGIN\n          }\n        }\n      );\n\n      this.props.updateSelection(selection.data);\n\n      this.setState({ disableTable: false });\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: `Error selecting ${track.name}`,\n        id: uuidv4()\n      });\n      this.setState({ disableTable: false });\n    }\n  }\n\n  async exportSelection(e: any) {\n    e.preventDefault();\n    const requestId = uuidv4();\n    const updatePlaylistRequestId = uuidv4();\n    const newPlaylistName = e.target.playlist_name.value;\n    const newPlaylistDescription = e.target.playlist_description.value;\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Creating New Playlist'\n      });\n      const exportedSelection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/users/${this.props.userId}/playlists`,\n          spotify_payload: {\n            name: newPlaylistName,\n            description: newPlaylistDescription\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (\n        !exportedSelection ||\n        !exportedSelection.data ||\n        !exportedSelection.data.id\n      ) {\n        return;\n      }\n\n      this.props.addPendingRequest({\n        id: updatePlaylistRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Adding Tracks To Playlist'\n      });\n\n      const updatedPlaylist = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/playlists/${exportedSelection.data.id}/tracks`,\n          spotify_payload: {\n            uris: this.props.trackSelection.map(track => track.uri)\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (\n        !updatedPlaylist ||\n        !updatedPlaylist.data ||\n        !updatedPlaylist.data.snapshot_id\n      )\n        return;\n\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.SUCCESS,\n        text: `Created ${newPlaylistName}`,\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Creating Playlist',\n        id: uuidv4()\n      });\n    }\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.props.trackSelection;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    // this.props.addFlashMessage({\n    //   type: FLASH_MESSAGE_TYPES.SUCCESS,\n    //   text: 'Created New Playlist',\n    //   id: uuidv4()\n    // });\n\n    return (\n      <div className=\"user-selection-wrapper\">\n        {!this.state.errorFetching ? (\n          <>\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">Export To Spotify</p>\n                <p>\n                  Modify and export your current selection or return to your{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks\n                </p>\n              </div>\n            </div>\n            <div className=\"section\">\n              <div className=\"columns is-centered\">\n                <div className=\"form-wrapper box column is-half\">\n                  <div className=\"has-text-centered\">\n                    <p>Export Playlist</p>\n                  </div>\n\n                  <form\n                    id=\"playlist-form\"\n                    className=\"create-playlist-form\"\n                    onSubmit={e => this.exportSelection(e)}\n                  >\n                    <div className=\"playlist-inputs\">\n                      <div className=\"field\">\n                        <label htmlFor=\"name\" className=\"label\">\n                          Name\n                        </label>\n                        <input\n                          id=\"name\"\n                          className=\"input\"\n                          name=\"playlist_name\"\n                          placeholder=\"Playlist Name\"\n                        ></input>\n                      </div>\n                      <div className=\"field\">\n                        <label htmlFor=\"description\" className=\"label\">\n                          Description\n                        </label>\n                        <textarea\n                          id=\"description\"\n                          rows={2}\n                          className=\"playlist-description textarea\"\n                          name=\"playlist_description\"\n                          placeholder=\"Playlist Description\"\n                        ></textarea>\n                      </div>\n                    </div>\n                    <div className=\"export-button-wrapper\">\n                      <button className=\"export-button button is-primary\">\n                        Create\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option value={key}>{key}</option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper field\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}{' '}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped \">\n                  <thead>\n                    <tr>\n                      <th>deselect</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr>\n                        <td align=\"center\">\n                          <RemoveIcon\n                            className={`selection-button-icon has-text-link ${\n                              this.state.disableTable ? 'disabled-icon' : ''\n                            }`}\n                            onClick={() => {\n                              this.removeFromSelection(row);\n                            }}\n                          />\n                        </td>\n                        <td>{row.name}</td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Track Selection, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  return { trackSelection: state.trackSelection, userId: state.auth.id };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    updateSelection: (selection: any[]) =>\n      dispatch({ type: UPDATE_SELECTION, payload: selection }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\n\ninterface AjaxSpinnerProps {\n  requests: any[];\n}\ninterface AjaxSpinnerState {}\n\nclass AjaxSpinner extends Component<AjaxSpinnerProps, AjaxSpinnerState> {\n  constructor(props: AjaxSpinnerProps) {\n    super(props);\n    this.state = {};\n  }\n\n  // componentDidUpdate(previousProps: any) {\n  //   const previousLastRequest =\n  //     previousProps.requests[previousProps.requests.length - 1];\n  //   const lastRequest = this.props.requests[this.props.requests.length - 1];\n  //   if (\n  //     lastRequest &&\n  //     previousLastRequest &&\n  //     lastRequest.id !== previousLastRequest.id\n  //   ) {\n  //     this.renderSpinner();\n  //     return;\n  //   }\n\n  //   if (!previousLastRequest && lastRequest) {\n  //     this.renderSpinner();\n  //   }\n  // }\n\n  // renderSpinner() {\n  //   const request = this.props.requests[this.props.requests.length - 1];\n  //   if (!request) return;\n  //   setTimeout(() => {\n  //     this.props.finishRequest(request.id);\n  //   }, 2000);\n  // }\n\n  render() {\n    const { requests } = this.props;\n    const request = requests[requests.length - 1];\n    return request ? (\n      <div className=\"spinner-wrapper\">\n        <div className=\"spinner-content\">\n          <div>\n            <div className=\"spinner\"></div>\n          </div>\n          {request ? <p>{request.message}</p> : null}\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {};\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    requests: state.ajax.requests\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AjaxSpinner);\n","import './App.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bulma/css/bulma.css';\n\nimport reducer from './reducers/index.reducer';\n\nimport FlashMessages from './FlashMessages';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './components/home/Home';\nimport AlbumsAndPlaylists from './components/albumsAndPlaylists/AlbumsAndPlaylists';\nimport authRequired from './components/auth/RequireAuth';\nimport TracksTable from './components/tracks/TracksTable';\nimport SelectionTable from './components/userSelection/UserSelection';\nimport AjaxSpinner from './AjaxSpinner';\n\nconst store = createStore(\n  combineReducers(reducer),\n  composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n    // other store enhancers if any\n  )\n);\n\nconst renderFlashMessages = () => {};\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <AjaxSpinner />\n          <FlashMessages />\n          <Navbar />\n          <Switch>\n            <Route path=\"/search\"></Route>\n            <Route\n              path=\"/your-playlists\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'PLAYLISTS'\n              })}\n            ></Route>\n            <Route\n              path=\"/your-albums\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'ALBUMS'\n              })}\n            ></Route>\n            <Route path=\"/tracks\" component={authRequired(TracksTable)}></Route>\n            <Route\n              path=\"/selection\"\n              component={authRequired(SelectionTable)}\n            ></Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}