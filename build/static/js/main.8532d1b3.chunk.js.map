{"version":3,"sources":["components/navbar/tonalify.svg","reducers/track-selection.reducer.ts","reducers/auth.reducer.ts","reducers/flash-messages.reducer.ts","reducers/ajax.reducer.ts","reducers/index.reducer.ts","constants/constants.ts","actions/selection.actions.ts","actions/auth.actions.ts","actions/flash-messages.actions.ts","actions/ajax.actions.ts","FlashMessages.tsx","components/auth/login.ts","components/navbar/Navbar.tsx","checkStorage.js","htmlScrollLock.js","components/analysisModal/TrackAnalysisModal.tsx","components/tracks/TracksTable.tsx","components/search/Search.tsx","components/home/Home.tsx","components/albumsAndPlaylists/AlbumsAndPlaylists.tsx","components/auth/Auth.tsx","components/userSelection/UserSelection.tsx","AjaxSpinner.tsx","App.tsx","googleAnalyticsCreds.js","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","isAuthenticated","id","isLoading","requests","AJAX_REQUEST_TYPES","FLASH_MESSAGE_TYPES","trackSelection","state","action","type","payload","auth","flashMessages","filter","message","ajax","request","API_ROOT","HTTP_ORIGIN","KEYS_MAP","0","1","2","3","4","5","6","7","8","9","10","11","MODES_MAP","METER_MAP","FlashMessages","props","previousProps","previousLastMessage","length","lastMessage","this","renderFlashMessage","setTimeout","deleteFlashMessage","className","SUCCESS","text","ERROR","Component","connect","dispatch","login","addPendingRequest","finishPendingRequest","addFlashMessage","a","requestId","uuidv4","PROFILE","axios","get","loginUri","data","window","location","href","Navbar","mobile","withCredentials","loggedOut","localStorage","removeItem","deauthenticate","setState","to","src","Logo","role","aria-label","data-target","onClick","e","clickHamburger","aria-hidden","activeClassName","logout","get_local_storage_status","setItem","name","alert","remainingSpace","disableBodyScroll","$node","dispatchEvent","CustomEvent","bubbles","updateDocumentElement","locked","document","body","style","overflow","documentElement","overflowY","addEventListener","target","bodyScrollLock","TrackAnalysisModal","fetchingAnalysis","trackAnalysis","altAnalysis","fetchingAltAnalysis","showAltAnalysis","querySelector","getAnalysis","i","hue2rgb","p","q","t","rgb","h","s","l","r","g","b","Math","floor","hslToRgb","track","external_ids","isrc","cachedAnalysis","getItem","parsedAnalysis","JSON","parse","post","headers","acousticBrainz","tonal","altData","metadata","tags","title","album","artist","cached","analysis","key_key","key_scale","key_strength","chords_key","chords_scale","rhythm","bpm","stringify","getAcousticBrainzAnalysis","USER_LIBRARY","searchResults","spotify_path","spotify_payload","crud_operation","analyzed","analyzedTrack","sections","key","key_confidence","mode","mode_confidence","time_signature","time_signature_confidence","tempo","tempo_confidence","closeModal","newValues","selectionString","updatedSelection","map","cachedTrack","refreshSelection","addToSelection","removeFromSelection","find","position","top","left","transform","width","height","background","display","justifyContent","alignItems","padding","marginTop","selectionTrack","cursor","textAlign","margin","flexWrap","flexBasis","flexGrow","border","borderRadius","whiteSpace","toFixed","checked","altKey","updateSelection","altMode","altTempo","backgroundColor","numberToColorHsl","row","confidence","Date","start","toISOString","substr","duration","authenticate","SortButton","column","selectedColumn","direction","sortColumn","Table","storedSelection","parsedSelection","trackList","spotifyPath","filtered","sort","errorFetchingTracks","disableTable","query","modalActive","trackToAnalyze","next","getTracks","featuresRequestId","tracksRequest","items","tracks","tracksArray","item","tracksFeaturesResponse","tracksFeatures","audio_features","updatedTrackList","concat","features","selected","artists","albumName","value","passesFilter","property","toString","toLowerCase","includes","toLocaleLowerCase","oldSelection","filteredTracks","first","second","getFilteredTracks","sortedTracks","getSortedTracks","onChange","filterByKey","disabled","search","placeholder","preventDefault","align","Number","SearchBy","Search","itemList","errorFetchingItems","searchBy","TRACK","artistsPath","nextArtists","albums","albumsPath","nextAlbums","selectedAlbum","showAlbumTracksTable","showTracksTable","showArtistAlbums","ARTIST","getArtists","is_tracks","alignContent","flexDirection","overflowX","flexShrink","color","backgroundImage","images","url","backgroundSize","backgroundPosition","getAlbums","zIndex","TracksTable","compose","withRouter","Home","displayName","maxWidth","alt","marginLeft","fontSize","userId","AlbumsAndPlaylists","collection","showTracks","tracksPath","showTable","selectedPlaylistPath","selectedPlaylistTitle","errorFetching","fetching","collectionType","getPlaylists","history","push","description","filterCollection","htmlFor","open","ComposedComponent","extraProps","authRequired","Authenticate","URLSearchParams","authenticateUser","checkAndRedirect","profile","display_name","requireAuth","React","SelectionTable","updatePlaylistRequestId","newPlaylistName","playlist_name","newPlaylistDescription","playlist_description","exportedSelection","uris","uri","updatedPlaylist","snapshot_id","onSubmit","exportSelection","rows","AjaxSpinner","store","createStore","combineReducers","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactGA","initialize","createBrowserHistory","listen","set","page","pathname","pageview","App","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,sC,iQCErCC,EAAsB,G,YCKtBA,EAAe,CAAEC,iBAAiB,EAAOC,GAAI,MCFnD,IAAMF,EAAsB,GCM5B,IAAMA,EAAe,CAAEG,WAAW,EAAOC,SAAU,ICGpC,ICRHC,EAIAC,EDIG,GACbC,eJZa,WAGZ,IAFDC,EAEA,uDAFQR,EACRS,EACA,uCACA,OAAQA,EAAOC,MACb,IMR4B,mBNS1B,OAAO,YAAID,EAAOE,SACpB,QACE,OAAOH,IIKXI,KHRa,WAGZ,IAFDJ,EAEA,uDAFQR,EACRS,EACA,uCACA,OAAQA,EAAOC,MACb,IMbwB,eNctB,OAAO,eAAKF,EAAZ,CAAmBP,iBAAiB,EAAMC,GAAIO,EAAOE,UACvD,IMd0B,iBNexB,OAAO,eAAKH,EAAZ,CAAmBP,iBAAiB,EAAOC,GAAI,OACjD,QACE,OAAOM,IGDXK,cFXa,WAGZ,IAFDL,EAEA,uDAFQR,EACRS,EACA,uCACA,OAAQA,EAAOC,MACb,IMX6B,oBNY3B,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UAC3B,IMZgC,uBNa9B,OAAO,YAAIH,GAAOM,QAAO,SAACC,GAAD,OAAkBA,EAAQb,IAAMO,EAAOE,WAClE,QACE,OAAOH,IEEXQ,KDNa,WAGZ,IAFDR,EAEA,uDAFQR,EACRS,EACA,uCACA,OAAQA,EAAOC,MACb,IMhB+B,sBNiB7B,OAAO,eAAKF,EAAZ,CAAmBJ,SAAS,GAAD,mBAAMI,EAAMJ,UAAZ,CAAsBK,EAAOE,YAC1D,IMjBkC,yBNkBhC,OAAO,eACFH,EADL,CAEEJ,SAAU,YAAII,EAAMJ,UAAUU,QAC5B,SAACG,GAAD,QAAoBA,EAAQf,KAAOO,EAAOE,aAGhD,IM1BsB,aN2BpB,OAAO,eAAKH,EAAZ,CAAmBL,UAAWM,EAAOE,UACvC,QACE,OAAOH,K,6BEzBAU,EAAW,gCACXC,EAAc,kC,SACfd,O,qBAAAA,I,gCAAAA,M,cAIAC,O,iBAAAA,I,sBAAAA,M,KAKL,IAAMc,EAAgB,CAC3BC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,EAAG,KACHC,EAAG,IACHC,GAAI,KACJC,GAAI,KAGOC,EAAiB,CAC5BZ,EAAG,QACHC,EAAG,SAGQY,EAAiB,CAC5BV,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OK3BCO,E,kDACJ,WAAYC,GAA4B,IAAD,8BACrC,cAAMA,IACD5B,MAAQ,CACXO,QAAS,MAH0B,E,+DAOpBsB,GACjB,IAAMC,EACJD,EAAcxB,cAAcwB,EAAcxB,cAAc0B,OAAS,GAC7DC,EAAcC,KAAKL,MAAMvB,cAC7B4B,KAAKL,MAAMvB,cAAc0B,OAAS,IAGlCC,GACAF,GACAE,EAAYtC,KAAOoC,EAAoBpC,KAMpCoC,GAAuBE,IAJ1BC,KAAKC,uB,2CASa,IAAD,OACb3B,EAAU0B,KAAKL,MAAMvB,cACzB4B,KAAKL,MAAMvB,cAAc0B,OAAS,GAE/BxB,GACL4B,YAAW,WACT,EAAKP,MAAMQ,mBAAmB7B,EAAQb,MACrC,O,+BAGK,IACAW,EAAkB4B,KAAKL,MAAvBvB,cACFE,EAAUF,EAAcA,EAAc0B,OAAS,GACrD,OACE,yBAAKM,UAAU,0BACZ9B,EACC,yBAAK8B,UAAU,yBACZ9B,EAAQL,OAASJ,EAAoBwC,QACpC,yBAAKD,UAAU,2BAA2B9B,EAAQgC,MAChD,KAEHhC,EAAQL,OAASJ,EAAoB0C,MACpC,yBAAKH,UAAU,0BAA0B9B,EAAQgC,MAC/C,MAEJ,U,GArDgBE,aAwEbC,eANS,SAAC1C,GACvB,MAAO,CACLK,cAAeL,EAAMK,kBATE,SAACsC,GAC1B,MAAO,CACLP,mBAAoB,SAAC1C,GAAD,OAClBiD,EAAS,CAAEzC,KF1EmB,uBE0ESC,QAAST,QAUvCgD,CAA6Cf,G,yEC5E/CiB,EAAK,uCAAG,WACnBC,EACAC,EACAC,GAHmB,iBAAAC,EAAA,6DAKbC,EAAYC,cALC,SAQjBL,EAAkB,CAChBnD,GAAIuD,EACJ/C,KAAML,EAAmBsD,QACzB5C,QAAS,eAXM,SAawB6C,IAAMC,IAAN,UAAa3C,EAAb,WAbxB,UAaX4C,EAbW,OAcjBR,EAAqBG,IACjBK,IAAYA,EAASC,KAfR,wBAgBfC,OAAOC,SAASC,KAAOJ,EAASC,KAhBjB,2BAmBjBR,EAAgB,CACd7C,KAAMJ,EAAoB0C,MAC1BD,KAAM,2BACN7C,GAAIwD,gBAtBW,kDAyBjBJ,EAAqBG,GACrBF,EAAgB,CACd7C,KAAMJ,EAAoB0C,MAC1BD,KAAM,2BACN7C,GAAIwD,gBA7BW,0DAAH,0DCuBZS,E,kDACJ,WAAY/B,GAAqB,IAAD,8BAC9B,cAAMA,IACD5B,MAAQ,CACX4D,QAAQ,GAHoB,E,8KAOxBX,EAAYC,cAClBjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmBsD,QACzB5C,QAAS,gB,SAEa6C,IAAMC,IAAN,UAAa3C,EAAb,WAAgC,CACtDmD,iBAAiB,I,UADbC,E,OAIN7B,KAAKL,MAAMkB,qBAAqBG,GAE3Ba,GAAcA,EAAUP,K,iDAC7BQ,aAAaC,WAAW,sBACxB/B,KAAKL,MAAMqC,iB,qIAGJ,IAAD,EAKFhC,KAAKL,MAHPiB,EAFI,EAEJA,kBACAC,EAHI,EAGJA,qBACAC,EAJI,EAIJA,gBAEFH,EAAMC,EAAmBC,EAAsBC,K,uCAI/Cd,KAAKiC,SAAS,CAAEN,QAAU3B,KAAKjC,MAAM4D,W,+BAE7B,IAAD,OACCnE,EAAoBwC,KAAKL,MAAzBnC,gBACR,OACE,yBAAK4C,UAAU,mCACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,8FACV8B,GAAG,SAEH,yBAAKC,IAAKC,OAGZ,uBACEC,KAAK,SACLjC,UAAS,+BACPJ,KAAKjC,MAAM4D,OAAS,YAAc,IAEpCW,aAAW,OACXC,cAAY,WACZC,QAAS,SAAAC,GAAC,OAAI,EAAKC,mBAEnB,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAItB,yBACElF,GAAG,WACH2C,UAAS,sBAAiBJ,KAAKjC,MAAM4D,OAAS,YAAc,KAE5D,yBAAKvB,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,cACV8B,GAAG,QACHU,gBAAgB,aAHlB,QAOCpF,EACC,kBAAC,WAAD,KACE,kBAAC,IAAD,CACE4C,UAAU,cACV8B,GAAG,UACHU,gBAAgB,aAHlB,UAOA,kBAAC,IAAD,CACExC,UAAU,cACV8B,GAAG,kBACHU,gBAAgB,aAHlB,aAOA,kBAAC,IAAD,CACExC,UAAU,cACV8B,GAAG,eACHU,gBAAgB,aAHlB,WAQA,KACJ,kBAAC,IAAD,CACExC,UAAU,cACV8B,GAAG,aACHU,gBAAgB,aAHlB,WAQF,yBAAKxC,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACZJ,KAAKL,MAAMnC,gBACV,uBAAG4C,UAAU,kBAAkBoC,QAAS,kBAAM,EAAKK,WAAnD,UAIA,uBAAGzC,UAAU,kBAAkBoC,QAAS,kBAAM,EAAK7B,UAAnD,kB,GArHGH,aAuIrB,IAYeC,eAjBf,SAAyB1C,GAEvB,MAAO,CAAEP,gBADmBO,EAAMI,KAA1BX,oBAIiB,SAACkD,GAC1B,MAAO,CACLsB,eAAgB,kBAAMtB,EAAS,CAAEzC,KLxKP,oBKyK1B6C,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KJ3KgB,oBI2KSC,QAASI,KAC/CsC,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KH5KkB,sBG4KSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KH7KqB,yBG6KSC,QAAST,QAIzCgD,CAA6CiB,G,oECnLrD,SAASoB,IAEd,IAEEhB,aAAaiB,QAAQ,OAHZ,QAITjB,aAAaC,WAAW,QACxB,MAAOU,GAEP,GACa,uBAAXA,EAAEO,MACS,+BAAXP,EAAEO,KAKF,YADAC,MAAM,kDAGN,IACE,GAAoC,IAAhCnB,aAAaoB,eAKf,YADAD,MAAM,kDAGR,MAAOR,IAOT,YADAQ,MAAM,0C,qDCvBCE,GAAoB,SAAAC,GAAK,OACpCA,EAAMC,cAAc,IAAIC,YANE,oBAM+B,CAAEC,SAAS,MAEhEC,GAAwB,WAC5B,IAAMC,EAAyC,UAAhCC,SAASC,KAAKC,MAAMC,SACnCH,SAASI,gBAAgBF,MAAMG,UAAYN,EAAS,SAAW,UAEjEC,SAASM,iBAbkB,oBAamB,YAAiB,IAAdC,EAAa,EAAbA,OAC/CC,KAAgCD,GAChC/D,WAAWsD,GAAuB,MAGpCE,SAASM,iBAjBmB,qBAiBmB,YAAiB,IAAdC,EAAa,EAAbA,OAChDC,KAAiCD,GACjC/D,WAAWsD,GAAuB,M,ICsB9BW,G,kDAIJ,WAAYxE,GAAiC,IAAD,8BAC1C,cAAMA,IACD5B,MAAQ,CACXqG,kBAAkB,EAClBC,cAAe,KACfC,YAAa,KACbC,qBAAqB,EACrBC,iBAAiB,GAPuB,E,gEAY1CrB,GAAkBO,SAASe,cAAc,mBACzCzE,KAAK0E,gB,uCAGUC,GAEf,SAASC,EAAQC,EAAQC,EAAQC,GAG/B,OAFIA,EAAI,IAAGA,GAAK,GACZA,EAAI,IAAGA,GAAK,GACZA,EAAI,EAAI,EAAUF,EAAc,GAATC,EAAID,GAASE,EACpCA,EAAI,GAAcD,EAClBC,EAAI,EAAI,EAAUF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAC3CF,EAmBT,IAEIG,EAnBJ,SAAkBC,EAAQC,EAAQC,GAChC,IAAIC,EAAGC,EAAGC,EAEV,GAAS,GAALJ,EACFE,EAAIC,EAAIC,EAAIH,MACP,CACL,IAAIL,EAAIK,EAAI,GAAMA,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxCL,EAAI,EAAIM,EAAIL,EAChBM,EAAIR,EAAQC,EAAGC,EAAGG,EAAI,EAAI,GAC1BI,EAAIT,EAAQC,EAAGC,EAAGG,GAClBK,EAAIV,EAAQC,EAAGC,EAAGG,EAAI,EAAI,GAG5B,MAAO,CAACM,KAAKC,MAAU,IAAJJ,GAAUG,KAAKC,MAAU,IAAJH,GAAUE,KAAKC,MAAU,IAAJF,IAMrDG,CAFK,KA1Bfd,GAAQ,KA0Bc,IAEE,EAAG,IAE3B,OAAOK,EAAI,GAAK,IAAMA,EAAI,GAAK,IAAMA,EAAI,K,yFAGXU,G,0FACzBA,GAAUA,EAAMC,cAAiBD,EAAMC,aAAaC,K,oDAEnDC,EAAsB/D,aAAagE,QAAQJ,EAAMjI,MACjDsI,EAAsBC,KAAKC,MAAMJ,MACjBE,EAAezB,Y,uBACnCtE,KAAKiC,SAAS,CACZqC,YAAayB,EAAezB,YAC5BC,qBAAqB,I,iCAKzBvE,KAAKiC,SAAS,CAAEsC,qBAAqB,I,UAERpD,IAAM+E,KAAN,UAAczH,EAAd,gBAAsCiH,EAAO,CACxES,QAAS,CAAE,8BAA+BzH,K,YADtC0H,E,SAGkBA,EAAe9E,MAAS8E,EAAe9E,KAAK+E,M,wBAClErG,KAAKiC,SAAS,CAAEqC,YAAa,KAAMC,qBAAqB,I,4BAGtD+B,EAAUF,EAAe9E,MACjBiF,UAAYD,EAAQC,SAASC,OAAO,EACbF,EAAQC,SAASC,KAA1CC,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,MAAOC,EADuB,EACvBA,OAClBF,GAASA,EAAM3G,SACjBwG,EAAQG,MAAQA,EAAM,IAEpBC,GAASA,EAAM5G,SACjBwG,EAAQI,MAAQA,EAAM,IAEpBC,GAAUA,EAAO7G,SACnBwG,EAAQK,OAASA,EAAO,KAI5B3G,KAAKiC,SAAS,CAAEqC,YAAagC,EAAS/B,qBAAqB,IAErDqC,EAAS,CACbC,SACEd,GAAkBA,EAAec,SAC7Bd,EAAec,SACf,GACNvC,YAAa,CACXmC,MAAOH,EAAQG,MACfC,MAAOJ,EAAQI,MACfC,OAAQL,EAAQK,OAChBN,MAAO,CACLS,QAASR,EAAQD,MAAMS,QACvBC,UAAWT,EAAQD,MAAMU,UACzBC,aAAcV,EAAQD,MAAMW,aAC5BC,WAAYX,EAAQD,MAAMY,WAC1BC,aAAcZ,EAAQD,MAAMa,cAE9BC,OAAQ,CACNC,IAAKd,EAAQa,OAASb,EAAQa,OAAOC,IAAM,QAIjDtF,aAAaiB,QAAQ2C,EAAMjI,GAAIuI,KAAKqB,UAAUT,I,2QAItClB,EAAU1F,KAAKL,MAAf+F,MAEFG,EAAsB/D,aAAagE,QAAQJ,EAAMjI,MACjDsI,EAAsBC,KAAKC,MAAMJ,MACjBE,EAAec,S,uBACnC7G,KAAKiC,SAAS,CACZoC,cAAe0B,EAAec,SAC9BzC,kBAAkB,IAGpBpE,KAAKsH,0BAA0B5B,G,iCAI3B1E,EAAYC,cAClBjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QAAS,2BAEX0B,KAAKiC,SACH,CACEmC,kBAAkB,EAClBG,qBAAqB,EACrBD,YAAa,OAEf,WACEnB,GAAkBO,SAASe,cAAc,sB,UAItBtD,IAAM+E,KAAN,UAClBzH,EADkB,YAEnBuB,KAAKL,MAAM6H,cAAgB,iBAAmB,mBAEhD,CACEC,aAAa,6CAAD,OAA+C/B,EAAMjI,IACjEiK,gBAAiB,KACjBC,eAAgB,OAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,WAXxCkJ,E,OAeN5H,KAAKL,MAAMkB,qBAAqBG,GAE3B4G,GAAaA,EAAStG,K,mDAE3BtB,KAAKiC,SAAS,CACZoC,cAAeuD,EAAStG,KACxB8C,kBAAkB,IAGdyD,EAAgBD,EAAStG,KAAKoE,MAE9BkB,EAAS,CACbC,SAAU,CACRiB,SAAUF,EAAStG,KAAKwG,SAAWF,EAAStG,KAAKwG,SAAW,KAC5DpC,MAAOmC,EACH,CACEE,IAAKF,EAAcE,IACnBC,eAAgBH,EAAcG,eAC9BC,KAAMJ,EAAcI,KACpBC,gBAAiBL,EAAcK,gBAC/BC,eAAgBN,EAAcM,eAC9BC,0BACEP,EAAcO,0BAChBC,MAAOR,EAAcQ,MACrBC,iBAAkBT,EAAcS,kBAElC,OAGRxG,aAAaiB,QAAQ2C,EAAMjI,GAAIuI,KAAKqB,UAAUT,IAE9C5G,KAAKsH,0BAA0B5B,G,0IAIdhC,SAASe,cAAc,kBD5OpCpB,cAAc,IAAIC,YAJC,mBAI+B,CAAEC,SAAS,KC6OjEvD,KAAKL,MAAM4I,e,sCAGGC,GAAiB,IACvB9C,EAAU1F,KAAKL,MAAf+F,MAEF+C,EAAuB3G,aAAagE,QAAQ,sBAK5C4C,GAJoB1C,KAAKC,MAAMwC,GACjCzC,KAAKC,MAAMwC,GACX,IAEkCE,KAAI,SAACC,GACzC,OAAIA,EAAYnL,KAAOiI,EAAMjI,GAAWmL,EACjC,eACFA,EADL,GAEKJ,MAIP1G,aAAaiB,QACX,qBACAiD,KAAKqB,UAAUqB,IAGZ1I,KAAKL,MAAMkJ,kBAChB7I,KAAKL,MAAMkJ,qB,+BAGH,IAAD,SAMH7I,KAAKL,MAJP+F,EAFK,EAELA,MACA5H,EAHK,EAGLA,eACAgL,EAJK,EAILA,eACAC,EALK,EAKLA,oBALK,EAcH/I,KAAKjC,MALPqG,EATK,EASLA,iBACAG,EAVK,EAULA,oBACAF,EAXK,EAWLA,cACAC,EAZK,EAYLA,YACAE,EAbK,EAaLA,gBAGE6B,EAAQ/B,GAAeA,EAAY+B,MAAQ/B,EAAY+B,MAAQ,KAC/Dc,EAAS7C,GAAeA,EAAY6C,OAAS7C,EAAY6C,OAAS,KAEhEsB,EAAuB3G,aAAagE,QAAQ,sBAC5C8C,EAAc5C,KAAKC,MAAMwC,GAAiBO,MAAK,SAACpC,GACpD,GAAIA,EAAOnJ,KAAOiI,EAAMjI,GAAI,OAAOmJ,KAGrC,OACE,yBAAKxG,UAAU,mBACb,yBACEA,UAAU,mBACVoC,QAAS,WACP,EAAK+F,gBAIT,yBAAK9K,GAAG,gBAAgB2C,UAAU,uCAC9BgE,GAAoBC,EACpB,yBACET,MAAO,CACLqF,SAAU,WACVC,IAAK,IACLC,KAAM,MACNC,UAAW,mBACXC,MAAO,OACPC,OAAQ,OACRC,WACE,+FACFC,QAAS,cACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,QAGX,iCACA,kDACA,oCAEA,MACFvF,GAAoBC,GAAiBA,EAAcqB,MACnD,yBAAKtF,UAAU,0BACb,yBACEwD,MAAO,CACLgG,UAAW,OACXJ,QAAS,cACTC,eAAgB,gBAChBJ,MAAO,SAGT,6BACE,wBAAIjJ,UAAU,aACXsF,EAAM1C,KAAO0C,EAAM1C,KAAO,MAE7B,wBAAI5C,UAAU,aACXsF,EAAMgB,OAAShB,EAAMgB,MAAM1D,KAAO0C,EAAMgB,MAAM1D,KAAO,MAExD,wBAAI5C,UAAU,aACXsF,EAAMiB,OAASjB,EAAMiB,OAAS,OAIjC7I,EAAekL,MACf,SAACa,GAAD,OAAyBA,EAAepM,KAAOiI,EAAMjI,MAiBrD,yBACE2C,UAAU,gBACVwD,MAAO,CACL4F,QAAS,cACTC,eAAgB,gBAChBK,OAAQ,WAEVtH,QAAS,WACPuG,EAAoBrD,KARxB,WAYE,kBAAC,IAAD,CAAYtF,UAAU,2BA3BxB,yBACEA,UAAU,gBACVwD,MAAO,CACL4F,QAAS,cACTC,eAAgB,gBAChBK,OAAQ,WAEVtH,QAAS,WACPsG,EAAepD,KARnB,SAYE,kBAAC,IAAD,CAAStF,UAAU,4BAmBxBkE,GAAe+B,IAAU7B,EACxB,yBACEpE,UAAU,gBACVoC,QAAS,WACP,EAAKP,SAAS,CAAEuC,iBAAiB,KAEnCZ,MAAO,CACL4F,QAAS,cACTE,WAAY,SACZI,OAAQ,YAGV,0CACA,kBAAC,KAAD,CAAgB1J,UAAU,oBAE1B,KACHkE,GAAe+B,GAAS7B,EACvB,6BACG,IACD,6BACA,uBAAGZ,MAAO,CAAEmG,UAAW,WAAvB,mCAGA,yBACEnG,MAAO,CACL4F,QAAS,OACTC,eAAgB,WAChBC,WAAY,WAGd,yBACElH,QAAS,WACP,EAAKP,SAAS,CAAEuC,iBAAiB,KAEnCZ,MAAO,CACL4F,QAAS,cACTE,WAAY,SACZI,OAAQ,YAGT,IACD,uBAAGlG,MAAO,CAAEmG,UAAW,SAAUC,OAAQ,QAAzC,YAGA,kBAAC,KAAD,CAAgB5J,UAAU,qBAG9B,yBACEA,UAAU,GACVwD,MAAO,CAAE4F,QAAS,OAAQS,SAAU,SAEpC,yBAAKrG,MAAO,CAAEsG,UAAW,EAAGC,SAAU,IACnC7F,EAAYmC,MACX,yBAAK7C,MAAO,CAAEoG,OAAQ,QACpB,uBAAG5J,UAAU,aAAb,SACA,2BAAIkE,EAAYmC,QAEhB,KACHnC,EAAYoC,MACX,yBAAK9C,MAAO,CAAEoG,OAAQ,QACpB,uBAAG5J,UAAU,aAAb,UACA,2BAAIkE,EAAYoC,QAEhB,KACHpC,EAAYqC,OACX,yBAAK/C,MAAO,CAAEoG,OAAQ,QACpB,uBAAG5J,UAAU,aAAb,UACA,2BAAIkE,EAAYqC,SAEhB,MAEN,yBACE/C,MAAO,CACLsG,UAAW,EACXC,SAAU,EACVX,QAAS,OACTS,SAAU,OACVR,eAAgB,WAGjBpD,EAAMS,SAAWT,EAAMU,UACtB,yBACEnD,MAAO,CACLoG,OAAQ,MACRI,OAAQ,iBACRC,aAAc,MACdV,QAAS,MACTO,UAAW,EACXC,SAAU,IAGZ,uBAAGvG,MAAO,CAAE0G,WAAY,WACrBjE,EAAMS,QADT,IACmBT,EAAMU,WAExBV,EAAMW,cACPX,EAAMW,aAAauD,QAAQ,GACzB,uBACEnK,UAAU,YACVwD,MAAO,CAAE0G,WAAY,WAFvB,YAIYjE,EAAMW,aAAauD,QAAQ,IAErC,MAEJ,KAEHlE,EAAMY,YAAcZ,EAAMa,aACzB,yBACEtD,MAAO,CACLoG,OAAQ,MACRI,OAAQ,iBACRC,aAAc,MACdV,QAAS,MACTO,UAAW,EACXC,SAAU,IAGZ,uBACE/J,UAAU,YACVwD,MAAO,CAAE0G,WAAY,WAFvB,cAMA,uBAAG1G,MAAO,CAAE0G,WAAY,WACrBjE,EAAMY,WADT,IACsBZ,EAAMa,eAG5B,KAEHC,GAAUA,EAAOC,IAChB,yBACExD,MAAO,CACLoG,OAAQ,MACRI,OAAQ,iBACRC,aAAc,MACdV,QAAS,MACTO,UAAW,EACXC,SAAU,IAGZ,uBAAG/J,UAAU,aAAb,OACA,2BAAI+G,EAAOC,IAAImD,YAEf,OAED,IACN3B,EACC,yBAAKhF,MAAO,CAAEgG,UAAW,SACvB,uBAAGhG,MAAO,CAAEmG,UAAW,WAAvB,uCAGA,yBACEnG,MAAO,CACL4F,QAAS,OACTC,eAAgB,WAGlB,2BAAOrJ,UAAU,WAAWwD,MAAO,CAAEoG,OAAQ,QAC3C,2BACEQ,UAAS5B,EAAY6B,OACrBjI,QAAS,kBACP,EAAKkI,gBAAgB,CACnBD,OAAQ7B,EAAY6B,OAChB,KACApE,EAAMS,WAGd7I,KAAK,aAVT,OAeA,2BAAOmC,UAAU,WAAWwD,MAAO,CAAEoG,OAAQ,QAC3C,2BACEQ,UAAS5B,EAAY+B,QACrBnI,QAAS,kBACP,EAAKkI,gBAAgB,CACnBC,QAAS/B,EAAY+B,QACjB,KACAtE,EAAMU,aAGd9I,KAAK,aAVT,QAeA,2BAAOmC,UAAU,WAAWwD,MAAO,CAAEoG,OAAQ,QAC3C,2BACEQ,UAAS5B,EAAYgC,SACrBpI,QAAS,kBACP,EAAKkI,gBAAgB,CACnBE,SAAUhC,EAAYgC,SAClB,KACAzD,EAAOC,IAAImD,aAGnBtM,KAAK,aAVT,WAgBF,KACJ,8BAEA,KACHsG,EACC,uBAAGnE,UAAU,YAAYwD,MAAO,CAAEmG,UAAW,WAA7C,kCAGE,KACFxF,GAAyBD,GAAgBA,EAAY+B,MAInD,KAHF,uBAAGjG,UAAU,YAAYwD,MAAO,CAAEmG,UAAW,WAA7C,+BAIF,uBAAGnG,MAAO,CAAEmG,UAAW,SAAUH,UAAW,SAA5C,cACc,KAEd,yBACEhG,MAAO,CACL4F,QAAS,OACTH,MAAO,OACPI,eAAgB,WAGlB,yBACErJ,UAAU,iBACVwD,MAAO,CACLiH,gBAAgB,QAAD,OAAU7K,KAAK8K,iBAC5BzG,EAAcqB,MAAMsC,gBADP,WAKjB,2BAAIrJ,EAAS0F,EAAcqB,MAAMqC,OAGnC,yBACE3H,UAAU,iBACVwD,MAAO,CACLiH,gBAAgB,QAAD,OAAU7K,KAAK8K,iBAC5BzG,EAAcqB,MAAMwC,iBADP,WAKjB,2BAAI1I,EAAU6E,EAAcqB,MAAMuC,QAEpC,yBACE7H,UAAU,iBACVwD,MAAO,CACLC,SAAU,qBACVgH,gBAAgB,QAAD,OAAU7K,KAAK8K,iBAC5BzG,EAAcqB,MAAM4C,kBADP,WAKjB,2BAAIjE,EAAcqB,MAAM2C,MAAMkC,QAAQ,KAExC,yBACEnK,UAAU,iBACVwD,MAAO,CACLiH,gBAAgB,QAAD,OAAU7K,KAAK8K,iBAC5BzG,EAAcqB,MAAM0C,2BADP,WAKjB,2BAAI3I,EAAU4E,EAAcqB,MAAMyC,mBAGtC,yBAAK/H,UAAU,sBACb,2BAAOA,UAAU,gCACf,+BACE,4BACE,uCACA,qCACA,wCACA,mCACA,oCACA,qCACA,uCAGJ,+BACGiE,EAAcyD,SAASa,KAAI,SAACoC,EAAUpG,GAAX,OAC1B,wBAAIoD,IAAK9G,eACP,wBACE2C,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAIC,YADS,UAKhBrG,EAAI,GAEP,wBACEf,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAIC,YADS,UAKhB,IAAIC,KAAiB,IAAZF,EAAIG,OACXC,cACAC,OAAO,GAAI,IAEhB,wBACExH,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAIC,YADS,UAKhB,IAAIC,KAAoB,IAAfF,EAAIM,UACXF,cACAC,OAAO,GAAI,IAEhB,wBACExH,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAI/C,gBADS,UAKhBrJ,EAASoM,EAAIhD,MAEhB,wBACEnE,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAI7C,iBADS,UAKhB1I,EAAUuL,EAAI9C,OAEjB,wBACErE,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAIzC,kBADS,UAKhByC,EAAI1C,MAAMkC,QAAQ,IAErB,wBACE3G,MAAO,CACLiH,gBAAgB,QAAD,OAAU,EAAKC,iBAC5BC,EAAI3C,2BADS,UAKhB3I,EAAUsL,EAAI5C,yBAQ3B,MAGN,4BACE/H,UAAU,uBACVkC,aAAW,QACXE,QAAS,WACP,EAAK+F,qB,GAjsBgB/H,aAutBlBC,oBAJf,SAAyB1C,GACvB,MAAO,MAXkB,SAAC2C,GAC1B,MAAO,CACL4K,aAAc,kBAAM5K,EAAS,CAAEzC,KRvvBP,kBQwvBxB2C,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KNxvBkB,sBMwvBSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KNzvBqB,yBMyvBSC,QAAST,QAQzCgD,CAA6C0D,ICjtBtDoH,GAAkB,SACtBC,EACAC,EACAC,EACAC,GAJsB,OAMtBH,IAAWC,EACT,wBAAIjJ,QAAS,SAAAC,GAAC,OAAIkJ,EAAWlJ,KAC1B+I,EACc,IAAdE,GAAoBA,EAAkC,KAAtB,oDAClB,IAAdA,EAAkB,8CAAe,KACnB,IAAdA,EAAkB,8CAAe,MAGpC,wBACElJ,QAAS,SAAAC,GACPkJ,EAAWlJ,KAGZ+I,EALH,iBASEI,G,kDACJ,WAAYjM,GAAoB,IAAD,sBAC7B,cAAMA,GAEN,IAAMkM,EAAuB/J,aAAagE,QAAQ,sBAC5CgG,EAAuB9F,KAAKC,MAAM4F,GAJX,OAM7B,EAAK9N,MAAQ,CACXgO,UAAW,GACXC,YAAalK,aAAagE,QAAQ,gBAClCmG,UAAU,EACVlE,IAAK,KACLE,KAAM,KACNiE,KAAM,CAAEV,OAAQ,KAAME,UAAW,MACjCS,qBAAqB,EACrBC,cAAc,EACdC,MAAO,GACPvO,eAAgBgO,GAAoC,GACpDQ,aAAa,EACbC,eAAgB,GAChBC,MAAM,GAER1J,IACA,EAAK2J,YAtBwB,E,mMA0BvBzL,EAAYC,cACZyL,EAAoBzL,c,SAExBjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QAAS,oB,SAGiB6C,IAAM+E,KAAN,UACvBzH,EADuB,YAExBuB,KAAKL,MAAM6H,cAAgB,iBAAmB,mBAEhD,CACEC,aAAczH,KAAKjC,MAAMiO,YACzBtE,gBAAiB,KACjBC,eAAgB,OAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,UAXxCiO,E,OAeN3M,KAAKL,MAAMkB,qBAAqBG,GAE3B2L,EAAcrL,K,4DAEWqL,EAAcrL,KAAtCkL,E,EAAAA,KAAMI,E,EAAAA,OAAOC,E,EAAAA,SAELA,EAAOD,QACnBJ,EAAOK,EAAOL,MAGZM,EAAcF,GAAgBC,EAClCC,EAAcD,GAAUA,EAAOD,MAAQC,EAAOD,MAAQE,EAEtD9M,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIiP,EACJzO,KAAML,EAAmB2J,aACzBjJ,QAAS,2B,UAG0B6C,IAAM+E,KAAN,UAChCzH,EADgC,YAEjCuB,KAAKL,MAAM6H,cAAgB,iBAAmB,mBAEhD,CACEC,aAAa,iDAAD,OAAmDqF,EAAYnE,KACzE,SAACoE,GAIC,OAHIA,EAAKrH,QACPqH,EAAOA,EAAKrH,OAEPqH,EAAKtP,OAGhBiK,gBAAiB,KACjBC,eAAgB,OAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,QAlBxCsO,E,OAsBNhN,KAAKL,MAAMkB,qBAAqB6L,GAE5BO,EAAqB,GAGvBD,GACAA,EAAuB1L,MACvB0L,EAAuB1L,KAAK4L,iBAE5BD,EAAiBD,EAAuB1L,KAAK4L,gBAGzCC,EAAmB,YAAInN,KAAKjC,MAAMgO,WAAWqB,OACjDN,EAAYnE,KAAI,SAACoE,GACXA,EAAKrH,QACPqH,EAAOA,EAAKrH,OAEd,IAAM2H,EAA4BJ,EAAejE,MAC/C,SAACtD,GAAD,OAAgBA,GAASqH,GAAQrH,EAAMjI,KAAOsP,EAAKtP,MAGrD,OAAO,eACFsP,EADL,CAEEO,UAAU,EACVjF,MAAOgF,EAAWA,EAAShF,MAAQ,KACnCN,IAAKsF,EAAW1O,EAAS0O,EAAStF,KAAO,KACzCE,KAAMoF,EAAW7N,EAAU6N,EAASpF,MAAQ,KAC5CtB,OACEoG,EAAKQ,SAAWR,EAAKQ,QAAQzN,OAASiN,EAAKQ,QAAQ,GAAGvK,KAAO,KAC/DwK,UAAWT,EAAKrG,OAASqG,EAAKrG,MAAM1D,KAAO+J,EAAKrG,MAAM1D,KAAO,WAKnEhD,KAAKiC,SAAL,eAEOjC,KAAKjC,MAFZ,CAGIgO,UAAWoB,EACXnB,YAAaQ,EACbA,QAAMA,IAAQA,EAAK1M,QACnBqM,qBAAqB,KAEvB,e,kDAMFnM,KAAKL,MAAMkB,qBAAqBG,GAChChB,KAAKL,MAAMkB,qBAAqB6L,GAChC1M,KAAKiC,SAAL,eACKjC,KAAKjC,MADV,CAEEoO,qBAAqB,K,kJAKf1J,GACY,QAAlBA,EAAEwB,OAAOjB,KASS,SAAlBP,EAAEwB,OAAOjB,MACXhD,KAAKiC,SAAS,CACZgG,KAAMxF,EAAEwB,OAAOwJ,MACfxB,WAAYxJ,EAAEwB,OAAOwJ,SAAWzN,KAAKjC,MAAMgK,MAX7C/H,KAAKiC,SAAS,CACZ8F,IAAKtF,EAAEwB,OAAOwJ,MACdxB,WAAYxJ,EAAEwB,OAAOwJ,SAAWzN,KAAKjC,MAAMkK,S,6BAc1CxF,GACDA,EAAEwB,OAAOwJ,OAAShL,EAAEwB,OAAOwJ,MAAM3N,OACnCE,KAAKiC,SAAS,CAAEoK,MAAO5J,EAAEwB,OAAOwJ,MAAOxB,UAAU,IAInDjM,KAAKiC,SAAS,CAAEoK,MAAO,GAAIJ,UAAU,M,0CAGlB,IAAD,SACIjM,KAAKjC,MAAnBgK,EADU,EACVA,IAAKE,EADK,EACLA,KACPgE,EAAW,YAAIjM,KAAKjC,MAAMgO,WAAW1N,QAAO,SAACqH,GACjD,OAAIqC,GAAOE,GAAQvC,EAAMqC,MAAQA,GAAOrC,EAAMuC,OAASA,GAGnDF,IAAQE,GAAQvC,EAAMqC,MAAQA,IAG7BA,GAAOE,GAAQvC,EAAMuC,OAASA,EAL1BvC,EASJqC,GAAQE,OAAb,EACSvC,KAIX,OAAK1F,KAAKjC,MAAMsO,MAITJ,EAAS5N,QAAO,SAACqH,GAAgB,IAC9B1C,EAAmC0C,EAAnC1C,KAAM2D,EAA6BjB,EAA7BiB,OAAQ0B,EAAqB3C,EAArB2C,MAAOJ,EAAcvC,EAAduC,KAAMF,EAAQrC,EAARqC,IAC/B2F,GAAe,EAanB,GAZA,CAAC1K,EAAM2D,EAAQ0B,EAAOJ,EAAMF,GAAKY,KAAI,SAACgF,GAElCA,GACAA,EACGC,WACAC,cACAC,SAAS,EAAK/P,MAAMsO,MAAM0B,uBAE7BL,GAAe,MAIfA,EAAc,OAAOhI,KAlBlBuG,I,qCAsBIvG,GACb,IAAM+C,EAAuB3G,aAAagE,QAAQ,sBAC5CkI,EAAehI,KAAKC,MAAMwC,GAC5BzC,KAAKC,MAAMwC,GACX,GACEC,EAAgB,sBAAOsF,GAAP,CAAqBtI,IAC3C5D,aAAaiB,QACX,qBACAiD,KAAKqB,UAAUqB,IAGjB1I,KAAKiC,SAAS,CAAEnE,eAAgB4K,M,0CAGdhD,GAClB,IAAM+C,EAAuB3G,aAAagE,QAAQ,sBAK5C4C,GAJoB1C,KAAKC,MAAMwC,GACjCzC,KAAKC,MAAMwC,GACX,IAEkCpK,QACpC,SAACuK,GAAD,OAAsBA,EAAYnL,KAAOiI,EAAMjI,MAGjDqE,aAAaiB,QACX,qBACAiD,KAAKqB,UAAUqB,IAEjB1I,KAAKiC,SAAS,CAAEnE,eAAgB4K,M,iCAGvB8C,GACT,IAAIE,EAAY,EAChB,GAAI1L,KAAKjC,MAAMmO,KAAKV,SAAWA,EAC7BE,EAAY,OAEZ,OAAQ1L,KAAKjC,MAAMmO,KAAKR,WACtB,KAAK,EACHA,EAAY,EACZ,MACF,KAAK,EACHA,EAAY,EACZ,MACF,KAAK,EACHA,EAAY,EAIlB1L,KAAKiC,SAAS,CACZiK,KAAM,CAAEV,SAAQE,iB,sCAIJuC,GAAsB,IAC5B/B,EAASlM,KAAKjC,MAAdmO,KACAR,EAAsBQ,EAAtBR,UAAWF,EAAWU,EAAXV,OACnB,OAAO,YAAIyC,GAAgB/B,MAAK,SAACgC,EAAYC,GAC3C,OAAkB,IAAdzC,EAAwBwC,EAAM1C,GAAU2C,EAAO3C,GAAU,GAAK,EAChD,IAAdE,EAAwBwC,EAAM1C,GAAU2C,EAAO3C,GAAU,GAAK,EAC3D,O,mCAKTxL,KAAKiC,SAAS,CAAEqK,aAAa,M,yCAI7B,IAAM7D,EAAuB3G,aAAagE,QAAQ,sBAC5CgG,EAAkB9F,KAAKC,MAAMwC,GACnCzI,KAAKiC,SAAS,CAAEnE,eAAgBgO,M,+BAGxB,IAAD,OAgBDe,EAAS7M,KAAKjC,MAAMkO,SACtBjM,KAAKoO,oBACLpO,KAAKjC,MAAMgO,UAETsC,EAAerO,KAAKsO,gBAAgBzB,GAEpCpG,EAAQ3E,aAAagE,QAAQ,sBAtB5B,EAwB0C9F,KAAKjC,MAA9CwO,EAxBD,EAwBCA,eAAgBzO,EAxBjB,EAwBiBA,eAAgB0O,EAxBjC,EAwBiCA,KAExC,OACE,yBAAKpM,UAAU,uBACZJ,KAAKjC,MAAMuO,YACV,kBAAC,GAAD,CACE5G,MAAO6G,EACP/E,cAAexH,KAAKL,MAAM6H,cAC1BsB,eAAgB,SAACpD,GAAD,OAAgB,EAAKoD,eAAepD,IACpDqD,oBAAqB,SAACrD,GAAD,OACnB,EAAKqD,oBAAoBrD,IAE3B6C,WAAY,kBAAM,EAAKA,cACvBzK,eAAgBA,EAChB+K,iBAAkB,kBAAM,EAAKA,sBAE7B,KACF7I,KAAKjC,MAAMoO,oBA8NX,uBAAG/L,UAAU,0BAAb,0CA7NA,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,6CACb,uBAAGA,UAAU,SAASqG,GACtB,gDACqBA,EADrB,4JAG+D,IAC7D,kBAAC,IAAD,CAASvE,GAAG,cAAZ,UAJF,sEAKgD,IAC9C,kBAAC,IAAD,CAASA,GAAG,mBAAZ,aANF,OAMwD,IACtD,kBAAC,IAAD,CAASA,GAAG,gBAAZ,UAPF,6BAQS,OAIb,yBAAK9B,UAAU,yBACb,yBAAKA,UAAU,iBACZJ,KAAKjC,MAAMqO,aACV,yBAAKhM,UAAU,oBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cAGjB,KACJ,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,+BACb,0BACEmO,SAAU,SAAA9L,GACR,EAAK+L,YAAY/L,KAGnB,yBAAKrC,UAAU,kBACb,yBAAKA,UAAU,UACb,4BAAQ4C,KAAK,OACX,4BACEsK,UAAWtN,KAAKjC,MAAMgK,IACtB0G,UAAQ,EACRhB,MAAM,IAHR,OA5EX,CACX,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAuE4B9E,KAAI,SAAAZ,GAAG,OACX,4BAAQA,IAAK9G,cAAUwM,MAAO1F,GAC3BA,QAKR/H,KAAKjC,MAAMgK,IACV,4BAAQvF,QAAS,SAAAC,GAAC,OAAI,EAAKR,SAAS,CAAE8F,IAAK,SACzC,kBAAC,IAAD,CAAW3H,UAAU,mBAErB,MAEN,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,4BAAQ4C,KAAK,QACX,4BACEsK,UAAWtN,KAAKjC,MAAMkK,KACtBwG,UAAQ,EACRhB,MAAM,IAHR,QAOA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAGHzN,KAAKjC,MAAMkK,KACV,4BAAQzF,QAAS,SAAAC,GAAC,OAAI,EAAKR,SAAS,CAAEgG,KAAM,SAC1C,kBAAC,IAAD,CAAW7H,UAAU,mBAErB,QAIV,yBAAKA,UAAU,wBACb,2BACEA,UAAU,iBACVmO,SAAU,SAAA9L,GAAC,OAAI,EAAKiM,OAAOjM,IAC3BkM,YAAa,SACblB,MAAOzN,KAAKjC,MAAMsO,QAEnBrM,KAAKjC,MAAMsO,MAAMvM,OAChB,4BACE0C,QAAS,WACP,EAAKP,SAAS,CAAEoK,MAAO,OAGzB,kBAAC,IAAD,CAAWjM,UAAU,mBAErB,OAIR,2BAAOA,UAAU,gCACf,+BACE,4BACE,sCAECmL,GACC,OACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,WAInBJ,GACC,MACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,UAInBJ,GACC,OACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,WAInBJ,GACC,QACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,YAInBJ,GACC,SACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,aAInBJ,GACC,QACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,kBAKxB,+BACG0C,EAAa1F,KAAI,SAACoC,GAAD,OAChB,wBAAIhD,IAAK9G,eACP,wBAAI4N,MAAM,UACN,EAAK9Q,MAAMD,eAAekL,MAC1B,SAACtD,GAAD,OAAgBA,GAASqF,GAAOrF,EAAMjI,KAAOsN,EAAItN,MAWjD,kBAAC,IAAD,CACE2C,UAAS,8CACP,EAAKrC,MAAMqO,aAAe,gBAAkB,IAE9C5J,QAAS,WACP,EAAKuG,oBAAoBgC,MAd7B,kBAAC,IAAD,CACE3K,UAAS,8CACP,EAAKrC,MAAMqO,aAAe,gBAAkB,IAE9C5J,QAAS,WACP,EAAKsG,eAAeiC,OAe5B,4BACE,uBACEvI,QAAS,WACP,EAAKP,SAAS,CACZqK,aAAa,EACbC,eAAgBxB,MAInBA,EAAI/H,OAGT,4BAAK+H,EAAIhD,KACT,4BAAKgD,EAAI9C,MACT,4BAAK6G,OAAO/D,EAAI1C,OAAOkC,QAAQ,IAC/B,4BAAKQ,EAAIpE,QACT,4BAAKoE,EAAIyC,iBAKhBhB,EACC,4BAAQhK,QAAS,kBAAM,EAAKiK,aAAarM,UAAU,UAAnD,aAIA,yB,GAniBEI,aAujBpB,IC1mBKuO,GDqnBUtO,gBAhBf,SAAyB1C,GAEvB,MAAO,CAAEP,gBADmBO,EAAMI,KAA1BX,oBAIiB,SAACkD,GAC1B,MAAO,CACLI,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KRnoBgB,oBQmoBSC,QAASI,KAC/CsC,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KPpoBkB,sBOooBSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KProBqB,yBOqoBSC,QAAST,QAIzCgD,CAA6CmL,K,SCrnBvDmD,K,gBAAAA,E,eAAAA,Q,SAoCCC,G,kDACJ,WAAYrP,GAAqB,IAAD,8BAC9B,cAAMA,IAED5B,MAAQ,CACXkR,SAAU,GACVhD,UAAU,EACVC,KAAM,CAAEV,OAAQ,KAAME,UAAW,MACjCwD,oBAAoB,EACpB9C,cAAc,EACdC,MAAO,GACPG,MAAM,EACN2C,SAAUJ,GAASK,MACnB7B,QAAS,GACT8B,YAAa,GACbC,YAAa,GACbC,OAAQ,GACRC,WAAY,GACZC,WAAY,GACZC,cAAe,KACfC,sBAAsB,EACtBC,iBAAiB,EACjBC,kBAAkB,GAGpB/M,IAxB8B,E,mDA2BzBL,GAAS,IAAD,OACbA,EAAEmM,iBADW,MAGe5O,KAAKjC,MAAzBoR,EAHK,EAGLA,SAAU9C,EAHL,EAGKA,MACd8C,IAAaJ,GAASK,QACxBtN,aAAaiB,QACX,eADF,8CAEyCsJ,EAFzC,iBAEuD8C,EAAStB,cAFhE,eAKA/L,aAAaiB,QAAQ,qBAAsBsJ,GAE3CrM,KAAKiC,SACH,CAAE2N,iBAAiB,EAAOD,sBAAsB,IAChD,WACE,EAAK1N,SAAS,CAAE2N,iBAAiB,QAKnCT,IAAaJ,GAASe,QACxB9P,KAAKiC,SAAS,CAAEsL,QAAS,GAAI+B,YAAa,GAAIC,OAAQ,KAAM,WAC1D,EAAKQ,gBAIT/P,KAAKiC,SAAS,CAAEgK,UAAU,M,oKAIKjM,KAAKjC,MAA5BsO,E,EAAAA,MAAOiD,E,EAAAA,YACTtO,EAAYC,cAClBjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QAAS,qB,kBAGa6C,IAAM+E,KAAN,UACjBzH,EADiB,mBAEpB,CACEgJ,aACE6H,GAAeA,EAAYxP,OACvBwP,EADJ,8CAE2CjD,EAF3C,0BAGF2D,WAAW,GAEb,CACEpO,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,WAXxC6O,E,SAeWA,EAAQjM,MAASiM,EAAQjM,KAAKiM,Q,iDAE/CvN,KAAKiC,SAAS,CACZsL,QAAQ,GAAD,mBAAMvN,KAAKjC,MAAMwP,SAAjB,YAA6BA,EAAQjM,KAAKiM,QAAQX,QACzD0C,YAAa/B,EAAQjM,KAAKiM,QAAQf,KAClCqD,kBAAkB,IAEpB7P,KAAKL,MAAMkB,qBAAqBG,G,kDAEhChB,KAAKL,MAAMkB,qBAAqBG,G,yLAIpBvD,G,kFACNgS,EAAezP,KAAKjC,MAApB0R,WACFzO,EAAYC,cAClBjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QAAS,oB,kBAGY6C,IAAM+E,KAAN,UAChBzH,EADgB,mBAEnB,CACEgJ,aACEgI,GAAcA,EAAW3P,OACrB2P,EADJ,6CAE0ChS,EAF1C,qBAGFuS,WAAW,GAEb,CACEpO,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,UAXxC6Q,E,OAcNvP,KAAKL,MAAMkB,qBAAqBG,GAC3BuO,GAAWA,EAAOjO,K,mDACvBtB,KAAKiC,SAAS,CACZsN,OAAO,GAAD,mBAAMvP,KAAKjC,MAAMwR,QAAjB,YAA4BA,EAAOjO,KAAKsL,QAC9C6C,WAAYF,EAAOjO,KAAKkL,O,kDAG1BxM,KAAKL,MAAMkB,qBAAqBG,G,gJAI1B,IAAD,SAUHhB,KAAKjC,MARPoR,EAFK,EAELA,SACA5B,EAHK,EAGLA,QACA+B,EAJK,EAILA,YACAC,EALK,EAKLA,OACAE,EANK,EAMLA,WACAE,EAPK,EAOLA,qBACAC,EARK,EAQLA,gBACAC,EATK,EASLA,iBAGMrS,EAAoBwC,KAAKL,MAAzBnC,gBACR,OACE,yBAAK4C,UAAU,uBACXJ,KAAKjC,MAAMmR,mBAiUX,uBAAG9O,UAAU,0BAAb,0CAhUA,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2DACb,uBAAGA,UAAU,SAAb,0BAEE5C,EAiBE,KAhBF,iEACmC,IACjC,uBACE4C,UAAU,GACVqB,KAAK,GACLe,QAAS,SAAAC,GACPA,EAAEmM,iBACE,EAAKjP,MAAMgB,OACb,EAAKhB,MAAMgB,UANjB,SAWK,IAbP,kBAmBN,yBACEiD,MAAO,CACL4F,QAAS,OACTyG,aAAc,SACdC,cAAe,SACfjG,SAAU,SAGZ,yBACErG,MAAO,CACL4F,QAAS,OACTC,eAAgB,SAChBO,OAAQ,QAGV,4BACEpG,MAAO,CAAEoG,OAAQ,OACjB5J,UAAS,wCACP+O,IAAaJ,GAASe,OAAS,YAAc,IAE/CtN,QAAS,WACP,EAAKP,SAAS,CACZkN,SAAUJ,GAASe,OACnBH,sBAAsB,EACtBC,iBAAiB,MATvB,WAeA,4BACEhM,MAAO,CAAEoG,OAAQ,OACjB5J,UAAS,wCACP+O,IAAaJ,GAASK,MAAQ,YAAc,IAE9C5M,QAAS,WACP,EAAKP,SAAS,CACZkN,SAAUJ,GAASK,MACnBO,sBAAsB,EACtBC,iBAAiB,MATvB,WAgBF,yBACEhM,MAAO,CACL4F,QAAS,OACTC,eAAgB,WAGlB,0BAAM7F,MAAO,CAAE4F,QAAS,gBACtB,2BACE+E,SAAU,SAAA9L,GACJA,EAAEwB,OAAOwJ,OAAShL,EAAEwB,OAAOwJ,MAAM3N,OACnC,EAAKmC,SAAS,CAAEoK,MAAO5J,EAAEwB,OAAOwJ,QAGlC,EAAKxL,SAAS,CAAEoK,MAAO,GAAIJ,UAAU,KAEvC7L,UAAU,QACVuO,YAAW,qBAAgBQ,EAASpB,uBAEtC,4BACE3N,UAAU,SACVnC,KAAK,SACLuE,QAAS,SAAAC,GACP,EAAKiM,OAAOjM,KAGd,kBAAC,IAAD,UAKP0M,IAAaJ,GAASe,OACrB,yBAAKlM,MAAO,CAAEgG,UAAW,SACtBiG,EACC,yBAAKzP,UAAU,IACZ+O,IAAaJ,GAASe,QACvBvC,GACAA,EAAQzN,OACN,yBACE8D,MAAO,CACL4F,QAAS,OACT0G,cAAe,SACfxG,WAAY,WAGd,uBAAG9F,MAAO,CAAEoG,OAAQ,SAApB,oBACA,yBACEpG,MAAO,CACLyF,MAAO,OACPG,QAAS,cACT2G,UAAW,SACX1G,eAAgB,aAChBO,OAAQ,SAGTuD,EAAQ5E,KAAI,SAAChC,GAAD,OACX,4BACEoB,IAAK9G,cACLb,UAAU,SACVwD,MAAO,CACLwM,WAAY,EACZC,MAAO,QACPhH,MAAO,OACPC,OAAQ,QACRgH,gBAAgB,QAAD,OACb3J,EAAO4J,OAAO,GAAK5J,EAAO4J,OAAO,GAAGC,IAAM,GAD7B,MAGfC,eAAgB,QAChBC,mBAAoB,SACpB7M,SAAU,UAEZrB,QAAS,SAAAC,GACPA,EAAEmM,iBACF,EAAK3M,SAAS,CAAEsN,OAAQ,KAAM,kBAC5B,EAAKoB,UAAUhK,EAAOlJ,SAI1B,uBACEmG,MAAO,CACLyM,MAAO,QACPO,OAAQ,IAGTjK,EAAO3D,MAEV,yBACEY,MAAO,CACLgN,OAAQ,EACR3H,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXC,MAAO,OACPC,OAAQ,OACRC,WAAY,wBAKnB+F,EACC,4BACElP,UAAU,SACVoC,QAAS,SAAAC,GACPA,EAAEmM,iBACF,EAAKmB,cAEPnM,MAAO,CACLyF,MAAO,OACPC,OAAQ,QACR8G,WAAY,IAThB,aAcE,OAGN,KAEHjB,IAAaJ,GAASe,QAAUP,GAAUA,EAAOzP,OAChD,yBACE8D,MAAO,CACL4F,QAAS,OACT0G,cAAe,SACfxG,WAAY,WAGd,uBAAG9F,MAAO,CAAEoG,OAAQ,SAApB,mBACA,yBACEpG,MAAO,CACLyF,MAAO,OACPG,QAAS,cACT2G,UAAW,SACX1G,eAAgB,aAChBO,OAAQ,SAGTuF,EAAO5G,KAAI,SAACjC,GAAD,OACV,4BACEqB,IAAK9G,cACLb,UAAU,SACVwD,MAAO,CACLwM,WAAY,EACZC,MAAO,QACPhH,MAAO,OACPC,OAAQ,QACRgH,gBAAgB,QAAD,OACb5J,EAAM6J,QACN7J,EAAM6J,OAAO,IACb7J,EAAM6J,OAAO,GAAGC,IACZ9J,EAAM6J,OAAO,GAAGC,IAChB,GALS,MAOfC,eAAgB,QAChBC,mBAAoB,SACpB7M,SAAU,UAEZrB,QAAS,SAAAC,GACPA,EAAEmM,iBAEF,EAAK3M,SACH,CACE2N,iBAAiB,EACjBD,sBAAsB,EACtBE,kBAAkB,IAEpB,WACE/N,aAAaiB,QACX,eADF,4CAEuC2D,EAAMjJ,GAF7C,YAIAqE,aAAaiB,QACX,qBACA2D,EAAM1D,MAER,EAAKf,SACH,CACE0N,sBAAsB,EACtBD,cAAehJ,IAEjB,oBAMR,uBACE9C,MAAO,CACLyM,MAAO,QACPO,OAAQ,IAGTlK,EAAM1D,MAET,yBACEY,MAAO,CACLgN,OAAQ,EACR3H,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXC,MAAO,OACPC,OAAQ,OACRC,WAAY,wBAKnBkG,EACC,4BACErP,UAAU,SACVoC,QAAS,SAAAC,GACPA,EAAEmM,iBACF,EAAK+B,UAAU,KAEjB/M,MAAO,CACLyF,MAAO,OACPC,OAAQ,QACR8G,WAAY,IAThB,aAcE,OAGN,MAGN,yBACEhQ,UAAU,OACVwD,MAAO,CAAE4F,QAAS,OAAQC,eAAgB,WAE1C,4BACErJ,UAAU,SACVoC,QAAS,WACP,EAAKP,SAAS,CAAE4N,kBAAkB,MAHtC,2BAWJ,KACHF,EAAuB,kBAACkB,GAAD,CAAarJ,eAAe,IAAW,KAC9DoI,EAAkB,kBAACiB,GAAD,CAAarJ,eAAe,IAAW,W,GA7cjDhH,aA8drB,IAWesQ,qBACbC,IACAtQ,aAlBF,SAAyB1C,GAEvB,MAAO,CAAEP,gBADmBO,EAAMI,KAA1BX,oBAIiB,SAACkD,GAC1B,MAAO,CACLI,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KT3hBgB,oBS2hBSC,QAASI,KAC/CsC,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KR5hBkB,sBQ4hBSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KR7hBqB,yBQ6hBSC,QAAST,SAIzCqT,CAGb9B,IC1gBIgC,G,kDACJ,WAAYrR,GAAmB,IAAD,8BAC5B,cAAMA,IACD5B,MAAQ,GACb+E,IAH4B,E,qDAMpB,IAAD,OACCtF,EAAoBwC,KAAKL,MAAzBnC,gBACFyT,EAAcnP,aAAagE,QAAQ,sBACrChE,aAAagE,QAAQ,sBACrB9F,KAAKL,MAAMsR,YACf,OACE,yBAAK7Q,UAAU,qBACZ5C,EACC,yBAAK4C,UAAU,WACb,yBAAKwD,MAAO,CAAE4F,QAAS,OAAQC,eAAgB,WAC7C,yBACErJ,UAAU,oBACVwD,MAAO,CACLsN,SAAU,QACV1H,QAAS,OACTE,WAAY,SACZwG,cAAe,WAGjB,uBAAG9P,UAAU,SAAb,YAA+B6Q,GAAiB,IAChD,4OAQJ,yBAAK7Q,UAAU,WACb,yBAAKA,UAAU,6CACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACEA,UAAU,4DACV8B,GAAG,WAEH,sCAEF,kBAAC,IAAD,CACE9B,UAAU,4DACV8B,GAAG,gBAEH,2CAGF,kBAAC,IAAD,CACE9B,UAAU,4DACV8B,GAAG,mBAEH,8CAGF,kBAAC,IAAD,CACE9B,UAAU,4DACV8B,GAAG,cAEH,iDAGJ,6BACA,yBAAK9B,UAAU,yBACb,uBACEA,UAAU,iCACVqB,KAAK,yCAEL,yBACEU,IAAI,4DACJgP,IAAI,oBAEN,0BACEvN,MAAO,CAAEwN,WAAY,MAAOC,SAAU,oBADxC,wBAUR,KACF7T,EAAgE,KAA9C,kBAAC,GAAD,CAAQmD,MAAO,kBAAM,EAAKhB,MAAMgB,gB,GAtFzCH,aA8GJC,oBALf,SAAyB1C,GAEvB,MAAO,CAAEP,gBADmBO,EAAMI,KAA1BX,oBAdiB,SAACkD,GAC1B,MAAO,CACL4K,aAAc,SAACgG,GAAD,OACZ5Q,EAAS,CAAEzC,KX3HW,eW2HSC,QAASoT,KAC1C1Q,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KT5HkB,sBS4HSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KT7HqB,yBS6HSC,QAAST,KACpDqD,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KVjIgB,oBUiISC,QAASI,QASpCmC,CAA6CuQ,IChGtDO,G,kDAIJ,WAAY5R,GAAiC,IAAD,8BAC1C,cAAMA,IACD5B,MAAQ,CACXyT,WAAY,GACZC,YAAY,EACZC,WAAY,GACZC,WAAW,EACXC,qBAAsB,GACtBC,sBAAuB,GACvBC,eAAe,EACfzF,MAAO,GACPL,YACsB,cAApB,EAAKrM,MAAM1B,KACP,mDACA,gDACN8T,UAAU,EACVC,eAAoC,cAApB,EAAKrS,MAAM1B,KAAuB,WAAa,SAEjE6E,IAlB0C,E,gEAsB1C9C,KAAKiS,iB,uKAICjR,EAAYC,c,SAEhBjB,KAAKiC,SAAS,CAAE8P,UAAU,IAC1B/R,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QACsB,cAApB0B,KAAKL,MAAM1B,KACP,qBACA,oB,SAEiBkD,IAAM+E,KAAN,UACpBzH,EADoB,oBAEvB,CACEgJ,aAAczH,KAAKjC,MAAMiO,YACzBtE,gBAAiB,KACjBC,eAAgB,OAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,UATxC8S,E,OAaNxR,KAAKL,MAAMkB,qBAAqBG,GAE3BwQ,GAAeA,EAAWlQ,MAASkQ,EAAWlQ,KAAKsL,M,mDAEhDJ,EAASgF,EAAWlQ,KAApBkL,KAERxM,KAAKiC,SACH,CACEuP,WAAY,YAAIxR,KAAKjC,MAAMyT,YAAYpE,OACjB,cAApBpN,KAAKL,MAAM1B,KACPuT,EAAWlQ,KAAKsL,MAChB4E,EAAWlQ,KAAKsL,MAAMjE,KAAI,SAACoE,GAAD,OAAeA,EAAKrG,UAEpDsF,YAAaQ,EACbuF,UAAU,IAEZ,WACOvF,GACL,EAAKyF,kB,kDAITjS,KAAKL,MAAMkB,qBAAqBG,GAChChB,KAAKiC,SAAS,CAAE6P,eAAe,EAAMC,UAAU,I,2IAI9CtU,EAAYgJ,GACf3E,aAAaiB,QACX,eADF,qCAGwB,cAApB/C,KAAKL,MAAM1B,KAAuB,YAAc,SAHpD,YAIMR,EAJN,YAMAqE,aAAaiB,QAAQ,qBAAsB0D,GAC3CzG,KAAKL,MAAMuS,QAAQC,KAAK,a,6BAGnB9F,GACLrM,KAAKiC,SAAS,CAAEoK,Y,yCAGE,IAAD,OACjB,OAAO,YAAIrM,KAAKjC,MAAMyT,YAAYnT,QAAO,SAAC0O,GAAe,IAC/CqF,EAAsBrF,EAAtBqF,YAAapP,EAAS+J,EAAT/J,KACfqJ,EAAQ,EAAKtO,MAAMsO,MAAM0B,oBAC/B,GACGqE,GACCA,EACGxE,WACAC,cACAC,SAASzB,IACbrJ,GACCA,EACG4K,WACAC,cACAC,SAASzB,GAEd,OAAOU,O,+BAIH,IAAD,OACHH,EACF5M,KAAKjC,MAAMsO,OAASrM,KAAKjC,MAAMsO,MAAMvM,OACjCE,KAAKqS,mBACLrS,KAAKjC,MAAMyT,WACjB,OACE,yBAAKpR,UAAU,0BACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,2DACb,uBAAGA,UAAU,SAAb,QAA2BJ,KAAKjC,MAAMiU,eAAtC,KAEA,qCAAWhS,KAAKjC,MAAMiU,eAAtB,4BAGJ,yBAAK5R,UAAU,WACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQkS,QAAQ,gBAAjC,eACetS,KAAKjC,MAAMiU,eAD1B,KAGA,yBAAK5R,UAAU,kCACb,2BACE3C,GAAG,eACH2C,UAAU,qBACVmO,SAAU,SAAA9L,GAAC,OAAI,EAAKiM,OAAOjM,EAAEwB,OAAOwJ,QACpCkB,YAAY,SACZlB,MAAOzN,KAAKjC,MAAMsO,QAEnBrM,KAAKjC,MAAMsO,MAAMvM,OAChB,4BACE0C,QAAS,WACP,EAAKP,SAAS,CAAEoK,MAAO,OAGzB,kBAAC,IAAD,CAAWjM,UAAU,mBAErB,OAGNJ,KAAKjC,MAAM+T,cAmDX,uBAAG1R,UAAU,0BAAb,iBACiBJ,KAAKjC,MAAMiU,eAD5B,uBAlDA,yBAAK5R,UAAU,qBACZwM,EAAM9M,OACL8M,EAAMjE,KAAI,SAACoE,GAAD,OACR,yBACEnJ,MAAO,CACL0M,gBACEvD,EAAKwD,QAAUxD,EAAKwD,OAAO,IAAMxD,EAAKwD,OAAO,GAAGC,IAAhD,cACWzD,EAAKwD,OAAO,GAAGC,IAD1B,KAEI,OACNC,eAAgB,QAChBC,mBAAoB,UAEtB3I,IAAK9G,cACLb,UAAU,+CACVoC,QAAS,kBAAM,EAAK+P,KAAKxF,EAAKtP,GAAIsP,EAAK/J,QAEvC,uBACEY,MAAO,CACLyM,MAAO,QACPpH,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXwH,OAAQ,EACRjH,QAAS,OACTJ,WAAY,iBACZc,aAAc,QAGf0C,EAAK/J,MAER,yBACEY,MAAO,CACLyF,MAAO,OACPC,OAAQ,OACRL,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,uBACXG,WAAY,iBACZqH,OAAQ,SAKb5Q,KAAKjC,MAAMgU,SAEZ,KADF,iD,GA1MevR,aAuOlBsQ,yBACbC,IACAtQ,aANF,SAAyB1C,GACvB,MAAO,MAXkB,SAAC2C,GAC1B,MAAO,CACL4K,aAAc,kBAAM5K,EAAS,CAAEzC,KZrQP,kBYsQxB2C,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KVtQkB,sBUsQSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KVvQqB,yBUuQSC,QAAST,SAQzCqT,CAGbS,IC9Oa,YACbiB,EACAC,EACAC,GACM,IACAC,EADD,kDAKH,WAAYhT,GAA2B,IAAD,8BACpC,cAAMA,IACD5B,MAAQ,CACXkT,YAAa,IAHqB,EALnC,gEAYY,IAAI2B,gBAAgBrR,OAAOC,SAASkN,QAAQtN,IAAI,QAE3DpB,KAAK6S,mBAGP7S,KAAK8S,qBAjBJ,2CAqBD9S,KAAK8S,qBArBJ,8BAwBM,IAAD,EAKF9S,KAAKL,MAHPiB,EAFI,EAEJA,kBACAC,EAHI,EAGJA,qBACAC,EAJI,EAIJA,gBAEFH,EAAMC,EAAmBC,EAAsBC,KA9B9C,gKAkCKE,EAAYC,cAlCjB,SAoCCjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmBsD,QACzB5C,QAAS,mBAvCZ,SAyCO6C,IAAMC,IAAN,UACD3C,EADC,2BAC0B,IAAImU,gBAChCrR,OAAOC,SAASkN,QAChBtN,IAAI,SACN,CACEQ,iBAAiB,IA9CtB,OAkDC5B,KAAK8S,mBAEL9S,KAAKL,MAAMkB,qBAAqBG,GApDjC,gDAsDChB,KAAKL,MAAMmB,gBAAgB,CACzB7C,KAAMJ,EAAoB0C,MAC1BD,KAAM,uBACN7C,GAAIwD,gBAENjB,KAAKL,MAAMkB,qBAAqBG,GA3DjC,8QAgE2BhB,KAAKL,MAAzBnC,gBAhEP,wDAkEKwD,EAAYC,cAlEjB,SAqECjB,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ1C,QAAS,mBACTL,KAAML,EAAmBsD,UAxE5B,SA2EuBC,IAAM+E,KAAN,UACjBzH,EADiB,oBAEpB,CACEgJ,aAAc,gCACdC,gBAAiB,KACjBC,eAAgB,OAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,KApF/C,UA2EOqU,EA3EP,OAwFC/S,KAAKL,MAAMkB,qBAAqBG,IAE5B+R,EAAQzR,OAAQyR,EAAQzR,KAAK7D,GA1FlC,wBA2FGuC,KAAKL,MAAM2L,aAAayH,EAAQzR,KAAK7D,IAErCqE,aAAaiB,QAAQ,qBAAsBgQ,EAAQzR,KAAK0R,cACxDhT,KAAKiC,SAAS,CAAEgP,YAAa8B,EAAQzR,KAAK0R,eA9F7C,2BAkGKN,GACF1S,KAAKL,MAAMuS,QAAQC,KAAK,SAnG3B,kDAsGCnS,KAAKL,MAAMkB,qBAAqBG,GAtGjC,+IA0GO,IAAD,OACP,OAAOhB,KAAKL,MAAMsT,YAChBjT,KAAKL,MAAMnC,gBACT,kBAACgV,EAAD,kBACOxS,KAAKL,MAAO8S,GADnB,CAEExB,YAAajR,KAAKjC,MAAMkT,YACxBtQ,MAAO,kBAAM,EAAKA,YAElB,KAEJ,kBAAC6R,EAAD,kBACOxS,KAAKL,MAAO8S,GADnB,CAEE9R,MAAO,kBAAM,EAAKA,gBAtHrB,GACsBuS,IAAM1S,WA8IjC,OAAOsQ,kBACLC,IACAtQ,aARsB,SAAC1C,GACvB,MAAO,CACLP,gBAAiBO,EAAMI,KAAKX,oBAfL,SAACkD,GAC1B,MAAO,CACL4K,aAAc,SAACgG,GAAD,OACZ5Q,EAAS,CAAEzC,KbzKS,eayKWC,QAASoT,KAC1C1Q,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KX1KgB,sBW0KWC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KX3KmB,yBW2KWC,QAAST,KACpDqD,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KZ/Kc,oBY+KWC,QAASI,SAU5CwS,CAGL6B,IC9IEpH,GAAkB,SACtBC,EACAC,EACAC,EACAC,GAJsB,OAMtBH,IAAWC,EACT,wBAAIjJ,QAAS,SAAAC,GAAC,OAAIkJ,EAAWlJ,KAC1B+I,EACc,IAAdE,GAAoBA,EAAkC,KAAtB,oDAClB,IAAdA,EAAkB,8CAAe,KACnB,IAAdA,EAAkB,8CAAe,MAGpC,wBACElJ,QAAS,SAAAC,GACPkJ,EAAWlJ,KAGZ+I,EALH,iBASE2H,G,kDACJ,WAAYxT,GAAoB,IAAD,sBAC7B,cAAMA,GAEN,IAAMkM,EAAuB/J,aAAagE,QAAQ,sBAC5CgG,EAAuB9F,KAAKC,MAAM4F,GAAiBlD,KACvD,SAACjD,GAAD,sBACKA,EADL,CAEE8H,UAAW9H,EAAMgB,OAAShB,EAAMgB,MAAM1D,KAAO0C,EAAMgB,MAAM1D,KAAO,QAPvC,OAW7B,EAAKjF,MAAQ,CACXgO,UAAW,GACXE,UAAU,EACVlE,IAAK,KACLE,KAAM,KACNiE,KAAM,CAAEV,OAAQ,KAAME,UAAW,MACjCoG,eAAe,EACf1F,cAAc,EACdC,MAAO,GACPvO,eAAgBgO,GAAoC,GACpDQ,aAAa,EACbC,eAAgB,IAGlBzJ,IAzB6B,E,wDA4BnBL,GACY,QAAlBA,EAAEwB,OAAOjB,KASS,SAAlBP,EAAEwB,OAAOjB,MACXhD,KAAKiC,SAAS,CACZgG,KAAMxF,EAAEwB,OAAOwJ,MACfxB,WAAYxJ,EAAEwB,OAAOwJ,SAAWzN,KAAKjC,MAAMgK,MAX7C/H,KAAKiC,SAAS,CACZ8F,IAAKtF,EAAEwB,OAAOwJ,MACdxB,WAAYxJ,EAAEwB,OAAOwJ,SAAWzN,KAAKjC,MAAMkK,S,0CAc5B,IAAD,SACIjI,KAAKjC,MAAnBgK,EADU,EACVA,IAAKE,EADK,EACLA,KACPgE,EAAW,YAAIjM,KAAKjC,MAAMD,gBAAgBO,QAAO,SAACqH,GACtD,OAAIqC,GAAOE,GAAQvC,EAAMqC,MAAQA,GAAOrC,EAAMuC,OAASA,GAGnDF,IAAQE,GAAQvC,EAAMqC,MAAQA,IAG7BA,GAAOE,GAAQvC,EAAMuC,OAASA,EAL1BvC,EASJqC,GAAQE,OAAb,EACSvC,KAIX,OAAK1F,KAAKjC,MAAMsO,MAITJ,EAAS5N,QAAO,SAACqH,GAAgB,IAC9B1C,EAAmC0C,EAAnC1C,KAAM2D,EAA6BjB,EAA7BiB,OAAQ0B,EAAqB3C,EAArB2C,MAAOJ,EAAcvC,EAAduC,KAAMF,EAAQrC,EAARqC,IAC/B2F,GAAe,EAanB,GAZA,CAAC1K,EAAM2D,EAAQ0B,EAAOJ,EAAMF,GAAKY,KAAI,SAACgF,GAElCA,GACAA,EACGC,WACAC,cACAC,SAAS,EAAK/P,MAAMsO,MAAM0B,uBAE7BL,GAAe,MAIfA,EAAc,OAAOhI,KAlBlBuG,I,6BAsBJxJ,GACDA,EAAEwB,OAAOwJ,OAAShL,EAAEwB,OAAOwJ,MAAM3N,OACnCE,KAAKiC,SAAS,CAAEoK,MAAO5J,EAAEwB,OAAOwJ,MAAOxB,UAAU,IAInDjM,KAAKiC,SAAS,CAAEoK,MAAO,GAAIJ,UAAU,M,0CAGnBvG,GAClB,IAAM+C,EAAuB3G,aAAagE,QAAQ,sBAK5C4C,GAJoB1C,KAAKC,MAAMwC,GACjCzC,KAAKC,MAAMwC,GACX,IAEkCpK,QACpC,SAACuK,GAAD,OAAsBA,EAAYnL,KAAOiI,EAAMjI,MAGjDqE,aAAaiB,QACX,qBACAiD,KAAKqB,UAAUqB,IAEjB1I,KAAKiC,SAAS,CAAEnE,eAAgB4K,M,qCAGnBhD,GACb,IAAM+C,EAAuB3G,aAAagE,QAAQ,sBAC5CkI,EAAehI,KAAKC,MAAMwC,GAC5BzC,KAAKC,MAAMwC,GACX,GACEC,EAAgB,sBAAOsF,GAAP,CAAqBtI,IAC3C5D,aAAaiB,QACX,qBACAiD,KAAKqB,UAAUqB,IAGjB1I,KAAKiC,SAAS,CAAEnE,eAAgB4K,M,yCAIhC,IAAMD,EAAuB3G,aAAagE,QAAQ,sBAC5CgG,EAAkB9F,KAAKC,MAAMwC,GACnCzI,KAAKiC,SAAS,CAAEnE,eAAgBgO,M,+EAGZrJ,G,0FACpBA,EAAEmM,iBACI5N,EAAYC,cACZmS,EAA0BnS,cAC1BoS,EAAkB5Q,EAAEwB,OAAOqP,cAAc7F,MACzC8F,EAAyB9Q,EAAEwB,OAAOuP,qBAAqB/F,M,SAE3DzN,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAIuD,EACJ/C,KAAML,EAAmB2J,aACzBjJ,QAAS,0B,SAEqB6C,IAAM+E,KAAN,UAC3BzH,EAD2B,oBAE9B,CACEgJ,aAAa,oCAAD,OAAsCzH,KAAKL,MAAM2R,OAAjD,cACZ5J,gBAAiB,CACf1E,KAAMqQ,EACNjB,YAAamB,GAEf5L,eAAgB,QAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,UAZxC+U,E,OAgBNzT,KAAKL,MAAMkB,qBAAqBG,GAG7ByS,GACAA,EAAkBnS,MAClBmS,EAAkBnS,KAAK7D,G,0DAK1BuC,KAAKL,MAAMiB,kBAAkB,CAC3BnD,GAAI2V,EACJnV,KAAML,EAAmB2J,aACzBjJ,QAAS,8BAGLuO,EAAS7M,KAAKjC,MAAMkO,SACtBjM,KAAKoO,oBACLpO,KAAKjC,MAAMD,e,UAEeqD,IAAM+E,KAAN,UACzBzH,EADyB,oBAE5B,CACEgJ,aAAa,wCAAD,OAA0CgM,EAAkBnS,KAAK7D,GAAjE,WACZiK,gBAAiB,CACfgM,KAAM7G,EAAOlE,KAAI,SAACjD,GAAD,OAAgBA,EAAMiO,QAEzChM,eAAgB,QAElB,CACE/F,iBAAiB,EACjBuE,QAAS,CAAE,8BAA+BzH,K,YAXxCkV,E,SAiBHA,EAAgBtS,MAChBsS,EAAgBtS,KAAKuS,Y,mDAIxB7T,KAAKL,MAAMkB,qBAAqBuS,GAEhCpT,KAAKL,MAAMmB,gBAAgB,CACzB7C,KAAMJ,EAAoBwC,QAC1BC,KAAK,WAAD,OAAa+S,GACjB5V,GAAIwD,gB,kDAGNjB,KAAKL,MAAMkB,qBAAqBuS,GAChCpT,KAAKL,MAAMkB,qBAAqBG,GAChChB,KAAKL,MAAMmB,gBAAgB,CACzB7C,KAAMJ,EAAoB0C,MAC1BD,KAAM,0BACN7C,GAAIwD,gB,kJAKCuK,GACT,IAAIE,EAAY,EAChB,GAAI1L,KAAKjC,MAAMmO,KAAKV,SAAWA,EAC7BE,EAAY,OAEZ,OAAQ1L,KAAKjC,MAAMmO,KAAKR,WACtB,KAAK,EACHA,EAAY,EACZ,MACF,KAAK,EACHA,EAAY,EACZ,MACF,KAAK,EACHA,EAAY,EAIlB1L,KAAKiC,SAAS,CACZiK,KAAM,CAAEV,SAAQE,iB,sCAIJuC,GAAsB,IAC5B/B,EAASlM,KAAKjC,MAAdmO,KACAR,EAAsBQ,EAAtBR,UAAWF,EAAWU,EAAXV,OACnB,OAAO,YAAIyC,GAAgB/B,MAAK,SAACgC,EAAYC,GAC3C,OAAkB,IAAdzC,EAAwBwC,EAAM1C,GAAU2C,EAAO3C,GAAU,GAAK,EAChD,IAAdE,EAAwBwC,EAAM1C,GAAU2C,EAAO3C,GAAU,GAAK,EAC3D,O,mCAKTxL,KAAKiC,SAAS,CAAEqK,aAAa,M,+BAGrB,IAAD,OAgBDO,EAAS7M,KAAKjC,MAAMkO,SACtBjM,KAAKoO,oBACLpO,KAAKjC,MAAMD,eAETuQ,EAAerO,KAAKsO,gBAAgBzB,GApBnC,EAsBoC7M,KAAKjC,MAAxCwO,EAtBD,EAsBCA,eAAgBzO,EAtBjB,EAsBiBA,eAEhBN,EAAoBwC,KAAKL,MAAzBnC,gBAER,OACE,yBAAK4C,UAAU,0BACZJ,KAAKjC,MAAMuO,YACV,kBAAC,GAAD,CACE5G,MAAO6G,EACP/E,eAAehK,EACfsL,eAAgB,SAACpD,GAAD,OAAgB,EAAKoD,eAAepD,IACpDqD,oBAAqB,SAACrD,GAAD,OACnB,EAAKqD,oBAAoBrD,IAE3BmD,iBAAkB,kBAAM,EAAKA,oBAC7BN,WAAY,kBAAM,EAAKA,cACvBzK,eAAgBA,IAEhB,KACFkC,KAAKjC,MAAM+T,cAwQX,uBAAG1R,UAAU,0BAAb,mDAvQA,oCACG5C,EACC,oCACE,yBAAK4C,UAAU,WACb,yBAAKA,UAAU,6CACb,uBAAGA,UAAU,SAAb,qBACA,wFAC6D,IAC3D,kBAAC,IAAD,CAAS8B,GAAG,mBAAZ,aAFF,OAEwD,IACtD,kBAAC,IAAD,CAASA,GAAG,gBAAZ,UAHF,gCAQJ,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,qBACb,+CAGF,0BACE3C,GAAG,gBACH2C,UAAU,uBACV0T,SAAU,SAAArR,GAAC,OAAI,EAAKsR,gBAAgBtR,KAEpC,yBAAKrC,UAAU,mBACb,yBAAKA,UAAU,SACb,2BAAOkS,QAAQ,OAAOlS,UAAU,SAAhC,QAGA,2BACE3C,GAAG,OACH2C,UAAU,QACV4C,KAAK,gBACL2L,YAAY,mBAGhB,yBAAKvO,UAAU,SACb,2BAAOkS,QAAQ,cAAclS,UAAU,SAAvC,eAGA,8BACE3C,GAAG,cACHuW,KAAM,EACN5T,UAAU,gCACV4C,KAAK,uBACL2L,YAAY,2BAIlB,yBAAKvO,UAAU,yBACb,4BAAQA,UAAU,mCAAlB,gBAUZ,yBAAKA,UAAU,WACb,yBAAKA,UAAU,6CACb,uBAAGA,UAAU,SAAb,qBACA,2BACE,uBAAGqB,KAAK,GAAGe,QAAS,kBAAM,EAAK7C,MAAMgB,UAArC,SAEK,IAHP,uGAWN,yBAAKP,UAAU,yBACb,yBAAKA,UAAU,iBACZJ,KAAKjC,MAAMqO,aACV,yBAAKhM,UAAU,oBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cAGjB,KACJ,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,+BACb,0BACEmO,SAAU,SAAA9L,GACR,EAAK+L,YAAY/L,KAGnB,yBAAKrC,UAAU,kBACb,yBAAKA,UAAU,UACb,4BAAQ4C,KAAK,OACX,4BACEsK,UAAWtN,KAAKjC,MAAMgK,IACtB0G,UAAQ,EACRhB,MAAM,IAHR,OAxIX,CACX,IACA,KACA,IACA,KACA,IACA,IACA,KACA,IACA,KACA,IACA,KACA,KAmI4B9E,KAAI,SAAAZ,GAAG,OACX,4BAAQA,IAAK9G,cAAUwM,MAAO1F,GAC3BA,QAKR/H,KAAKjC,MAAMgK,IACV,4BAAQvF,QAAS,SAAAC,GAAC,OAAI,EAAKR,SAAS,CAAE8F,IAAK,SACzC,kBAAC,IAAD,CAAW3H,UAAU,mBAErB,MAEN,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,UACb,4BAAQ4C,KAAK,QACX,4BACEsK,UAAWtN,KAAKjC,MAAMkK,KACtBwG,UAAQ,EACRhB,MAAM,IAHR,QAOA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAGHzN,KAAKjC,MAAMkK,KACV,4BAAQzF,QAAS,SAAAC,GAAC,OAAI,EAAKR,SAAS,CAAEgG,KAAM,SAC1C,kBAAC,IAAD,CAAW7H,UAAU,mBAErB,QAIV,yBAAKA,UAAU,8BACb,2BACEA,UAAU,iBACVmO,SAAU,SAAA9L,GAAC,OAAI,EAAKiM,OAAOjM,IAC3BkM,YAAa,SACblB,MAAOzN,KAAKjC,MAAMsO,QAEnBrM,KAAKjC,MAAMsO,MAAMvM,OAChB,4BACE0C,QAAS,WACP,EAAKP,SAAS,CAAEoK,MAAO,OAGzB,kBAAC,IAAD,CAAWjM,UAAU,mBAErB,KAAM,MAId,2BAAOA,UAAU,iCACf,+BACE,4BACE,wCAECmL,GACC,OACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,WAInBJ,GACC,MACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,UAInBJ,GACC,OACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,WAInBJ,GACC,QACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,YAInBJ,GACC,SACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,aAGnBJ,GACC,QACAvL,KAAKjC,MAAMmO,KAAKV,OAChBxL,KAAKjC,MAAMmO,KAAKR,WAChB,SAACjJ,GACCA,EAAEmM,iBACF,EAAKjD,WAAW,kBAKxB,+BACG0C,EAAa1F,KAAI,SAACoC,GAAD,OAChB,wBAAIhD,IAAK9G,eACP,wBAAI4N,MAAM,UACR,kBAAC,IAAD,CACEzO,UAAS,8CACP,EAAKrC,MAAMqO,aAAe,gBAAkB,IAE9C5J,QAAS,WACP,EAAKuG,oBAAoBgC,OAI/B,4BACE,uBACEvI,QAAS,WACP,EAAKP,SAAS,CACZsK,eAAgBxB,EAChBuB,aAAa,MAIhBvB,EAAI/H,OAGT,4BAAK+H,EAAIN,OAASM,EAAIN,OAASM,EAAIhD,KACnC,4BAAKgD,EAAIJ,QAAUI,EAAIJ,QAAUI,EAAI9C,MACrC,4BACG8C,EAAIH,SACDG,EAAIH,SACJkE,OAAO/D,EAAI1C,OAAOkC,QAAQ,IAEhC,4BAAKQ,EAAIpE,QACT,4BAAKoE,EAAIyC,yB,GA1iBJhN,aAikB7B,IAWeC,gBAhBf,SAAyB1C,GAEvB,MAAO,CAAEP,gBADmBO,EAAMI,KAA1BX,gBACkB8T,OAAQvT,EAAMI,KAAKV,OAGpB,SAACiD,GAC1B,MAAO,CACLI,gBAAiB,SAACxC,GAAD,OACfoC,EAAS,CAAEzC,KbzoBgB,oBayoBSC,QAASI,KAC/CsC,kBAAmB,SAACpC,GAAD,OACjBkC,EAAS,CAAEzC,KZ1oBkB,sBY0oBSC,QAASM,KACjDqC,qBAAsB,SAACpD,GAAD,OACpBiD,EAAS,CAAEzC,KZ3oBqB,yBY2oBSC,QAAST,QAIzCgD,CAA6C0S,ICxoBtDc,G,kDACJ,WAAYtU,GAA0B,IAAD,8BACnC,cAAMA,IACD5B,MAAQ,GAFsB,E,qDA+B3B,IACAJ,EAAaqC,KAAKL,MAAlBhC,SACFa,EAAUb,EAASA,EAASmC,OAAS,GAC3C,OAAOtB,EACL,yBAAK4B,UAAU,mBACb,yBAAKA,UAAU,mBACb,6BACE,yBAAKA,UAAU,aAEhB5B,EAAU,2BAAIA,EAAQF,SAAe,OAGxC,S,GA5CkBkC,aA0DXC,gBANS,SAAC1C,GACvB,MAAO,CACLJ,SAAUI,EAAMQ,KAAKZ,aANE,SAAC+C,GAC1B,MAAO,KASMD,CAA6CwT,I,SCxC5DnR,IAEA,IAAMoR,GAAQC,sBACZC,0BAAgBC,GAChBC,8BACEC,0BAAgBC,OAKpBC,IAAQC,WCrCmB,iBDsC3B,IAAMxC,GAAUyC,eAGhBzC,GAAQ0C,QAAO,SAAApT,GACbiT,IAAQI,IAAI,CAAEC,KAAMtT,EAASuT,WAC7BN,IAAQO,SAASxT,EAASuT,aAG5B,IAwCeE,GAxCO,WACpB,OACE,kBAAC,IAAD,CAAUf,MAAOA,IACf,kBAAC,IAAD,CAAQhC,QAASA,IACf,6BACE,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgD,KAAK,UAAUC,UAAWhX,GAAK6Q,MACtC,kBAAC,IAAD,CACEkG,KAAK,kBACLC,UAAWhX,GACToT,GACA,CACEtT,KAAM,cAER,KAGJ,kBAAC,IAAD,CACEiX,KAAK,eACLC,UAAWhX,GACToT,GACA,CACEtT,KAAM,WAER,KAGJ,kBAAC,IAAD,CAAOiX,KAAK,UAAUC,UAAWhX,GAAK0S,MACtC,kBAAC,IAAD,CAAOqE,KAAK,aAAaC,UAAWhX,GAAKgV,MACzC,kBAAC,IAAD,CAAO+B,KAAK,IAAIC,UAAWhX,GAAK6S,WElExBoE,QACW,cAA7B7T,OAAOC,SAAS6T,UAEe,UAA7B9T,OAAOC,SAAS6T,UAEhB9T,OAAOC,SAAS6T,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAAS9R,SAAS+R,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8532d1b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tonalify.8482fd0a.svg\";","import { UPDATE_SELECTION } from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function trackSelectionReducer(\n  state = initialState,\n  action: { type: string; payload: any[] }\n) {\n  switch (action.type) {\n    case UPDATE_SELECTION:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n","import { DEAUTHENTICATE, AUTHENTICATE } from '../actions/index.actions';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  id: string | null;\n}\n\nconst initialState = { isAuthenticated: false, id: null };\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: string }\n) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return { ...state, isAuthenticated: true, id: action.payload };\n    case DEAUTHENTICATE:\n      return { ...state, isAuthenticated: false, id: null };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_FLASH_MESSAGE,\n  DELETE_FLASH_MESSAGE\n} from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_FLASH_MESSAGE:\n      return [...state, action.payload];\n    case DELETE_FLASH_MESSAGE:\n      return [...state].filter((message: any) => message.id != action.payload);\n    default:\n      return state;\n  }\n}\n","import {\n  IS_LOADING,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../actions/index.actions';\n\nexport interface AjaxState {\n  isLoading: boolean;\n  requests: any[];\n}\n\nconst initialState = { isLoading: false, requests: [] };\nexport default function ajaxReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_PENDING_REQUEST:\n      return { ...state, requests: [...state.requests, action.payload] };\n    case FINISH_PENDING_REQUEST:\n      return {\n        ...state,\n        requests: [...state.requests].filter(\n          (request: any) => !!request.id === action.payload\n        )\n      };\n    case IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import trackSelectionReducer from './track-selection.reducer';\nimport authReducer from './auth.reducer';\nimport { AuthState } from './auth.reducer';\nimport flashMessagesReducer from './flash-messages.reducer';\nimport ajaxReducer from './ajax.reducer';\nimport { AjaxState } from './ajax.reducer';\n\nexport interface GlobalState {\n  trackSelection: any[];\n  auth: AuthState;\n  flashMessages: any[];\n  ajax: AjaxState;\n}\n\nexport default {\n  trackSelection: trackSelectionReducer,\n  auth: authReducer,\n  flashMessages: flashMessagesReducer,\n  ajax: ajaxReducer\n};\n","// https://yfitops.herokuapp.com root\n// 'http://localhost:4200' root\n//https://tonalify.herokuapp.com origin\n//http://localhost:3000 origin\nexport const API_ROOT = 'https://yfitops.herokuapp.com';\nexport const HTTP_ORIGIN = 'https://tonalify.herokuapp.com';\nexport enum AJAX_REQUEST_TYPES {\n  'PROFILE',\n  'USER_LIBRARY'\n}\nexport enum FLASH_MESSAGE_TYPES {\n  'ERROR',\n  'SUCCESS'\n}\n\nexport const KEYS_MAP: any = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B'\n};\n\nexport const MODES_MAP: any = {\n  0: 'minor',\n  1: 'major'\n};\n\nexport const METER_MAP: any = {\n  3: '3/4',\n  4: '4/4',\n  5: '5/4',\n  6: '6/4',\n  7: '7/4'\n};\n","export const UPDATE_SELECTION = 'UPDATE_SELECTION';\n","export const AUTHENTICATE = 'AUTHENTICATE';\nexport const DEAUTHENTICATE = 'DEAUTHENTICATE';\n","export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\n","export const IS_LOADING = 'IS_LOADING';\nexport const ADD_PENDING_REQUEST = 'ADD_PENDING_REQUEST';\nexport const FINISH_PENDING_REQUEST = 'FINISH_PENDING_REQUEST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\nimport { DELETE_FLASH_MESSAGE } from './actions/index.actions';\nimport { FLASH_MESSAGE_TYPES } from './constants/constants';\ninterface FlashMessagesProps {\n  flashMessages: any[];\n  deleteFlashMessage: Function;\n}\ninterface FlashMessagesState {\n  message: any;\n}\n\nclass FlashMessages extends Component<FlashMessagesProps, FlashMessagesState> {\n  constructor(props: FlashMessagesProps) {\n    super(props);\n    this.state = {\n      message: null\n    };\n  }\n\n  componentDidUpdate(previousProps: any) {\n    const previousLastMessage =\n      previousProps.flashMessages[previousProps.flashMessages.length - 1];\n    const lastMessage = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (\n      lastMessage &&\n      previousLastMessage &&\n      lastMessage.id !== previousLastMessage.id\n    ) {\n      this.renderFlashMessage();\n      return;\n    }\n\n    if (!previousLastMessage && lastMessage) {\n      this.renderFlashMessage();\n    }\n  }\n\n  renderFlashMessage() {\n    const message = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (!message) return;\n    setTimeout(() => {\n      this.props.deleteFlashMessage(message.id);\n    }, 5000);\n  }\n\n  render() {\n    const { flashMessages } = this.props;\n    const message = flashMessages[flashMessages.length - 1];\n    return (\n      <div className=\"flash-messages-wrapper\">\n        {message ? (\n          <div className=\"flash-message-content\">\n            {message.type === FLASH_MESSAGE_TYPES.SUCCESS ? (\n              <div className=\"notification is-success\">{message.text}</div>\n            ) : null}\n\n            {message.type === FLASH_MESSAGE_TYPES.ERROR ? (\n              <div className=\"notification is-danger\">{message.text}</div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteFlashMessage: (id: string) =>\n      dispatch({ type: DELETE_FLASH_MESSAGE, payload: id })\n  };\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    flashMessages: state.flashMessages\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashMessages);\n","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\n\nexport const login = async (\n  addPendingRequest: Function,\n  finishPendingRequest: Function,\n  addFlashMessage: Function\n) => {\n  const requestId = uuidv4();\n\n  try {\n    addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.PROFILE,\n      message: 'Logging In'\n    });\n    const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n    finishPendingRequest(requestId);\n    if (loginUri && loginUri.data) {\n      window.location.href = loginUri.data;\n      return;\n    }\n    addFlashMessage({\n      type: FLASH_MESSAGE_TYPES.ERROR,\n      text: 'Error Fetching Login URL',\n      id: uuidv4()\n    });\n  } catch (error) {\n    finishPendingRequest(requestId);\n    addFlashMessage({\n      type: FLASH_MESSAGE_TYPES.ERROR,\n      text: 'Error Fetching Login URL',\n      id: uuidv4()\n    });\n  }\n};\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  DEAUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport Logo from './tonalify.svg';\nimport { login } from '../auth/login';\n\ninterface NavbarProps {\n  deauthenticate: Function;\n  addFlashMessage: Function;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  isAuthenticated: boolean;\n}\n\ninterface NavbarState {\n  mobile: boolean;\n}\n\nclass Navbar extends Component<NavbarProps, NavbarState> {\n  constructor(props: NavbarProps) {\n    super(props);\n    this.state = {\n      mobile: false\n    };\n  }\n  async logout() {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.PROFILE,\n      message: 'Logging Out'\n    });\n    const loggedOut = await axios.get(`${API_ROOT}/logout`, {\n      withCredentials: true\n    });\n\n    this.props.finishPendingRequest(requestId);\n\n    if (!loggedOut || !loggedOut.data) return;\n    localStorage.removeItem('logged_in_tonalify');\n    this.props.deauthenticate();\n  }\n\n  login() {\n    const {\n      addPendingRequest,\n      finishPendingRequest,\n      addFlashMessage\n    } = this.props;\n    login(addPendingRequest, finishPendingRequest, addFlashMessage);\n  }\n\n  clickHamburger() {\n    this.setState({ mobile: !!this.state.mobile ? false : true });\n  }\n  render() {\n    const { isAuthenticated } = this.props;\n    return (\n      <nav className=\"navbar-wrapper navbar is-spaced\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className=\"navbar-tonalify-link navbar-item is-family-sans-serif has-text-primary has-text-weight-bold\"\n            to=\"/home\"\n          >\n            <img src={Logo} />\n          </NavLink>\n\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${\n              this.state.mobile ? 'is-active' : ''\n            }`}\n            aria-label=\"menu\"\n            data-target=\"nav-menu\"\n            onClick={e => this.clickHamburger()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"nav-menu\"\n          className={`navbar-menu ${this.state.mobile ? 'is-active' : ''}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/home\"\n              activeClassName=\"is-active\"\n            >\n              Home\n            </NavLink>\n            {isAuthenticated ? (\n              <Fragment>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/search\"\n                  activeClassName=\"is-active\"\n                >\n                  Search\n                </NavLink>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/your-playlists\"\n                  activeClassName=\"is-active\"\n                >\n                  Playlists\n                </NavLink>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/your-albums\"\n                  activeClassName=\"is-active\"\n                >\n                  Albums\n                </NavLink>\n              </Fragment>\n            ) : null}\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/selection\"\n              activeClassName=\"is-active\"\n            >\n              Export\n            </NavLink>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                {this.props.isAuthenticated ? (\n                  <a className=\"button is-light\" onClick={() => this.logout()}>\n                    Logout\n                  </a>\n                ) : (\n                  <a className=\"button is-light\" onClick={() => this.login()}>\n                    Login\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deauthenticate: () => dispatch({ type: DEAUTHENTICATE }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","export function get_local_storage_status() {\n  let test = 'test';\n  try {\n    // try setting an item\n    localStorage.setItem('test', test);\n    localStorage.removeItem('test');\n  } catch (e) {\n    // browser specific checks if local storage was exceeded\n    if (\n      e.name === 'QUATA_EXCEEDED_ERR' || // Chrome\n      e.name === 'NS_ERROR_DOM_QUATA_REACHED' //Firefox/Safari\n    ) {\n      // local storage is full\n      //return 'full';\n      alert('local storage is full, clear cache to continue');\n      return;\n    } else {\n      try {\n        if (localStorage.remainingSpace === 0) {\n          // IE\n          // local storage is full\n          //return 'full';\n          alert('local storage is full, clear cache to continue');\n          return;\n        }\n      } catch (e) {\n        // localStorage.remainingSpace doesn't exist\n      }\n\n      // local storage might not be available\n      //return 'unavailable';\n      alert('local storage is required to continue');\n      return;\n    }\n  }\n  //   return 'available';\n}\n","import * as bodyScrollLock from 'body-scroll-lock';\n\nconst ENABLE_BODY_SCROLL = 'enableBodyScroll';\nconst DISABLE_BODY_SCROLL = 'disableBodyScroll';\n\nexport const enableBodyScroll = $node =>\n  $node.dispatchEvent(new CustomEvent(ENABLE_BODY_SCROLL, { bubbles: true }));\n\nexport const disableBodyScroll = $node =>\n  $node.dispatchEvent(new CustomEvent(DISABLE_BODY_SCROLL, { bubbles: true }));\n\nconst updateDocumentElement = () => {\n  const locked = document.body.style.overflow == 'hidden';\n  document.documentElement.style.overflowY = locked ? 'hidden' : 'scroll';\n};\ndocument.addEventListener(ENABLE_BODY_SCROLL, ({ target }) => {\n  bodyScrollLock.enableBodyScroll(target);\n  setTimeout(updateDocumentElement, 0);\n});\n\ndocument.addEventListener(DISABLE_BODY_SCROLL, ({ target }) => {\n  bodyScrollLock.disableBodyScroll(target);\n  setTimeout(updateDocumentElement, 0);\n});\n","import React, { Component } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\n\nimport { GlobalState } from '../../reducers/index.reducer';\nimport { disableBodyScroll, enableBodyScroll } from '../../htmlScrollLock';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\nimport { KEYS_MAP, MODES_MAP, METER_MAP } from '../../constants/constants';\n\ninterface TrackAnalysisModalProps {\n  searchResults?: boolean;\n  track: any;\n  trackSelection: any;\n  addToSelection: Function;\n  removeFromSelection: Function;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  closeModal: Function;\n  refreshSelection?: Function;\n}\n\ninterface TrackAnalysisModalState {\n  fetchingAnalysis: boolean;\n  trackAnalysis: any;\n  altAnalysis: any;\n  fetchingAltAnalysis: boolean;\n  showAltAnalysis: boolean;\n}\n\nclass TrackAnalysisModal extends Component<\n  TrackAnalysisModalProps,\n  TrackAnalysisModalState\n> {\n  constructor(props: TrackAnalysisModalProps) {\n    super(props);\n    this.state = {\n      fetchingAnalysis: false,\n      trackAnalysis: null,\n      altAnalysis: null,\n      fetchingAltAnalysis: false,\n      showAltAnalysis: false\n    };\n  }\n\n  componentDidMount() {\n    disableBodyScroll(document.querySelector('#modal-content'));\n    this.getAnalysis();\n  }\n\n  numberToColorHsl(i: any) {\n    i = i * 100;\n    function hue2rgb(p: any, q: any, t: any) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n    function hslToRgb(h: any, s: any, l: any) {\n      var r, g, b;\n\n      if (s == 0) {\n        r = g = b = l; // achromatic\n      } else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n      }\n\n      return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    }\n    // as the function expects a value between 0 and 1, and red = 0° and green = 120°\n    // we convert the input to the appropriate hue value\n    var hue = (i * 1.2) / 360;\n    // we convert hsl to rgb (saturation 100%, lightness 50%)\n    var rgb = hslToRgb(hue, 1, 0.5);\n    // we format to css value and return\n    return rgb[0] + ',' + rgb[1] + ',' + rgb[2];\n  }\n\n  async getAcousticBrainzAnalysis(track: any) {\n    if (!track || !track.external_ids || !track.external_ids.isrc) return;\n\n    const cachedAnalysis: any = localStorage.getItem(track.id);\n    const parsedAnalysis: any = JSON.parse(cachedAnalysis);\n    if (parsedAnalysis && parsedAnalysis.altAnalysis) {\n      this.setState({\n        altAnalysis: parsedAnalysis.altAnalysis,\n        fetchingAltAnalysis: false\n      });\n      return;\n    }\n\n    this.setState({ fetchingAltAnalysis: true });\n\n    const acousticBrainz = await axios.post(`${API_ROOT}/musicbrainz`, track, {\n      headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n    });\n    if (!acousticBrainz || !acousticBrainz.data || !acousticBrainz.data.tonal) {\n      this.setState({ altAnalysis: null, fetchingAltAnalysis: false });\n      return;\n    }\n    let altData = acousticBrainz.data;\n    if (altData.metadata && altData.metadata.tags) {\n      const { title, album, artist } = altData.metadata.tags;\n      if (title && title.length) {\n        altData.title = title[0];\n      }\n      if (album && album.length) {\n        altData.album = album[0];\n      }\n      if (artist && artist.length) {\n        altData.artist = artist[0];\n      }\n    }\n\n    this.setState({ altAnalysis: altData, fetchingAltAnalysis: false });\n\n    const cached = {\n      analysis:\n        parsedAnalysis && parsedAnalysis.analysis\n          ? parsedAnalysis.analysis\n          : '',\n      altAnalysis: {\n        title: altData.title,\n        album: altData.album,\n        artist: altData.artist,\n        tonal: {\n          key_key: altData.tonal.key_key,\n          key_scale: altData.tonal.key_scale,\n          key_strength: altData.tonal.key_strength,\n          chords_key: altData.tonal.chords_key,\n          chords_scale: altData.tonal.chords_scale\n        },\n        rhythm: {\n          bpm: altData.rhythm ? altData.rhythm.bpm : null\n        }\n      }\n    };\n    localStorage.setItem(track.id, JSON.stringify(cached));\n  }\n\n  async getAnalysis() {\n    const { track } = this.props;\n\n    const cachedAnalysis: any = localStorage.getItem(track.id);\n    const parsedAnalysis: any = JSON.parse(cachedAnalysis);\n    if (parsedAnalysis && parsedAnalysis.analysis) {\n      this.setState({\n        trackAnalysis: parsedAnalysis.analysis,\n        fetchingAnalysis: false\n      });\n\n      this.getAcousticBrainzAnalysis(track);\n\n      return;\n    }\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Audio Details'\n    });\n    this.setState(\n      {\n        fetchingAnalysis: true,\n        fetchingAltAnalysis: false,\n        altAnalysis: null\n      },\n      () => {\n        disableBodyScroll(document.querySelector('#modal-content'));\n      }\n    );\n\n    const analyzed = await axios.post(\n      `${API_ROOT}/${\n        this.props.searchResults ? 'spotify-search' : 'spotify-request'\n      }`,\n      {\n        spotify_path: `https://api.spotify.com/v1/audio-analysis/${track.id}`,\n        spotify_payload: null,\n        crud_operation: 'get'\n      },\n      {\n        withCredentials: true,\n        headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n      }\n    );\n\n    this.props.finishPendingRequest(requestId);\n\n    if (!analyzed || !analyzed.data) return;\n\n    this.setState({\n      trackAnalysis: analyzed.data,\n      fetchingAnalysis: false\n    });\n\n    const analyzedTrack = analyzed.data.track;\n\n    const cached = {\n      analysis: {\n        sections: analyzed.data.sections ? analyzed.data.sections : null,\n        track: analyzedTrack\n          ? {\n              key: analyzedTrack.key,\n              key_confidence: analyzedTrack.key_confidence,\n              mode: analyzedTrack.mode,\n              mode_confidence: analyzedTrack.mode_confidence,\n              time_signature: analyzedTrack.time_signature,\n              time_signature_confidence:\n                analyzedTrack.time_signature_confidence,\n              tempo: analyzedTrack.tempo,\n              tempo_confidence: analyzedTrack.tempo_confidence\n            }\n          : null\n      }\n    };\n    localStorage.setItem(track.id, JSON.stringify(cached));\n\n    this.getAcousticBrainzAnalysis(track);\n  }\n\n  closeModal() {\n    enableBodyScroll(document.querySelector('#modal-content'));\n    this.props.closeModal();\n  }\n\n  updateSelection(newValues: any) {\n    const { track } = this.props;\n\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.map((cachedTrack: any) => {\n      if (cachedTrack.id !== track.id) return cachedTrack;\n      return {\n        ...cachedTrack,\n        ...newValues\n      };\n    });\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    if (!this.props.refreshSelection) return;\n    this.props.refreshSelection();\n  }\n\n  render() {\n    const {\n      track,\n      trackSelection,\n      addToSelection,\n      removeFromSelection\n    } = this.props;\n\n    const {\n      fetchingAnalysis,\n      fetchingAltAnalysis,\n      trackAnalysis,\n      altAnalysis,\n      showAltAnalysis\n    } = this.state;\n\n    let tonal = altAnalysis && altAnalysis.tonal ? altAnalysis.tonal : null;\n    let rhythm = altAnalysis && altAnalysis.rhythm ? altAnalysis.rhythm : null;\n\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const cachedTrack = JSON.parse(selectionString).find((cached: any) => {\n      if (cached.id === track.id) return cached;\n    });\n\n    return (\n      <div className=\"modal is-active\">\n        <div\n          className=\"modal-background\"\n          onClick={() => {\n            this.closeModal();\n          }}\n        ></div>\n\n        <div id=\"modal-content\" className=\"modal-content has-background-light\">\n          {!fetchingAnalysis && trackAnalysis ? (\n            <div\n              style={{\n                position: 'absolute',\n                top: '0',\n                left: '50%',\n                transform: 'translateX(-50%)',\n                width: '100%',\n                height: '20px',\n                background:\n                  'linear-gradient(to right,rgba(255,0,0,0.5)0%,rgba(255,255,0,0.5) 50%,rgba(0,255,0,0.5) 100%)',\n                display: 'inline-flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                padding: '2px'\n              }}\n            >\n              <p>0%</p>\n              <p>analysis confidence</p>\n              <p>100%</p>\n            </div>\n          ) : null}\n          {!fetchingAnalysis && trackAnalysis && trackAnalysis.track ? (\n            <div className=\"track-analysis-content\">\n              <div\n                style={{\n                  marginTop: '20px',\n                  display: 'inline-flex',\n                  justifyContent: 'space-between',\n                  width: '100%'\n                }}\n              >\n                <div>\n                  <h2 className=\"is-size-4\">\n                    {track.name ? track.name : null}\n                  </h2>\n                  <h2 className=\"is-size-7\">\n                    {track.album && track.album.name ? track.album.name : null}\n                  </h2>\n                  <h2 className=\"is-size-7\">\n                    {track.artist ? track.artist : null}\n                  </h2>\n                </div>\n\n                {!trackSelection.find(\n                  (selectionTrack: any) => selectionTrack.id === track.id\n                ) ? (\n                  <div\n                    className=\"has-text-link\"\n                    style={{\n                      display: 'inline-flex',\n                      justifyContent: 'space-between',\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => {\n                      addToSelection(track);\n                    }}\n                  >\n                    select\n                    <AddIcon className=\"selection-button-icon\" />\n                  </div>\n                ) : (\n                  <div\n                    className=\"has-text-link\"\n                    style={{\n                      display: 'inline-flex',\n                      justifyContent: 'space-between',\n                      cursor: 'pointer'\n                    }}\n                    onClick={() => {\n                      removeFromSelection(track);\n                    }}\n                  >\n                    deselect\n                    <RemoveIcon className=\"selection-button-icon\" />\n                  </div>\n                )}\n              </div>\n              {altAnalysis && tonal && !showAltAnalysis ? (\n                <div\n                  className=\"has-text-link\"\n                  onClick={() => {\n                    this.setState({ showAltAnalysis: true });\n                  }}\n                  style={{\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    cursor: 'pointer'\n                  }}\n                >\n                  <p>MusicBrainz</p>\n                  <ExpandMoreIcon className=\"icon is-medium\" />\n                </div>\n              ) : null}\n              {altAnalysis && tonal && showAltAnalysis ? (\n                <div>\n                  {' '}\n                  <hr></hr>\n                  <p style={{ textAlign: 'center' }}>\n                    MusicBrainz API, Possible Match\n                  </p>\n                  <div\n                    style={{\n                      display: 'flex',\n                      justifyContent: 'flex-end',\n                      alignItems: 'center'\n                    }}\n                  >\n                    <div\n                      onClick={() => {\n                        this.setState({ showAltAnalysis: false });\n                      }}\n                      style={{\n                        display: 'inline-flex',\n                        alignItems: 'center',\n                        cursor: 'pointer'\n                      }}\n                    >\n                      {' '}\n                      <p style={{ textAlign: 'center', margin: '5px' }}>\n                        see less\n                      </p>\n                      <ExpandLessIcon className=\"icon is-medium\" />\n                    </div>\n                  </div>\n                  <div\n                    className=\"\"\n                    style={{ display: 'flex', flexWrap: 'wrap' }}\n                  >\n                    <div style={{ flexBasis: 0, flexGrow: 1 }}>\n                      {altAnalysis.title ? (\n                        <div style={{ margin: '5px' }}>\n                          <p className=\"is-size-7\">Title</p>\n                          <p>{altAnalysis.title}</p>\n                        </div>\n                      ) : null}\n                      {altAnalysis.album ? (\n                        <div style={{ margin: '5px' }}>\n                          <p className=\"is-size-7\">Album </p>\n                          <p>{altAnalysis.album}</p>\n                        </div>\n                      ) : null}\n                      {altAnalysis.artist ? (\n                        <div style={{ margin: '5px' }}>\n                          <p className=\"is-size-7\">Artist</p>\n                          <p>{altAnalysis.artist}</p>\n                        </div>\n                      ) : null}\n                    </div>\n                    <div\n                      style={{\n                        flexBasis: 0,\n                        flexGrow: 1,\n                        display: 'flex',\n                        flexWrap: 'wrap',\n                        justifyContent: 'center'\n                      }}\n                    >\n                      {tonal.key_key && tonal.key_scale ? (\n                        <div\n                          style={{\n                            margin: '5px',\n                            border: '1px solid grey',\n                            borderRadius: '5px',\n                            padding: '5px',\n                            flexBasis: 0,\n                            flexGrow: 1\n                          }}\n                        >\n                          <p style={{ whiteSpace: 'nowrap' }}>\n                            {tonal.key_key} {tonal.key_scale}\n                          </p>\n                          {tonal.key_strength &&\n                          tonal.key_strength.toFixed(2) ? (\n                            <p\n                              className=\"is-size-7\"\n                              style={{ whiteSpace: 'nowrap' }}\n                            >\n                              Strength {tonal.key_strength.toFixed(2)}\n                            </p>\n                          ) : null}\n                        </div>\n                      ) : null}\n\n                      {tonal.chords_key && tonal.chords_scale ? (\n                        <div\n                          style={{\n                            margin: '5px',\n                            border: '1px solid grey',\n                            borderRadius: '5px',\n                            padding: '5px',\n                            flexBasis: 0,\n                            flexGrow: 1\n                          }}\n                        >\n                          <p\n                            className=\"is-size-7\"\n                            style={{ whiteSpace: 'nowrap' }}\n                          >\n                            Chords Key\n                          </p>\n                          <p style={{ whiteSpace: 'nowrap' }}>\n                            {tonal.chords_key} {tonal.chords_scale}\n                          </p>\n                        </div>\n                      ) : null}\n\n                      {rhythm && rhythm.bpm ? (\n                        <div\n                          style={{\n                            margin: '5px',\n                            border: '1px solid grey',\n                            borderRadius: '5px',\n                            padding: '5px',\n                            flexBasis: 0,\n                            flexGrow: 1\n                          }}\n                        >\n                          <p className=\"is-size-7\">BPM</p>\n                          <p>{rhythm.bpm.toFixed()}</p>\n                        </div>\n                      ) : null}\n                    </div>\n                  </div>{' '}\n                  {cachedTrack ? (\n                    <div style={{ marginTop: '10px' }}>\n                      <p style={{ textAlign: 'center' }}>\n                        Use MusicBrainz instead of Spotify?\n                      </p>\n                      <div\n                        style={{\n                          display: 'flex',\n                          justifyContent: 'center'\n                        }}\n                      >\n                        <label className=\"checkbox\" style={{ margin: '5px' }}>\n                          <input\n                            checked={cachedTrack.altKey ? true : false}\n                            onClick={() =>\n                              this.updateSelection({\n                                altKey: cachedTrack.altKey\n                                  ? null\n                                  : tonal.key_key\n                              })\n                            }\n                            type=\"checkbox\"\n                          />\n                          Key\n                        </label>\n\n                        <label className=\"checkbox\" style={{ margin: '5px' }}>\n                          <input\n                            checked={cachedTrack.altMode ? true : false}\n                            onClick={() =>\n                              this.updateSelection({\n                                altMode: cachedTrack.altMode\n                                  ? null\n                                  : tonal.key_scale\n                              })\n                            }\n                            type=\"checkbox\"\n                          />\n                          Mode\n                        </label>\n\n                        <label className=\"checkbox\" style={{ margin: '5px' }}>\n                          <input\n                            checked={cachedTrack.altTempo ? true : false}\n                            onClick={() =>\n                              this.updateSelection({\n                                altTempo: cachedTrack.altTempo\n                                  ? null\n                                  : rhythm.bpm.toFixed()\n                              })\n                            }\n                            type=\"checkbox\"\n                          />\n                          Tempo\n                        </label>\n                      </div>\n                    </div>\n                  ) : null}\n                  <hr></hr>\n                </div>\n              ) : null}\n              {fetchingAltAnalysis ? (\n                <p className=\"is-size-7\" style={{ textAlign: 'center' }}>\n                  ...fetching alternate analysis\n                </p>\n              ) : null}\n              {!fetchingAltAnalysis && (!altAnalysis || !altAnalysis.tonal) ? (\n                <p className=\"is-size-7\" style={{ textAlign: 'center' }}>\n                  no alternate analysis found\n                </p>\n              ) : null}\n              <p style={{ textAlign: 'center', marginTop: '10px' }}>\n                Spotify API{' '}\n              </p>\n              <div\n                style={{\n                  display: 'flex',\n                  width: '100%',\n                  justifyContent: 'center'\n                }}\n              >\n                <div\n                  className=\"confidence-bar\"\n                  style={{\n                    backgroundColor: `rgba(${this.numberToColorHsl(\n                      trackAnalysis.track.key_confidence\n                    )},0.5)`\n                  }}\n                >\n                  <p>{KEYS_MAP[trackAnalysis.track.key]}</p>\n                </div>\n\n                <div\n                  className=\"confidence-bar\"\n                  style={{\n                    backgroundColor: `rgba(${this.numberToColorHsl(\n                      trackAnalysis.track.mode_confidence\n                    )},0.5)`\n                  }}\n                >\n                  <p>{MODES_MAP[trackAnalysis.track.mode]}</p>\n                </div>\n                <div\n                  className=\"confidence-bar\"\n                  style={{\n                    overflow: 'visible !important',\n                    backgroundColor: `rgba(${this.numberToColorHsl(\n                      trackAnalysis.track.tempo_confidence\n                    )},0.5)`\n                  }}\n                >\n                  <p>{trackAnalysis.track.tempo.toFixed(2)}</p>\n                </div>\n                <div\n                  className=\"confidence-bar\"\n                  style={{\n                    backgroundColor: `rgba(${this.numberToColorHsl(\n                      trackAnalysis.track.time_signature_confidence\n                    )},0.5)`\n                  }}\n                >\n                  <p>{METER_MAP[trackAnalysis.track.time_signature]}</p>\n                </div>\n              </div>\n              <div className=\"table-wrapper card\">\n                <table className=\"table is-bordered is-striped\">\n                  <thead>\n                    <tr>\n                      <th>section</th>\n                      <th>start</th>\n                      <th>duration</th>\n                      <th>key</th>\n                      <th>mode</th>\n                      <th>tempo</th>\n                      <th>meter</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {trackAnalysis.sections.map((row: any, i: any) => (\n                      <tr key={uuidv4()}>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.confidence\n                            )},0.5`\n                          }}\n                        >\n                          {i + 1}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.confidence\n                            )},0.5`\n                          }}\n                        >\n                          {new Date(row.start * 1000)\n                            .toISOString()\n                            .substr(11, 8)}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.confidence\n                            )},0.5`\n                          }}\n                        >\n                          {new Date(row.duration * 1000)\n                            .toISOString()\n                            .substr(11, 8)}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.key_confidence\n                            )},0.5`\n                          }}\n                        >\n                          {KEYS_MAP[row.key]}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.mode_confidence\n                            )},0.5`\n                          }}\n                        >\n                          {MODES_MAP[row.mode]}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.tempo_confidence\n                            )},0.5`\n                          }}\n                        >\n                          {row.tempo.toFixed(2)}\n                        </td>\n                        <td\n                          style={{\n                            backgroundColor: `rgba(${this.numberToColorHsl(\n                              row.time_signature_confidence\n                            )},0.5`\n                          }}\n                        >\n                          {METER_MAP[row.time_signature]}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <button\n          className=\"modal-close is-large\"\n          aria-label=\"close\"\n          onClick={() => {\n            this.closeModal();\n          }}\n        ></button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: () => dispatch({ type: AUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrackAnalysisModal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  KEYS_MAP,\n  MODES_MAP,\n  METER_MAP\n} from '../../constants/constants';\nimport {\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\n\nimport { get_local_storage_status } from '../../checkStorage';\nimport TrackAnalysisModal from '../analysisModal/TrackAnalysisModal';\n\ninterface TableProps {\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  isAuthenticated: boolean;\n  searchResults?: boolean;\n}\n\ninterface TableState {\n  trackList: any;\n  spotifyPath: string | null;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetchingTracks: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n  modalActive: boolean;\n  trackToAnalyze: any;\n  next: boolean;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass Table extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection);\n\n    this.state = {\n      trackList: [],\n      spotifyPath: localStorage.getItem('spotify_path'),\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetchingTracks: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : [],\n      modalActive: false,\n      trackToAnalyze: {},\n      next: false\n    };\n    get_local_storage_status();\n    this.getTracks();\n  }\n\n  async getTracks() {\n    const requestId = uuidv4();\n    const featuresRequestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Tracks'\n      });\n\n      const tracksRequest = await axios.post(\n        `${API_ROOT}/${\n          this.props.searchResults ? 'spotify-search' : 'spotify-request'\n        }`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!tracksRequest.data) return;\n\n      let { next, items, tracks } = tracksRequest.data;\n\n      if (tracks && tracks.items) {\n        next = tracks.next;\n      }\n\n      let tracksArray = items ? items : tracks;\n      tracksArray = tracks && tracks.items ? tracks.items : tracksArray;\n\n      this.props.addPendingRequest({\n        id: featuresRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Audio Details'\n      });\n\n      const tracksFeaturesResponse = await axios.post(\n        `${API_ROOT}/${\n          this.props.searchResults ? 'spotify-search' : 'spotify-request'\n        }`,\n        {\n          spotify_path: `https://api.spotify.com/v1/audio-features?ids=${tracksArray.map(\n            (item: any) => {\n              if (item.track) {\n                item = item.track;\n              }\n              return item.id;\n            }\n          )}`,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(featuresRequestId);\n\n      let tracksFeatures: [] = [];\n\n      if (\n        tracksFeaturesResponse &&\n        tracksFeaturesResponse.data &&\n        tracksFeaturesResponse.data.audio_features\n      ) {\n        tracksFeatures = tracksFeaturesResponse.data.audio_features;\n      }\n\n      const updatedTrackList = [...this.state.trackList].concat(\n        tracksArray.map((item: any) => {\n          if (item.track) {\n            item = item.track;\n          }\n          const features: any | undefined = tracksFeatures.find(\n            (track: any) => track && item && track.id === item.id\n          );\n\n          return {\n            ...item,\n            selected: false,\n            tempo: features ? features.tempo : null,\n            key: features ? KEYS_MAP[features.key] : null,\n            mode: features ? MODES_MAP[features.mode] : null,\n            artist:\n              item.artists && item.artists.length ? item.artists[0].name : null,\n            albumName: item.album && item.album.name ? item.album.name : null\n          };\n        })\n      );\n\n      this.setState(\n        {\n          ...this.state,\n          trackList: updatedTrackList,\n          spotifyPath: next,\n          next: next && next.length ? true : false,\n          errorFetchingTracks: false\n        },\n        () => {\n          if (!next) return;\n          //this.getTracks();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.finishPendingRequest(featuresRequestId);\n      this.setState({\n        ...this.state,\n        errorFetchingTracks: true\n      });\n    }\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackList].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  addToSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n    const updatedSelection = [...oldSelection, track];\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  closeModal() {\n    this.setState({ modalActive: false });\n  }\n\n  refreshSelection() {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection = JSON.parse(selectionString);\n    this.setState({ trackSelection: parsedSelection });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackList;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const title = localStorage.getItem('spotify_item_title');\n\n    const { trackToAnalyze, trackSelection, next } = this.state;\n\n    return (\n      <div className=\"tracks-view-wrapper\">\n        {this.state.modalActive ? (\n          <TrackAnalysisModal\n            track={trackToAnalyze}\n            searchResults={this.props.searchResults}\n            addToSelection={(track: any) => this.addToSelection(track)}\n            removeFromSelection={(track: any) =>\n              this.removeFromSelection(track)\n            }\n            closeModal={() => this.closeModal()}\n            trackSelection={trackSelection}\n            refreshSelection={() => this.refreshSelection()}\n          />\n        ) : null}\n        {!this.state.errorFetchingTracks ? (\n          <div className=\"tracks-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">{title}</p>\n                <p>\n                  This won't modify {title} or your library, selecting and\n                  deselecting tracks only modifies your selection of tracks in\n                  this app. Use the table below to select and deselect tracks.{' '}\n                  <NavLink to=\"/selection\">Export</NavLink> to modify and export\n                  your full selection of tracks, or continue to{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option key={uuidv4()} value={key}>\n                                {key}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped\">\n                  <thead>\n                    <tr>\n                      <th>select</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n\n                      {SortButton(\n                        'album',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('albumName');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr key={uuidv4()}>\n                        <td align=\"center\">\n                          {!this.state.trackSelection.find(\n                            (track: any) => track && row && track.id === row.id\n                          ) ? (\n                            <AddIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.addToSelection(row);\n                              }}\n                            />\n                          ) : (\n                            <RemoveIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.removeFromSelection(row);\n                              }}\n                            />\n                          )}\n                        </td>\n\n                        <td>\n                          <a\n                            onClick={() => {\n                              this.setState({\n                                modalActive: true,\n                                trackToAnalyze: row\n                              });\n                            }}\n                          >\n                            {row.name}\n                          </a>\n                        </td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo).toFixed(2)}</td>\n                        <td>{row.artist}</td>\n                        <td>{row.albumName}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {next ? (\n                  <button onClick={() => this.getTracks()} className=\"button\">\n                    load more\n                  </button>\n                ) : (\n                  'end of results'\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { withRouter } from 'react-router';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { compose } from 'redux';\n\nimport {\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\nimport TracksTable from '../tracks/TracksTable';\nimport { get_local_storage_status } from '../../checkStorage';\n\nenum SearchBy {\n  ARTIST = 'ARTIST',\n  TRACK = 'TRACK'\n}\n\ninterface SearchProps {\n  route: any;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  login?: Function;\n  isAuthenticated: boolean;\n}\n\ninterface SearchState {\n  filtered: boolean;\n  sort: any;\n  errorFetchingItems: boolean;\n  disableTable: boolean;\n  query: string;\n  next: boolean;\n  itemList: any;\n  searchBy: SearchBy;\n  artists: any;\n  artistsPath: any;\n  nextArtists: any;\n  albumsPath: any;\n  nextAlbums: any;\n  albums: any;\n  selectedAlbum: any;\n  showAlbumTracksTable: boolean;\n  showTracksTable: boolean;\n  showArtistAlbums: boolean;\n}\n\nclass Search extends Component<SearchProps, SearchState> {\n  constructor(props: SearchProps) {\n    super(props);\n\n    this.state = {\n      itemList: [],\n      filtered: false,\n      sort: { column: null, direction: null },\n      errorFetchingItems: false,\n      disableTable: false,\n      query: '',\n      next: false,\n      searchBy: SearchBy.TRACK,\n      artists: [],\n      artistsPath: '',\n      nextArtists: '',\n      albums: [],\n      albumsPath: '',\n      nextAlbums: '',\n      selectedAlbum: null,\n      showAlbumTracksTable: false,\n      showTracksTable: false,\n      showArtistAlbums: true\n    };\n\n    get_local_storage_status();\n  }\n\n  search(e: any) {\n    e.preventDefault();\n\n    const { searchBy, query } = this.state;\n    if (searchBy === SearchBy.TRACK) {\n      localStorage.setItem(\n        'spotify_path',\n        `https://api.spotify.com/v1/search?q=${query}&type=${searchBy.toLowerCase()}&market=US`\n      );\n\n      localStorage.setItem('spotify_item_title', query);\n\n      this.setState(\n        { showTracksTable: false, showAlbumTracksTable: false },\n        () => {\n          this.setState({ showTracksTable: true });\n        }\n      );\n    }\n\n    if (searchBy === SearchBy.ARTIST) {\n      this.setState({ artists: [], nextArtists: '', albums: [] }, () => {\n        this.getArtists();\n      });\n    }\n\n    this.setState({ filtered: true });\n  }\n\n  async getArtists() {\n    const { query, nextArtists } = this.state;\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Artists'\n    });\n    try {\n      const artists = await axios.post(\n        `${API_ROOT}/spotify-search`,\n        {\n          spotify_path:\n            nextArtists && nextArtists.length\n              ? nextArtists\n              : `https://api.spotify.com/v1/search?q=${query}&type=artist&market=US`,\n          is_tracks: false\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (!artists || !artists.data || !artists.data.artists) return;\n\n      this.setState({\n        artists: [...this.state.artists, ...artists.data.artists.items],\n        nextArtists: artists.data.artists.next,\n        showArtistAlbums: true\n      });\n      this.props.finishPendingRequest(requestId);\n    } catch {\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getAlbums(id: string) {\n    const { nextAlbums } = this.state;\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Albums'\n    });\n    try {\n      const albums = await axios.post(\n        `${API_ROOT}/spotify-search`,\n        {\n          spotify_path:\n            nextAlbums && nextAlbums.length\n              ? nextAlbums\n              : `https://api.spotify.com/v1/artists/${id}/albums?market=US`,\n          is_tracks: false\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n      this.props.finishPendingRequest(requestId);\n      if (!albums || !albums.data) return;\n      this.setState({\n        albums: [...this.state.albums, ...albums.data.items],\n        nextAlbums: albums.data.next\n      });\n    } catch {\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  render() {\n    const {\n      searchBy,\n      artists,\n      nextArtists,\n      albums,\n      nextAlbums,\n      showAlbumTracksTable,\n      showTracksTable,\n      showArtistAlbums\n    } = this.state;\n\n    const { isAuthenticated } = this.props;\n    return (\n      <div className=\"search-view-wrapper\">\n        {!this.state.errorFetchingItems ? (\n          <div className=\"search-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered playlists-and-albums-header\">\n                <p className=\"title\">Spotify Audio Analysis</p>\n\n                {!isAuthenticated ? (\n                  <span>\n                    If you wish to export playlists,{' '}\n                    <a\n                      className=\"\"\n                      href=\"\"\n                      onClick={e => {\n                        e.preventDefault();\n                        if (this.props.login) {\n                          this.props.login();\n                        }\n                      }}\n                    >\n                      Login\n                    </a>{' '}\n                    with Spotify\n                  </span>\n                ) : null}\n              </div>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                alignContent: 'center',\n                flexDirection: 'column',\n                flexWrap: 'wrap'\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  margin: '5px'\n                }}\n              >\n                <button\n                  style={{ margin: '2px' }}\n                  className={`button is-outlined is-rounded ${\n                    searchBy === SearchBy.ARTIST ? 'is-active' : ''\n                  }`}\n                  onClick={() => {\n                    this.setState({\n                      searchBy: SearchBy.ARTIST,\n                      showAlbumTracksTable: false,\n                      showTracksTable: false\n                    });\n                  }}\n                >\n                  artists\n                </button>\n                <button\n                  style={{ margin: '2px' }}\n                  className={`button is-outlined is-rounded ${\n                    searchBy === SearchBy.TRACK ? 'is-active' : ''\n                  }`}\n                  onClick={() => {\n                    this.setState({\n                      searchBy: SearchBy.TRACK,\n                      showAlbumTracksTable: false,\n                      showTracksTable: false\n                    });\n                  }}\n                >\n                  tracks\n                </button>\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n              >\n                <form style={{ display: 'inline-flex' }}>\n                  <input\n                    onChange={e => {\n                      if (e.target.value && e.target.value.length) {\n                        this.setState({ query: e.target.value });\n                        return;\n                      }\n                      this.setState({ query: '', filtered: false });\n                    }}\n                    className=\"input\"\n                    placeholder={`search for ${searchBy.toLocaleLowerCase()}`}\n                  ></input>\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    onClick={e => {\n                      this.search(e);\n                    }}\n                  >\n                    <SearchIcon />\n                  </button>\n                </form>\n              </div>\n            </div>\n            {searchBy === SearchBy.ARTIST ? (\n              <div style={{ marginTop: '20px' }}>\n                {showArtistAlbums ? (\n                  <div className=\"\">\n                    {searchBy === SearchBy.ARTIST &&\n                    artists &&\n                    artists.length ? (\n                      <div\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center'\n                        }}\n                      >\n                        <p style={{ margin: 'auto' }}>Select an Artist</p>\n                        <div\n                          style={{\n                            width: '100%',\n                            display: 'inline-flex',\n                            overflowX: 'scroll',\n                            justifyContent: 'flex-start',\n                            margin: '10px'\n                          }}\n                        >\n                          {artists.map((artist: any) => (\n                            <button\n                              key={uuidv4()}\n                              className=\"button\"\n                              style={{\n                                flexShrink: 0,\n                                color: 'white',\n                                width: 'auto',\n                                height: '100px',\n                                backgroundImage: `url(\"${\n                                  artist.images[2] ? artist.images[2].url : ''\n                                }\")`,\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                overflow: 'hidden'\n                              }}\n                              onClick={e => {\n                                e.preventDefault();\n                                this.setState({ albums: [] }, () =>\n                                  this.getAlbums(artist.id)\n                                );\n                              }}\n                            >\n                              <p\n                                style={{\n                                  color: 'white',\n                                  zIndex: 5\n                                }}\n                              >\n                                {artist.name}\n                              </p>\n                              <div\n                                style={{\n                                  zIndex: 1,\n                                  position: 'absolute',\n                                  top: '50%',\n                                  left: '50%',\n                                  transform: 'translate(-50%,-50%)',\n                                  width: '100%',\n                                  height: '100%',\n                                  background: 'rgba(0,0,0,.6)'\n                                }}\n                              ></div>\n                            </button>\n                          ))}\n                          {nextArtists ? (\n                            <button\n                              className=\"button\"\n                              onClick={e => {\n                                e.preventDefault();\n                                this.getArtists();\n                              }}\n                              style={{\n                                width: 'auto',\n                                height: '100px',\n                                flexShrink: 0\n                              }}\n                            >\n                              Load More\n                            </button>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n\n                    {searchBy === SearchBy.ARTIST && albums && albums.length ? (\n                      <div\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center'\n                        }}\n                      >\n                        <p style={{ margin: 'auto' }}>Select an Album</p>\n                        <div\n                          style={{\n                            width: '100%',\n                            display: 'inline-flex',\n                            overflowX: 'scroll',\n                            justifyContent: 'flex-start',\n                            margin: '10px'\n                          }}\n                        >\n                          {albums.map((album: any) => (\n                            <button\n                              key={uuidv4()}\n                              className=\"button\"\n                              style={{\n                                flexShrink: 0,\n                                color: 'white',\n                                width: 'auto',\n                                height: '100px',\n                                backgroundImage: `url(\"${\n                                  album.images &&\n                                  album.images[2] &&\n                                  album.images[2].url\n                                    ? album.images[2].url\n                                    : ''\n                                }\")`,\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                overflow: 'hidden'\n                              }}\n                              onClick={e => {\n                                e.preventDefault();\n\n                                this.setState(\n                                  {\n                                    showTracksTable: false,\n                                    showAlbumTracksTable: false,\n                                    showArtistAlbums: false\n                                  },\n                                  () => {\n                                    localStorage.setItem(\n                                      'spotify_path',\n                                      `https://api.spotify.com/v1/albums/${album.id}/tracks`\n                                    );\n                                    localStorage.setItem(\n                                      'spotify_item_title',\n                                      album.name\n                                    );\n                                    this.setState(\n                                      {\n                                        showAlbumTracksTable: true,\n                                        selectedAlbum: album\n                                      },\n                                      () => {}\n                                    );\n                                  }\n                                );\n                              }}\n                            >\n                              <p\n                                style={{\n                                  color: 'white',\n                                  zIndex: 5\n                                }}\n                              >\n                                {album.name}\n                              </p>\n                              <div\n                                style={{\n                                  zIndex: 1,\n                                  position: 'absolute',\n                                  top: '50%',\n                                  left: '50%',\n                                  transform: 'translate(-50%,-50%)',\n                                  width: '100%',\n                                  height: '100%',\n                                  background: 'rgba(0,0,0,.6)'\n                                }}\n                              ></div>\n                            </button>\n                          ))}\n                          {nextAlbums ? (\n                            <button\n                              className=\"button\"\n                              onClick={e => {\n                                e.preventDefault();\n                                this.getAlbums('');\n                              }}\n                              style={{\n                                width: 'auto',\n                                height: '100px',\n                                flexShrink: 0\n                              }}\n                            >\n                              Load More\n                            </button>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n                ) : (\n                  <div\n                    className=\"card\"\n                    style={{ display: 'flex', justifyContent: 'center' }}\n                  >\n                    <button\n                      className=\"button\"\n                      onClick={() => {\n                        this.setState({ showArtistAlbums: true });\n                      }}\n                    >\n                      Expand Search Results\n                    </button>\n                  </div>\n                )}\n              </div>\n            ) : null}\n            {showAlbumTracksTable ? <TracksTable searchResults={true} /> : null}\n            {showTracksTable ? <TracksTable searchResults={true} /> : null}\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default compose<any>(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Search);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalState } from '../../reducers/index.reducer';\n\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\n\nimport Search from '../search/Search';\nimport { get_local_storage_status } from '../../checkStorage';\n\ninterface HomeProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  login: Function;\n  displayName: string;\n}\n\ninterface HomeState {}\n\nclass Home extends Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = {};\n    get_local_storage_status();\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const displayName = localStorage.getItem('logged_in_tonalify')\n      ? localStorage.getItem('logged_in_tonalify')\n      : this.props.displayName;\n    return (\n      <div className=\"home-view-wrapper\">\n        {isAuthenticated ? (\n          <div className=\"section\">\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <div\n                className=\"has-text-centered\"\n                style={{\n                  maxWidth: '400px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  flexDirection: 'column'\n                }}\n              >\n                <p className=\"title\">Welcome, {displayName}</p>{' '}\n                <p>\n                  Browse your library and make track selections based on key or\n                  tempo, then export your selection as a Spotify playlist. This\n                  app won't modify your playlists, it will only add new\n                  playlists that you create\n                </p>\n              </div>\n            </div>\n            <div className=\"section\">\n              <div className=\"container is-widescreen has-text-centered\">\n                <div className=\"links\">\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/search\"\n                  >\n                    <p>Search</p>\n                  </NavLink>\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-albums\"\n                  >\n                    <p>Your Albums</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-playlists\"\n                  >\n                    <p>Your Playlists</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/selection\"\n                  >\n                    <p>Export Selection</p>\n                  </NavLink>\n                </div>\n                <hr />\n                <div className=\"buy-me-coffee-wrapper\">\n                  <a\n                    className=\"bmc-button has-background-link\"\n                    href=\"https://www.buymeacoffee.com/tonalify\"\n                  >\n                    <img\n                      src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\n                      alt=\"Buy me a coffee\"\n                    />\n                    <span\n                      style={{ marginLeft: '5px', fontSize: '19px !important' }}\n                    >\n                      Buy me a coffee\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {!isAuthenticated ? <Search login={() => this.props.login()} /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: (userId: string) =>\n      dispatch({ type: AUTHENTICATE, payload: userId }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\nimport { get_local_storage_status } from '../../checkStorage';\n\ninterface AlbumsAndPlaylistsProps {\n  route: any;\n  history: any;\n  type: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\ninterface AlbumsAndPlaylistsState {\n  collection: any[];\n  showTracks: boolean;\n  tracksPath: string;\n  showTable: boolean;\n  selectedPlaylistPath: string;\n  selectedPlaylistTitle: string;\n  errorFetching: boolean;\n  query: string;\n  spotifyPath: string;\n  fetching: boolean;\n  collectionType: string;\n}\n\nclass AlbumsAndPlaylists extends Component<\n  AlbumsAndPlaylistsProps,\n  AlbumsAndPlaylistsState\n> {\n  constructor(props: AlbumsAndPlaylistsProps) {\n    super(props);\n    this.state = {\n      collection: [],\n      showTracks: false,\n      tracksPath: '',\n      showTable: false,\n      selectedPlaylistPath: '',\n      selectedPlaylistTitle: '',\n      errorFetching: false,\n      query: '',\n      spotifyPath:\n        this.props.type === 'PLAYLISTS'\n          ? 'https://api.spotify.com/v1/me/playlists?limit=50'\n          : 'https://api.spotify.com/v1/me/albums?limit=50',\n      fetching: false,\n      collectionType: this.props.type === 'PLAYLISTS' ? 'Playlist' : 'Album'\n    };\n    get_local_storage_status();\n  }\n\n  componentDidMount() {\n    this.getPlaylists();\n  }\n\n  async getPlaylists() {\n    const requestId = uuidv4();\n    try {\n      this.setState({ fetching: true });\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message:\n          this.props.type === 'PLAYLISTS'\n            ? 'Fetching Playlists'\n            : 'Fetching Albums'\n      });\n      const collection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!collection || !collection.data || !collection.data.items) return;\n\n      const { next } = collection.data;\n\n      this.setState(\n        {\n          collection: [...this.state.collection].concat(\n            this.props.type === 'PLAYLISTS'\n              ? collection.data.items\n              : collection.data.items.map((item: any) => item.album)\n          ),\n          spotifyPath: next,\n          fetching: false\n        },\n        () => {\n          if (!next) return;\n          this.getPlaylists();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.setState({ errorFetching: true, fetching: false });\n    }\n  }\n\n  open(id: string, title: string) {\n    localStorage.setItem(\n      'spotify_path',\n      `https://api.spotify.com/v1/${\n        this.props.type === 'PLAYLISTS' ? 'playlists' : 'albums'\n      }/${id}/tracks`\n    );\n    localStorage.setItem('spotify_item_title', title);\n    this.props.history.push('/tracks');\n  }\n\n  search(query: any) {\n    this.setState({ query });\n  }\n\n  filterCollection() {\n    return [...this.state.collection].filter((item: any) => {\n      const { description, name } = item;\n      const query = this.state.query.toLocaleLowerCase();\n      if (\n        (description &&\n          description\n            .toString()\n            .toLowerCase()\n            .includes(query)) ||\n        (name &&\n          name\n            .toString()\n            .toLowerCase()\n            .includes(query))\n      )\n        return item;\n    });\n  }\n\n  render() {\n    let items =\n      this.state.query && this.state.query.length\n        ? this.filterCollection()\n        : this.state.collection;\n    return (\n      <div className=\"playlists-view-wrapper\">\n        <div className=\"section\">\n          <div className=\"container has-text-centered playlists-and-albums-header\">\n            <p className=\"title\">Your {this.state.collectionType}s</p>\n\n            <p>Choose {this.state.collectionType} to Select Tracks From</p>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"container is-widescreen\">\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"search-input\">\n                Search Your {this.state.collectionType}s\n              </label>\n              <div className=\"search-playlists-input-wrapper\">\n                <input\n                  id=\"search-input\"\n                  className=\"search-input input\"\n                  onChange={e => this.search(e.target.value)}\n                  placeholder=\"Search\"\n                  value={this.state.query}\n                ></input>\n                {this.state.query.length ? (\n                  <button\n                    onClick={() => {\n                      this.setState({ query: '' });\n                    }}\n                  >\n                    <CloseIcon className=\"has-text-link\" />\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            {!this.state.errorFetching ? (\n              <div className=\"playlists-wrapper\">\n                {items.length ? (\n                  items.map((item: any) => (\n                    <div\n                      style={{\n                        backgroundImage:\n                          item.images && item.images[0] && item.images[0].url\n                            ? `url(${item.images[0].url})`\n                            : 'none',\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center'\n                      }}\n                      key={uuidv4()}\n                      className=\"playlist-wrapper has-background-grey-lighter\"\n                      onClick={() => this.open(item.id, item.name)}\n                    >\n                      <p\n                        style={{\n                          color: 'white',\n                          position: 'absolute',\n                          top: '50%',\n                          left: '50%',\n                          transform: 'translate(-50%,-50%)',\n                          zIndex: 5,\n                          padding: '10px',\n                          background: 'rgba(0,0,0,.8)',\n                          borderRadius: '5px'\n                        }}\n                      >\n                        {item.name}\n                      </p>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          position: 'absolute',\n                          top: '50%',\n                          left: '50%',\n                          transform: 'translate(-50%,-50%)',\n                          background: 'rgba(0,0,0,.4)',\n                          zIndex: 2\n                        }}\n                      ></div>\n                    </div>\n                  ))\n                ) : !this.state.fetching ? (\n                  <p>no results</p>\n                ) : null}\n              </div>\n            ) : (\n              <p className=\"notification is-danger\">\n                Error Loading {this.state.collectionType}s, Refresh the Page\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: () => dispatch({ type: AUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  return {};\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(AlbumsAndPlaylists);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport ReactGA from 'react-ga';\nimport { GlobalState } from '../../reducers/index.reducer';\n\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  AUTHENTICATE,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\n\nimport { login } from './login';\n\ninterface AuthenticateProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  requireAuth: boolean;\n  addFlashMessage: Function;\n}\n\ninterface AuthenticateState {\n  displayName: string;\n}\n\nexport default function(\n  ComposedComponent: any,\n  extraProps?: any,\n  authRequired?: boolean\n): any {\n  class Authenticate extends React.Component<\n    AuthenticateProps,\n    AuthenticateState\n  > {\n    constructor(props: AuthenticateProps) {\n      super(props);\n      this.state = {\n        displayName: ''\n      };\n    }\n    componentDidMount() {\n      const code = new URLSearchParams(window.location.search).get('code');\n      if (code) {\n        this.authenticateUser();\n        return;\n      }\n      this.checkAndRedirect();\n    }\n\n    componentDidUpdate() {\n      this.checkAndRedirect();\n    }\n\n    login() {\n      const {\n        addPendingRequest,\n        finishPendingRequest,\n        addFlashMessage\n      } = this.props;\n      login(addPendingRequest, finishPendingRequest, addFlashMessage);\n    }\n\n    async authenticateUser() {\n      const requestId = uuidv4();\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          type: AJAX_REQUEST_TYPES.PROFILE,\n          message: 'Authenticating'\n        });\n        await axios.get(\n          `${API_ROOT}/authorize?code=${new URLSearchParams(\n            window.location.search\n          ).get('code')}`,\n          {\n            withCredentials: true\n          }\n        );\n\n        this.checkAndRedirect();\n\n        this.props.finishPendingRequest(requestId);\n      } catch (error) {\n        this.props.addFlashMessage({\n          type: FLASH_MESSAGE_TYPES.ERROR,\n          text: 'Error Authenticating',\n          id: uuidv4()\n        });\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    async checkAndRedirect() {\n      const { isAuthenticated } = this.props;\n      if (isAuthenticated) return;\n      const requestId = uuidv4();\n\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          message: 'Fetching Profile',\n          type: AJAX_REQUEST_TYPES.PROFILE\n        });\n\n        const profile = await axios.post(\n          `${API_ROOT}/spotify-request`,\n          {\n            spotify_path: 'https://api.spotify.com/v1/me',\n            spotify_payload: null,\n            crud_operation: 'get'\n          },\n          {\n            withCredentials: true,\n            headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n          }\n        );\n\n        this.props.finishPendingRequest(requestId);\n\n        if (profile.data && profile.data.id) {\n          this.props.authenticate(profile.data.id);\n\n          localStorage.setItem('logged_in_tonalify', profile.data.display_name);\n          this.setState({ displayName: profile.data.display_name });\n          return;\n        }\n\n        if (authRequired) {\n          this.props.history.push('/home');\n        }\n      } catch (error) {\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    render() {\n      return this.props.requireAuth ? (\n        this.props.isAuthenticated ? (\n          <ComposedComponent\n            {...(this.props, extraProps)}\n            displayName={this.state.displayName}\n            login={() => this.login()}\n          />\n        ) : null\n      ) : (\n        <ComposedComponent\n          {...(this.props, extraProps)}\n          login={() => this.login()}\n        />\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch: any) => {\n    return {\n      authenticate: (userId: string) =>\n        dispatch({ type: AUTHENTICATE, payload: userId }),\n      addPendingRequest: (request: any) =>\n        dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n      finishPendingRequest: (id: any) =>\n        dispatch({ type: FINISH_PENDING_REQUEST, payload: id }),\n      addFlashMessage: (message: any) =>\n        dispatch({ type: ADD_FLASH_MESSAGE, payload: message })\n    };\n  };\n\n  const mapStateToProps = (state: GlobalState) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(Authenticate);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { NavLink } from 'react-router-dom';\nimport { disableBodyScroll, enableBodyScroll } from '../../htmlScrollLock';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\n\nimport { get_local_storage_status } from '../../checkStorage';\nimport TrackAnalysisModal from '../analysisModal/TrackAnalysisModal';\n\ninterface TableProps {\n  userId: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  isAuthenticated: boolean;\n  login: Function;\n}\n\ninterface TableState {\n  trackList: any;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetching: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n  modalActive: boolean;\n  trackToAnalyze: any;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass SelectionTable extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection).map(\n      (track: any) => ({\n        ...track,\n        albumName: track.album && track.album.name ? track.album.name : ''\n      })\n    );\n\n    this.state = {\n      trackList: [],\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetching: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : [],\n      modalActive: false,\n      trackToAnalyze: {}\n    };\n\n    get_local_storage_status();\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackSelection].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  addToSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n    const updatedSelection = [...oldSelection, track];\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  refreshSelection() {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection = JSON.parse(selectionString);\n    this.setState({ trackSelection: parsedSelection });\n  }\n\n  async exportSelection(e: any) {\n    e.preventDefault();\n    const requestId = uuidv4();\n    const updatePlaylistRequestId = uuidv4();\n    const newPlaylistName = e.target.playlist_name.value;\n    const newPlaylistDescription = e.target.playlist_description.value;\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Creating New Playlist'\n      });\n      const exportedSelection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/users/${this.props.userId}/playlists`,\n          spotify_payload: {\n            name: newPlaylistName,\n            description: newPlaylistDescription\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (\n        !exportedSelection ||\n        !exportedSelection.data ||\n        !exportedSelection.data.id\n      ) {\n        return;\n      }\n\n      this.props.addPendingRequest({\n        id: updatePlaylistRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Adding Tracks To Playlist'\n      });\n\n      const tracks = this.state.filtered\n        ? this.getFilteredTracks()\n        : this.state.trackSelection;\n\n      const updatedPlaylist = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/playlists/${exportedSelection.data.id}/tracks`,\n          spotify_payload: {\n            uris: tracks.map((track: any) => track.uri)\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (\n        !updatedPlaylist ||\n        !updatedPlaylist.data ||\n        !updatedPlaylist.data.snapshot_id\n      )\n        return;\n\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.SUCCESS,\n        text: `Created ${newPlaylistName}`,\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Creating Playlist',\n        id: uuidv4()\n      });\n    }\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  closeModal() {\n    this.setState({ modalActive: false });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackSelection;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const { trackToAnalyze, trackSelection } = this.state;\n\n    const { isAuthenticated } = this.props;\n\n    return (\n      <div className=\"user-selection-wrapper\">\n        {this.state.modalActive ? (\n          <TrackAnalysisModal\n            track={trackToAnalyze}\n            searchResults={isAuthenticated ? false : true}\n            addToSelection={(track: any) => this.addToSelection(track)}\n            removeFromSelection={(track: any) =>\n              this.removeFromSelection(track)\n            }\n            refreshSelection={() => this.refreshSelection()}\n            closeModal={() => this.closeModal()}\n            trackSelection={trackSelection}\n          />\n        ) : null}\n        {!this.state.errorFetching ? (\n          <>\n            {isAuthenticated ? (\n              <>\n                <div className=\"section\">\n                  <div className=\"container has-text-centered is-widescreen\">\n                    <p className=\"title\">Export To Spotify</p>\n                    <p>\n                      Modify and export your current selection or return to your{' '}\n                      <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                      <NavLink to=\"/your-albums\">Albums</NavLink> to continue\n                      adding tracks\n                    </p>\n                  </div>\n                </div>\n                <div className=\"section\">\n                  <div className=\"columns is-centered\">\n                    <div className=\"form-wrapper box column is-half\">\n                      <div className=\"has-text-centered\">\n                        <p>Export Playlist</p>\n                      </div>\n\n                      <form\n                        id=\"playlist-form\"\n                        className=\"create-playlist-form\"\n                        onSubmit={e => this.exportSelection(e)}\n                      >\n                        <div className=\"playlist-inputs\">\n                          <div className=\"field\">\n                            <label htmlFor=\"name\" className=\"label\">\n                              Name\n                            </label>\n                            <input\n                              id=\"name\"\n                              className=\"input\"\n                              name=\"playlist_name\"\n                              placeholder=\"Playlist Name\"\n                            ></input>\n                          </div>\n                          <div className=\"field\">\n                            <label htmlFor=\"description\" className=\"label\">\n                              Description\n                            </label>\n                            <textarea\n                              id=\"description\"\n                              rows={2}\n                              className=\"playlist-description textarea\"\n                              name=\"playlist_description\"\n                              placeholder=\"Playlist Description\"\n                            ></textarea>\n                          </div>\n                        </div>\n                        <div className=\"export-button-wrapper\">\n                          <button className=\"export-button button is-primary\">\n                            Create\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"section\">\n                <div className=\"container has-text-centered is-widescreen\">\n                  <p className=\"title\">Export To Spotify</p>\n                  <p>\n                    <a href=\"\" onClick={() => this.props.login()}>\n                      Login\n                    </a>{' '}\n                    to Export your selection to a spotify playlist. The\n                    selection will still be here after logging in\n                  </p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option key={uuidv4()} value={key}>\n                                {key}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper field\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}{' '}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped \">\n                  <thead>\n                    <tr>\n                      <th>deselect</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                      {SortButton(\n                        'album',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('albumName');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr key={uuidv4()}>\n                        <td align=\"center\">\n                          <RemoveIcon\n                            className={`selection-button-icon has-text-link ${\n                              this.state.disableTable ? 'disabled-icon' : ''\n                            }`}\n                            onClick={() => {\n                              this.removeFromSelection(row);\n                            }}\n                          />\n                        </td>\n                        <td>\n                          <a\n                            onClick={() => {\n                              this.setState({\n                                trackToAnalyze: row,\n                                modalActive: true\n                              });\n                            }}\n                          >\n                            {row.name}\n                          </a>\n                        </td>\n                        <td>{row.altKey ? row.altKey : row.key}</td>\n                        <td>{row.altMode ? row.altMode : row.mode}</td>\n                        <td>\n                          {row.altTempo\n                            ? row.altTempo\n                            : Number(row.tempo).toFixed(2)}\n                        </td>\n                        <td>{row.artist}</td>\n                        <td>{row.albumName}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Track Selection, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated, userId: state.auth.id };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\n\ninterface AjaxSpinnerProps {\n  requests: any[];\n}\ninterface AjaxSpinnerState {}\n\nclass AjaxSpinner extends Component<AjaxSpinnerProps, AjaxSpinnerState> {\n  constructor(props: AjaxSpinnerProps) {\n    super(props);\n    this.state = {};\n  }\n\n  // componentDidUpdate(previousProps: any) {\n  //   const previousLastRequest =\n  //     previousProps.requests[previousProps.requests.length - 1];\n  //   const lastRequest = this.props.requests[this.props.requests.length - 1];\n  //   if (\n  //     lastRequest &&\n  //     previousLastRequest &&\n  //     lastRequest.id !== previousLastRequest.id\n  //   ) {\n  //     this.renderSpinner();\n  //     return;\n  //   }\n\n  //   if (!previousLastRequest && lastRequest) {\n  //     this.renderSpinner();\n  //   }\n  // }\n\n  // renderSpinner() {\n  //   const request = this.props.requests[this.props.requests.length - 1];\n  //   if (!request) return;\n  //   setTimeout(() => {\n  //     this.props.finishRequest(request.id);\n  //   }, 2000);\n  // }\n\n  render() {\n    const { requests } = this.props;\n    const request = requests[requests.length - 1];\n    return request ? (\n      <div className=\"spinner-wrapper\">\n        <div className=\"spinner-content\">\n          <div>\n            <div className=\"spinner\"></div>\n          </div>\n          {request ? <p>{request.message}</p> : null}\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {};\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    requests: state.ajax.requests\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AjaxSpinner);\n","import './App.css';\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReactGA from 'react-ga';\nimport 'bulma/css/bulma.css';\n\nimport reducer from './reducers/index.reducer';\n\nimport FlashMessages from './FlashMessages';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './components/home/Home';\nimport Search from './components/search/Search';\nimport AlbumsAndPlaylists from './components/albumsAndPlaylists/AlbumsAndPlaylists';\nimport auth from './components/auth/Auth';\nimport TracksTable from './components/tracks/TracksTable';\nimport SelectionTable from './components/userSelection/UserSelection';\nimport AjaxSpinner from './AjaxSpinner';\nimport { get_local_storage_status } from './checkStorage';\nimport { createBrowserHistory } from 'history';\nimport { TRACKING_ID } from './googleAnalyticsCreds';\n\nget_local_storage_status();\n\nconst store = createStore(\n  combineReducers(reducer),\n  composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n    // other store enhancers if any\n  )\n);\n\nReactGA.initialize(TRACKING_ID);\nconst history = createBrowserHistory();\n\n// Initialize google analytics page view tracking\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname }); // Update the user's current page\n  ReactGA.pageview(location.pathname); // Record a pageview for the given page\n});\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <div>\n          <AjaxSpinner />\n          <FlashMessages />\n          <Navbar />\n          <Switch>\n            <Route path=\"/search\" component={auth(Search)}></Route>\n            <Route\n              path=\"/your-playlists\"\n              component={auth(\n                AlbumsAndPlaylists,\n                {\n                  type: 'PLAYLISTS'\n                },\n                true\n              )}\n            ></Route>\n            <Route\n              path=\"/your-albums\"\n              component={auth(\n                AlbumsAndPlaylists,\n                {\n                  type: 'ALBUMS'\n                },\n                true\n              )}\n            ></Route>\n            <Route path=\"/tracks\" component={auth(TracksTable)}></Route>\n            <Route path=\"/selection\" component={auth(SelectionTable)}></Route>\n            <Route path=\"/\" component={auth(Home)}></Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","export const TRACKING_ID = 'UA-83149720-2';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}