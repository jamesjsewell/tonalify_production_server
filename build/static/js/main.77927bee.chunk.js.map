{"version":3,"sources":["components/navbar/tonalify.svg","reducers/track-selection.reducer.ts","reducers/auth.reducer.ts","reducers/flash-messages.reducer.ts","reducers/ajax.reducer.ts","reducers/index.reducer.ts","constants/constants.ts","actions/selection.actions.ts","actions/auth.actions.ts","actions/flash-messages.actions.ts","actions/ajax.actions.ts","FlashMessages.tsx","components/navbar/Navbar.tsx","htmlScrollLock.js","components/analysisModal/AnalysisModal.tsx","checkStorage.js","components/tracks/TracksTable.tsx","components/search/Search.tsx","components/home/Home.tsx","components/albumsAndPlaylists/AlbumsAndPlaylists.tsx","components/auth/RequireAuth.tsx","components/userSelection/UserSelection.tsx","AjaxSpinner.tsx","components/auth/CheckAuth.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","isAuthenticated","id","isLoading","requests","AJAX_REQUEST_TYPES","FLASH_MESSAGE_TYPES","trackSelection","state","action","type","payload","auth","flashMessages","filter","message","ajax","request","API_ROOT","HTTP_ORIGIN","KEYS_MAP","0","1","2","3","4","5","6","7","8","9","10","11","MODES_MAP","METER_MAP","FlashMessages","props","previousProps","previousLastMessage","length","lastMessage","this","renderFlashMessage","setTimeout","deleteFlashMessage","className","SUCCESS","text","ERROR","Component","connect","dispatch","Navbar","mobile","requestId","uuidv4","addPendingRequest","PROFILE","axios","get","withCredentials","loggedOut","finishPendingRequest","data","localStorage","removeItem","deauthenticate","loginUri","window","location","href","addFlashMessage","setState","to","src","Logo","role","aria-label","data-target","onClick","e","clickHamburger","aria-hidden","activeClassName","logout","login","enableBodyScroll","$node","dispatchEvent","CustomEvent","bubbles","disableBodyScroll","updateDocumentElement","locked","document","body","style","overflow","documentElement","overflowY","addEventListener","target","bodyScrollLock","numberToColorHsl","i","hue2rgb","p","q","t","rgb","h","s","l","r","g","b","Math","floor","hslToRgb","AnalysisModal","closeModal","fetchingAnalysis","trackAnalysis","trackToAnalyze","addToSelection","removeFromSelection","position","top","left","transform","width","height","background","display","justifyContent","alignItems","padding","track","marginTop","name","find","cursor","backgroundColor","key_confidence","key","mode_confidence","mode","tempo_confidence","tempo","toFixed","time_signature_confidence","time_signature","sections","map","row","confidence","boxShadow","Date","start","toISOString","substr","duration","get_local_storage_status","setItem","alert","remainingSpace","SortButton","column","selectedColumn","direction","sortColumn","Table","storedSelection","getItem","parsedSelection","JSON","parse","trackList","spotifyPath","filtered","sort","errorFetchingTracks","disableTable","query","modalActive","next","getTracks","USER_LIBRARY","querySelector","post","searchResults","spotify_path","spotify_payload","crud_operation","headers","analyzed","featuresRequestId","tracksRequest","items","tracks","tracksArray","item","tracksFeaturesResponse","tracksFeatures","audio_features","updatedTrackList","concat","features","selected","artist","artists","value","passesFilter","property","toString","toLowerCase","includes","toLocaleLowerCase","selectionString","oldSelection","updatedSelection","stringify","cachedTrack","filteredTracks","first","second","getFilteredTracks","sortedTracks","getSortedTracks","title","onChange","filterByKey","disabled","search","placeholder","preventDefault","align","getAnalysis","Number","SearchBy","Search","itemList","errorFetchingItems","searchBy","TRACK","artistsPath","nextArtists","albums","albumsPath","nextAlbums","selectedAlbum","showAlbumTracksTable","showTracksTable","showArtistAlbums","ARTIST","getArtists","is_tracks","alignContent","flexDirection","flexWrap","margin","overflowX","flexShrink","color","backgroundImage","images","url","backgroundSize","backgroundPosition","getAlbums","zIndex","album","TracksTable","compose","withRouter","defaults","Home","displayName","URLSearchParams","authenticateUser","getProfile","profile","authenticate","display_name","maxWidth","alt","marginLeft","fontSize","userId","AlbumsAndPlaylists","collection","showTracks","tracksPath","showTable","selectedPlaylistPath","selectedPlaylistTitle","errorFetching","fetching","collectionType","getPlaylists","history","push","description","filterCollection","htmlFor","open","borderRadius","ComposedComponent","extraProps","Authenticate","checkAndRedirect","React","SelectionTable","updatePlaylistRequestId","newPlaylistName","playlist_name","newPlaylistDescription","playlist_description","exportedSelection","uris","uri","updatedPlaylist","snapshot_id","onSubmit","exportSelection","rows","AjaxSpinner","CheckAuth","check","store","createStore","combineReducers","reducer","composeWithDevTools","applyMiddleware","thunkMiddleware","App","path","component","checkAuth","authRequired","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.77927bee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tonalify.8482fd0a.svg\";","import { UPDATE_SELECTION } from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function trackSelectionReducer(\n  state = initialState,\n  action: { type: string; payload: any[] }\n) {\n  switch (action.type) {\n    case UPDATE_SELECTION:\n      return [...action.payload];\n    default:\n      return state;\n  }\n}\n","import { DEAUTHENTICATE, AUTHENTICATE } from '../actions/index.actions';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  id: string | null;\n}\n\nconst initialState = { isAuthenticated: false, id: null };\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: string }\n) {\n  switch (action.type) {\n    case AUTHENTICATE:\n      return { ...state, isAuthenticated: true, id: action.payload };\n    case DEAUTHENTICATE:\n      return { ...state, isAuthenticated: false, id: null };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_FLASH_MESSAGE,\n  DELETE_FLASH_MESSAGE\n} from '../actions/index.actions';\n\nconst initialState: any[] = [];\nexport default function authReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_FLASH_MESSAGE:\n      return [...state, action.payload];\n    case DELETE_FLASH_MESSAGE:\n      return [...state].filter((message: any) => message.id != action.payload);\n    default:\n      return state;\n  }\n}\n","import {\n  IS_LOADING,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../actions/index.actions';\n\nexport interface AjaxState {\n  isLoading: boolean;\n  requests: any[];\n}\n\nconst initialState = { isLoading: false, requests: [] };\nexport default function ajaxReducer(\n  state = initialState,\n  action: { type: string; payload: any }\n) {\n  switch (action.type) {\n    case ADD_PENDING_REQUEST:\n      return { ...state, requests: [...state.requests, action.payload] };\n    case FINISH_PENDING_REQUEST:\n      return {\n        ...state,\n        requests: [...state.requests].filter(\n          (request: any) => !!request.id === action.payload\n        )\n      };\n    case IS_LOADING:\n      return { ...state, isLoading: action.payload };\n    default:\n      return state;\n  }\n}\n","import trackSelectionReducer from './track-selection.reducer';\nimport authReducer from './auth.reducer';\nimport { AuthState } from './auth.reducer';\nimport flashMessagesReducer from './flash-messages.reducer';\nimport ajaxReducer from './ajax.reducer';\nimport { AjaxState } from './ajax.reducer';\n\nexport interface GlobalState {\n  trackSelection: any[];\n  auth: AuthState;\n  flashMessages: any[];\n  ajax: AjaxState;\n}\n\nexport default {\n  trackSelection: trackSelectionReducer,\n  auth: authReducer,\n  flashMessages: flashMessagesReducer,\n  ajax: ajaxReducer\n};\n","// https://yfitops.herokuapp.com root\n// 'http://localhost:4200' root\n//https://tonalify.herokuapp.com origin\n//http://localhost:3000 origin\nexport const API_ROOT = 'https://yfitops.herokuapp.com';\nexport const HTTP_ORIGIN = 'https://tonalify.herokuapp.com';\nexport enum AJAX_REQUEST_TYPES {\n  'PROFILE',\n  'USER_LIBRARY'\n}\nexport enum FLASH_MESSAGE_TYPES {\n  'ERROR',\n  'SUCCESS'\n}\n\nexport const KEYS_MAP: any = {\n  0: 'C',\n  1: 'C#',\n  2: 'D',\n  3: 'D#',\n  4: 'E',\n  5: 'F',\n  6: 'F#',\n  7: 'G',\n  8: 'G#',\n  9: 'A',\n  10: 'A#',\n  11: 'B'\n};\n\nexport const MODES_MAP: any = {\n  0: 'minor',\n  1: 'major'\n};\n\nexport const METER_MAP: any = {\n  3: '3/4',\n  4: '4/4',\n  5: '5/4',\n  6: '6/4',\n  7: '7/4'\n};\n","export const UPDATE_SELECTION = 'UPDATE_SELECTION';\n","export const AUTHENTICATE = 'AUTHENTICATE';\nexport const DEAUTHENTICATE = 'DEAUTHENTICATE';\n","export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\n","export const IS_LOADING = 'IS_LOADING';\nexport const ADD_PENDING_REQUEST = 'ADD_PENDING_REQUEST';\nexport const FINISH_PENDING_REQUEST = 'FINISH_PENDING_REQUEST';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\nimport { DELETE_FLASH_MESSAGE } from './actions/index.actions';\nimport { FLASH_MESSAGE_TYPES } from './constants/constants';\ninterface FlashMessagesProps {\n  flashMessages: any[];\n  deleteFlashMessage: Function;\n}\ninterface FlashMessagesState {\n  message: any;\n}\n\nclass FlashMessages extends Component<FlashMessagesProps, FlashMessagesState> {\n  constructor(props: FlashMessagesProps) {\n    super(props);\n    this.state = {\n      message: null\n    };\n  }\n\n  componentDidUpdate(previousProps: any) {\n    const previousLastMessage =\n      previousProps.flashMessages[previousProps.flashMessages.length - 1];\n    const lastMessage = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (\n      lastMessage &&\n      previousLastMessage &&\n      lastMessage.id !== previousLastMessage.id\n    ) {\n      this.renderFlashMessage();\n      return;\n    }\n\n    if (!previousLastMessage && lastMessage) {\n      this.renderFlashMessage();\n    }\n  }\n\n  renderFlashMessage() {\n    const message = this.props.flashMessages[\n      this.props.flashMessages.length - 1\n    ];\n    if (!message) return;\n    setTimeout(() => {\n      this.props.deleteFlashMessage(message.id);\n    }, 5000);\n  }\n\n  render() {\n    const { flashMessages } = this.props;\n    const message = flashMessages[flashMessages.length - 1];\n    return (\n      <div className=\"flash-messages-wrapper\">\n        {message ? (\n          <div className=\"flash-message-content\">\n            {message.type === FLASH_MESSAGE_TYPES.SUCCESS ? (\n              <div className=\"notification is-success\">{message.text}</div>\n            ) : null}\n\n            {message.type === FLASH_MESSAGE_TYPES.ERROR ? (\n              <div className=\"notification is-danger\">{message.text}</div>\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deleteFlashMessage: (id: string) =>\n      dispatch({ type: DELETE_FLASH_MESSAGE, payload: id })\n  };\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    flashMessages: state.flashMessages\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlashMessages);\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  DEAUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport Logo from './tonalify.svg';\n\ninterface NavbarProps {\n  deauthenticate: Function;\n  addFlashMessage: Function;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  isAuthenticated: boolean;\n}\n\ninterface NavbarState {\n  mobile: boolean;\n}\n\nclass Navbar extends Component<NavbarProps, NavbarState> {\n  constructor(props: NavbarProps) {\n    super(props);\n    this.state = {\n      mobile: false\n    };\n  }\n  async logout() {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.PROFILE,\n      message: 'Logging Out'\n    });\n    const loggedOut = await axios.get(`${API_ROOT}/logout`, {\n      withCredentials: true\n    });\n\n    this.props.finishPendingRequest(requestId);\n\n    if (!loggedOut || !loggedOut.data) return;\n    localStorage.removeItem('logged_in_tonalify');\n    this.props.deauthenticate();\n  }\n\n  async login() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Logging In'\n      });\n      const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n      this.props.finishPendingRequest(requestId);\n      if (loginUri && loginUri.data) {\n        window.location.href = loginUri.data;\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    }\n  }\n\n  clickHamburger() {\n    this.setState({ mobile: !!this.state.mobile ? false : true });\n  }\n  render() {\n    const { isAuthenticated } = this.props;\n    return (\n      <nav className=\"navbar-wrapper navbar is-spaced\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className=\"navbar-tonalify-link navbar-item is-family-sans-serif has-text-primary has-text-weight-bold\"\n            to=\"/home\"\n          >\n            <img src={Logo} />\n          </NavLink>\n\n          <a\n            role=\"button\"\n            className={`navbar-burger burger ${\n              this.state.mobile ? 'is-active' : ''\n            }`}\n            aria-label=\"menu\"\n            data-target=\"nav-menu\"\n            onClick={e => this.clickHamburger()}\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n\n        <div\n          id=\"nav-menu\"\n          className={`navbar-menu ${this.state.mobile ? 'is-active' : ''}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/home\"\n              activeClassName=\"is-active\"\n            >\n              Home\n            </NavLink>\n            {isAuthenticated ? (\n              <Fragment>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/search\"\n                  activeClassName=\"is-active\"\n                >\n                  Search\n                </NavLink>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/your-playlists\"\n                  activeClassName=\"is-active\"\n                >\n                  Playlists\n                </NavLink>\n                <NavLink\n                  className=\"navbar-item\"\n                  to=\"/your-albums\"\n                  activeClassName=\"is-active\"\n                >\n                  Albums\n                </NavLink>\n              </Fragment>\n            ) : null}\n            <NavLink\n              className=\"navbar-item\"\n              to=\"/selection\"\n              activeClassName=\"is-active\"\n            >\n              Export\n            </NavLink>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                {this.props.isAuthenticated ? (\n                  <a className=\"button is-light\" onClick={() => this.logout()}>\n                    Logout\n                  </a>\n                ) : (\n                  <a className=\"button is-light\" onClick={() => this.login()}>\n                    Login\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    deauthenticate: () => dispatch({ type: DEAUTHENTICATE }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import * as bodyScrollLock from 'body-scroll-lock';\n\nconst ENABLE_BODY_SCROLL = 'enableBodyScroll';\nconst DISABLE_BODY_SCROLL = 'disableBodyScroll';\n\nexport const enableBodyScroll = $node =>\n  $node.dispatchEvent(new CustomEvent(ENABLE_BODY_SCROLL, { bubbles: true }));\n\nexport const disableBodyScroll = $node =>\n  $node.dispatchEvent(new CustomEvent(DISABLE_BODY_SCROLL, { bubbles: true }));\n\nconst updateDocumentElement = () => {\n  const locked = document.body.style.overflow == 'hidden';\n  document.documentElement.style.overflowY = locked ? 'hidden' : 'scroll';\n};\ndocument.addEventListener(ENABLE_BODY_SCROLL, ({ target }) => {\n  bodyScrollLock.enableBodyScroll(target);\n  setTimeout(updateDocumentElement, 0);\n});\n\ndocument.addEventListener(DISABLE_BODY_SCROLL, ({ target }) => {\n  bodyScrollLock.disableBodyScroll(target);\n  setTimeout(updateDocumentElement, 0);\n});\n","import React, { Fragment } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { KEYS_MAP, MODES_MAP, METER_MAP } from '../../constants/constants';\n\nconst numberToColorHsl = (i: any) => {\n  i = i * 100;\n  function hue2rgb(p: any, q: any, t: any) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  function hslToRgb(h: any, s: any, l: any) {\n    var r, g, b;\n\n    if (s == 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n  }\n  // as the function expects a value between 0 and 1, and red = 0° and green = 120°\n  // we convert the input to the appropriate hue value\n  var hue = (i * 1.2) / 360;\n  // we convert hsl to rgb (saturation 100%, lightness 50%)\n  var rgb = hslToRgb(hue, 1, 0.5);\n  // we format to css value and return\n  return rgb[0] + ',' + rgb[1] + ',' + rgb[2];\n};\n\nexport const AnalysisModal = (\n  closeModal: Function,\n  fetchingAnalysis: boolean,\n  trackAnalysis: any,\n  trackToAnalyze: any,\n  trackSelection: any,\n  addToSelection: Function,\n  removeFromSelection: Function\n) => (\n  <div className=\"modal is-active\">\n    <div\n      className=\"modal-background\"\n      onClick={() => {\n        closeModal();\n      }}\n    ></div>\n\n    <div id=\"modal-content\" className=\"modal-content has-background-light\">\n      {!fetchingAnalysis && trackAnalysis ? (\n        <div\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            width: '100%',\n            height: '20px',\n            background:\n              'linear-gradient(to right,rgb(255,0,0)0%,rgb(255,255,0) 50%,rgb(0,255,0) 100%)',\n            display: 'inline-flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            padding: '2px'\n          }}\n        >\n          <p>0%</p>\n          <p>analysis confidence</p>\n          <p>100%</p>\n        </div>\n      ) : null}\n      {!fetchingAnalysis && trackAnalysis && trackAnalysis.track ? (\n        <div className=\"track-analysis-content\">\n          <div\n            style={{\n              marginTop: '20px',\n              display: 'inline-flex',\n              justifyContent: 'space-between',\n              width: '100%'\n            }}\n          >\n            <p>{trackToAnalyze.name}</p>\n            {!trackSelection.find(\n              (track: any) => track.id === trackToAnalyze.id\n            ) ? (\n              <div\n                className=\"has-text-link\"\n                style={{\n                  display: 'inline-flex',\n                  justifyContent: 'space-between',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  addToSelection(trackToAnalyze);\n                }}\n              >\n                select\n                <AddIcon className=\"selection-button-icon\" />\n              </div>\n            ) : (\n              <div\n                className=\"has-text-link\"\n                style={{\n                  display: 'inline-flex',\n                  justifyContent: 'space-between',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  removeFromSelection(trackToAnalyze);\n                }}\n              >\n                deselect\n                <RemoveIcon className=\"selection-button-icon\" />\n              </div>\n            )}\n          </div>\n          <div\n            style={{ display: 'flex', width: '100%', justifyContent: 'center' }}\n          >\n            <div\n              className=\"confidence-bar\"\n              style={{\n                backgroundColor: `rgb(${numberToColorHsl(\n                  trackAnalysis.track.key_confidence\n                )})`\n              }}\n            >\n              <p>{KEYS_MAP[trackAnalysis.track.key]}</p>\n            </div>\n\n            <div\n              className=\"confidence-bar\"\n              style={{\n                backgroundColor: `rgb(${numberToColorHsl(\n                  trackAnalysis.track.mode_confidence\n                )})`\n              }}\n            >\n              <p>{MODES_MAP[trackAnalysis.track.mode]}</p>\n            </div>\n            <div\n              className=\"confidence-bar\"\n              style={{\n                overflow: 'visible !important',\n                backgroundColor: `rgb(${numberToColorHsl(\n                  trackAnalysis.track.tempo_confidence\n                )})`\n              }}\n            >\n              <p>{trackAnalysis.track.tempo.toFixed(2)}</p>\n            </div>\n            <div\n              className=\"confidence-bar\"\n              style={{\n                backgroundColor: `rgb(${numberToColorHsl(\n                  trackAnalysis.track.time_signature_confidence\n                )}`\n              }}\n            >\n              <p>{METER_MAP[trackAnalysis.track.time_signature]}</p>\n            </div>\n          </div>\n\n          <div className=\"table-wrapper card\">\n            <table className=\"table is-bordered is-striped\">\n              <thead>\n                <tr>\n                  <th>section</th>\n                  <th>start</th>\n                  <th>duration</th>\n                  <th>key</th>\n                  <th>mode</th>\n                  <th>tempo</th>\n                  <th>meter</th>\n                </tr>\n              </thead>\n              <tbody>\n                {trackAnalysis.sections.map((row: any, i: any) => (\n                  <tr\n                    key={uuidv4()}\n                    style={{\n                      background: `rgba(${numberToColorHsl(\n                        row.confidence\n                      )},0.3)`,\n                      boxShadow: `0px 0px 0px 5px rgb(${numberToColorHsl(\n                        row.confidence\n                      )}) inset`\n                    }}\n                  >\n                    <td>{i + 1}</td>\n                    <td>\n                      {new Date(row.start * 1000).toISOString().substr(11, 8)}\n                    </td>\n                    <td>\n                      {new Date(row.duration * 1000)\n                        .toISOString()\n                        .substr(11, 8)}\n                    </td>\n                    <td\n                      style={{\n                        backgroundColor: `rgb(${numberToColorHsl(\n                          row.key_confidence\n                        )}`\n                      }}\n                    >\n                      {KEYS_MAP[row.key]}\n                    </td>\n                    <td\n                      style={{\n                        backgroundColor: `rgb(${numberToColorHsl(\n                          row.mode_confidence\n                        )}`\n                      }}\n                    >\n                      {MODES_MAP[row.mode]}\n                    </td>\n                    <td\n                      style={{\n                        backgroundColor: `rgb(${numberToColorHsl(\n                          row.tempo_confidence\n                        )}`\n                      }}\n                    >\n                      {row.tempo.toFixed(2)}\n                    </td>\n                    <td\n                      style={{\n                        backgroundColor: `rgb(${numberToColorHsl(\n                          row.time_signature_confidence\n                        )}`\n                      }}\n                    >\n                      {METER_MAP[row.time_signature]}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ) : null}\n    </div>\n\n    <button\n      className=\"modal-close is-large\"\n      aria-label=\"close\"\n      onClick={() => {\n        closeModal();\n      }}\n    ></button>\n  </div>\n);\n","export function get_local_storage_status() {\n  let test = 'test';\n  try {\n    // try setting an item\n    localStorage.setItem('test', test);\n    localStorage.removeItem('test');\n  } catch (e) {\n    // browser specific checks if local storage was exceeded\n    if (\n      e.name === 'QUATA_EXCEEDED_ERR' || // Chrome\n      e.name === 'NS_ERROR_DOM_QUATA_REACHED' //Firefox/Safari\n    ) {\n      // local storage is full\n      //return 'full';\n      alert('local storage is full, clear cache to continue');\n      return;\n    } else {\n      try {\n        if (localStorage.remainingSpace === 0) {\n          // IE\n          // local storage is full\n          //return 'full';\n          alert('local storage is full, clear cache to continue');\n          return;\n        }\n      } catch (e) {\n        // localStorage.remainingSpace doesn't exist\n      }\n\n      // local storage might not be available\n      //return 'unavailable';\n      alert('local storage is required to continue');\n      return;\n    }\n  }\n  //   return 'available';\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { NavLink } from 'react-router-dom';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { disableBodyScroll, enableBodyScroll } from '../../htmlScrollLock';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  KEYS_MAP,\n  MODES_MAP,\n  METER_MAP\n} from '../../constants/constants';\nimport {\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport { AnalysisModal } from '../analysisModal/AnalysisModal';\nimport { get_local_storage_status } from '../../checkStorage';\n\ninterface TableProps {\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  isAuthenticated: boolean;\n  searchResults?: boolean;\n}\n\ninterface TableState {\n  trackList: any;\n  spotifyPath: string | null;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetchingTracks: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n  modalActive: boolean;\n  fetchingAnalysis: boolean;\n  trackAnalysis: any;\n  trackToAnalyze: any;\n  next: boolean;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass Table extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection);\n\n    this.state = {\n      trackList: [],\n      spotifyPath: localStorage.getItem('spotify_path'),\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetchingTracks: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : [],\n      modalActive: false,\n      fetchingAnalysis: false,\n      trackAnalysis: {},\n      trackToAnalyze: {},\n      next: false\n    };\n    get_local_storage_status();\n    this.getTracks();\n  }\n\n  async getAnalysis(track: any) {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Audio Details'\n    });\n    this.setState(\n      {\n        fetchingAnalysis: true,\n        modalActive: true,\n        trackToAnalyze: track\n      },\n      () => {\n        disableBodyScroll(document.querySelector('#modal-content'));\n      }\n    );\n\n    const analyzed = await axios.post(\n      `${API_ROOT}/${\n        this.props.searchResults ? 'spotify-search' : 'spotify-request'\n      }`,\n      {\n        spotify_path: `https://api.spotify.com/v1/audio-analysis/${track.id}`,\n        spotify_payload: null,\n        crud_operation: 'get'\n      },\n      {\n        withCredentials: true,\n        headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n      }\n    );\n\n    this.props.finishPendingRequest(requestId);\n\n    this.setState({\n      trackAnalysis: analyzed.data,\n      fetchingAnalysis: false\n    });\n  }\n\n  async getTracks() {\n    const requestId = uuidv4();\n    const featuresRequestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Tracks'\n      });\n\n      const tracksRequest = await axios.post(\n        `${API_ROOT}/${\n          this.props.searchResults ? 'spotify-search' : 'spotify-request'\n        }`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!tracksRequest.data) return;\n\n      let { next, items, tracks } = tracksRequest.data;\n\n      if (tracks && tracks.items) {\n        next = tracks.next;\n      }\n\n      let tracksArray = items ? items : tracks;\n      tracksArray = tracks && tracks.items ? tracks.items : tracksArray;\n\n      this.props.addPendingRequest({\n        id: featuresRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Fetching Audio Details'\n      });\n\n      const tracksFeaturesResponse = await axios.post(\n        `${API_ROOT}/${\n          this.props.searchResults ? 'spotify-search' : 'spotify-request'\n        }`,\n        {\n          spotify_path: `https://api.spotify.com/v1/audio-features?ids=${tracksArray.map(\n            (item: any) => {\n              if (item.track) {\n                item = item.track;\n              }\n              return item.id;\n            }\n          )}`,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(featuresRequestId);\n\n      let tracksFeatures: [] = [];\n\n      if (\n        tracksFeaturesResponse &&\n        tracksFeaturesResponse.data &&\n        tracksFeaturesResponse.data.audio_features\n      ) {\n        tracksFeatures = tracksFeaturesResponse.data.audio_features;\n      }\n\n      const updatedTrackList = [...this.state.trackList].concat(\n        tracksArray.map((item: any) => {\n          if (item.track) {\n            item = item.track;\n          }\n          const features: any | undefined = tracksFeatures.find(\n            (track: any) => track && item && track.id === item.id\n          );\n\n          return {\n            ...item,\n            selected: false,\n            tempo: features ? features.tempo : null,\n            key: features ? KEYS_MAP[features.key] : null,\n            mode: features ? MODES_MAP[features.mode] : null,\n            artist:\n              item.artists && item.artists.length ? item.artists[0].name : null\n          };\n        })\n      );\n\n      this.setState(\n        {\n          ...this.state,\n          trackList: updatedTrackList,\n          spotifyPath: next,\n          next: next && next.length ? true : false,\n          errorFetchingTracks: false\n        },\n        () => {\n          if (!next) return;\n          //this.getTracks();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.finishPendingRequest(featuresRequestId);\n      this.setState({\n        ...this.state,\n        errorFetchingTracks: true\n      });\n    }\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackList].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  addToSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n    const updatedSelection = [...oldSelection, track];\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackList;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const title = localStorage.getItem('spotify_item_title');\n\n    const {\n      fetchingAnalysis,\n      trackAnalysis,\n      trackToAnalyze,\n      trackSelection,\n      next\n    } = this.state;\n\n    const { isAuthenticated } = this.props;\n\n    return (\n      <div className=\"tracks-view-wrapper\">\n        {this.state.modalActive\n          ? AnalysisModal(\n              () => {\n                enableBodyScroll(document.querySelector('#modal-content'));\n                this.setState({ modalActive: false });\n              },\n              fetchingAnalysis,\n              trackAnalysis,\n              trackToAnalyze,\n              trackSelection,\n              (track: any) => this.addToSelection(track),\n              (track: any) => this.removeFromSelection(track)\n            )\n          : null}\n        {!this.state.errorFetchingTracks ? (\n          <div className=\"tracks-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered is-widescreen\">\n                <p className=\"title\">{title}</p>\n                <p>\n                  This won't modify {title} or your library, selecting and\n                  deselecting tracks only modifies your selection of tracks in\n                  this app. Use the table below to select and deselect tracks.{' '}\n                  <NavLink to=\"/selection\">Export</NavLink> to modify and export\n                  your full selection of tracks, or continue to{' '}\n                  <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                  <NavLink to=\"/your-albums\">Albums</NavLink> to continue adding\n                  tracks{' '}\n                </p>\n              </div>\n            </div>\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option key={uuidv4()} value={key}>\n                                {key}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped\">\n                  <thead>\n                    <tr>\n                      <th>select</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr key={uuidv4()}>\n                        <td align=\"center\">\n                          {!this.state.trackSelection.find(\n                            (track: any) => track && row && track.id === row.id\n                          ) ? (\n                            <AddIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.addToSelection(row);\n                              }}\n                            />\n                          ) : (\n                            <RemoveIcon\n                              className={`selection-button-icon has-text-link ${\n                                this.state.disableTable ? 'disabled-icon' : ''\n                              }`}\n                              onClick={() => {\n                                this.removeFromSelection(row);\n                              }}\n                            />\n                          )}\n                        </td>\n\n                        <td>\n                          <a\n                            onClick={() => {\n                              this.getAnalysis(row);\n                            }}\n                          >\n                            {row.name}\n                          </a>\n                        </td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo).toFixed(2)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n                {next ? (\n                  <button onClick={() => this.getTracks()} className=\"button\">\n                    load more\n                  </button>\n                ) : (\n                  'end of results'\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { withRouter } from 'react-router';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport { compose } from 'redux';\n\nimport {\n  ADD_FLASH_MESSAGE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\nimport TracksTable from '../tracks/TracksTable';\nimport { get_local_storage_status } from '../../checkStorage';\n\nenum SearchBy {\n  ARTIST = 'ARTIST',\n  TRACK = 'TRACK'\n}\n\ninterface SearchProps {\n  route: any;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  login?: Function;\n  isAuthenticated: boolean;\n}\n\ninterface SearchState {\n  filtered: boolean;\n  sort: any;\n  errorFetchingItems: boolean;\n  disableTable: boolean;\n  query: string;\n  next: boolean;\n  itemList: any;\n  searchBy: SearchBy;\n  artists: any;\n  artistsPath: any;\n  nextArtists: any;\n  albumsPath: any;\n  nextAlbums: any;\n  albums: any;\n  selectedAlbum: any;\n  showAlbumTracksTable: boolean;\n  showTracksTable: boolean;\n  showArtistAlbums: boolean;\n}\n\nclass Search extends Component<SearchProps, SearchState> {\n  constructor(props: SearchProps) {\n    super(props);\n\n    this.state = {\n      itemList: [],\n      filtered: false,\n      sort: { column: null, direction: null },\n      errorFetchingItems: false,\n      disableTable: false,\n      query: '',\n      next: false,\n      searchBy: SearchBy.TRACK,\n      artists: [],\n      artistsPath: '',\n      nextArtists: '',\n      albums: [],\n      albumsPath: '',\n      nextAlbums: '',\n      selectedAlbum: null,\n      showAlbumTracksTable: false,\n      showTracksTable: false,\n      showArtistAlbums: true\n    };\n\n    get_local_storage_status();\n  }\n\n  search(e: any) {\n    e.preventDefault();\n\n    const { searchBy, query } = this.state;\n    if (searchBy === SearchBy.TRACK) {\n      localStorage.setItem(\n        'spotify_path',\n        `https://api.spotify.com/v1/search?q=${query}&type=${searchBy.toLowerCase()}&market=US`\n      );\n\n      localStorage.setItem('spotify_item_title', query);\n\n      this.setState(\n        { showTracksTable: false, showAlbumTracksTable: false },\n        () => {\n          this.setState({ showTracksTable: true });\n        }\n      );\n    }\n\n    if (searchBy === SearchBy.ARTIST) {\n      this.setState({ artists: [], nextArtists: '', albums: [] }, () => {\n        this.getArtists();\n      });\n    }\n\n    this.setState({ filtered: true });\n  }\n\n  async getArtists() {\n    const { query, nextArtists } = this.state;\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Artists'\n    });\n    try {\n      const artists = await axios.post(\n        `${API_ROOT}/spotify-search`,\n        {\n          spotify_path:\n            nextArtists && nextArtists.length\n              ? nextArtists\n              : `https://api.spotify.com/v1/search?q=${query}&type=artist&market=US`,\n          is_tracks: false\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (!artists || !artists.data || !artists.data.artists) return;\n\n      this.setState({\n        artists: [...this.state.artists, ...artists.data.artists.items],\n        nextArtists: artists.data.artists.next,\n        showArtistAlbums: true\n      });\n      this.props.finishPendingRequest(requestId);\n    } catch {\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getAlbums(id: string) {\n    const { nextAlbums } = this.state;\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Albums'\n    });\n    try {\n      const albums = await axios.post(\n        `${API_ROOT}/spotify-search`,\n        {\n          spotify_path:\n            nextAlbums && nextAlbums.length\n              ? nextAlbums\n              : `https://api.spotify.com/v1/artists/${id}/albums?market=US`,\n          is_tracks: false\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n      this.props.finishPendingRequest(requestId);\n      if (!albums || !albums.data) return;\n      this.setState({\n        albums: [...this.state.albums, ...albums.data.items],\n        nextAlbums: albums.data.next\n      });\n    } catch {\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  render() {\n    const {\n      searchBy,\n      artists,\n      nextArtists,\n      albums,\n      nextAlbums,\n      showAlbumTracksTable,\n      showTracksTable,\n      showArtistAlbums\n    } = this.state;\n\n    const { isAuthenticated } = this.props;\n    return (\n      <div className=\"search-view-wrapper\">\n        {!this.state.errorFetchingItems ? (\n          <div className=\"search-view-content\">\n            <div className=\"section\">\n              <div className=\"container has-text-centered playlists-and-albums-header\">\n                <p className=\"title\">Spotify Audio Analysis</p>\n\n                {!isAuthenticated ? (\n                  <span>\n                    If you wish to export playlists,{' '}\n                    <a\n                      className=\"\"\n                      href=\"\"\n                      onClick={e => {\n                        e.preventDefault();\n                        if (this.props.login) {\n                          this.props.login();\n                        }\n                      }}\n                    >\n                      Login\n                    </a>{' '}\n                    with Spotify\n                  </span>\n                ) : null}\n              </div>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                alignContent: 'center',\n                flexDirection: 'column',\n                flexWrap: 'wrap'\n              }}\n            >\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  margin: '5px'\n                }}\n              >\n                <button\n                  style={{ margin: '2px' }}\n                  className={`button is-outlined is-rounded ${\n                    searchBy === SearchBy.ARTIST ? 'is-active' : ''\n                  }`}\n                  onClick={() => {\n                    this.setState({\n                      searchBy: SearchBy.ARTIST,\n                      showAlbumTracksTable: false,\n                      showTracksTable: false\n                    });\n                  }}\n                >\n                  artists\n                </button>\n                <button\n                  style={{ margin: '2px' }}\n                  className={`button is-outlined is-rounded ${\n                    searchBy === SearchBy.TRACK ? 'is-active' : ''\n                  }`}\n                  onClick={() => {\n                    this.setState({\n                      searchBy: SearchBy.TRACK,\n                      showAlbumTracksTable: false,\n                      showTracksTable: false\n                    });\n                  }}\n                >\n                  tracks\n                </button>\n              </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n              >\n                <form style={{ display: 'inline-flex' }}>\n                  <input\n                    onChange={e => {\n                      if (e.target.value && e.target.value.length) {\n                        this.setState({ query: e.target.value });\n                        return;\n                      }\n                      this.setState({ query: '', filtered: false });\n                    }}\n                    className=\"input\"\n                    placeholder={`search for ${searchBy.toLocaleLowerCase()}`}\n                  ></input>\n                  <button\n                    className=\"button\"\n                    type=\"submit\"\n                    onClick={e => {\n                      this.search(e);\n                    }}\n                  >\n                    <SearchIcon />\n                  </button>\n                </form>\n              </div>\n            </div>\n            {searchBy === SearchBy.ARTIST ? (\n              <div style={{ marginTop: '20px' }}>\n                {showArtistAlbums ? (\n                  <div className=\"\">\n                    {searchBy === SearchBy.ARTIST &&\n                    artists &&\n                    artists.length ? (\n                      <div\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center'\n                        }}\n                      >\n                        <p style={{ margin: 'auto' }}>Select an Artist</p>\n                        <div\n                          style={{\n                            width: '100%',\n                            display: 'inline-flex',\n                            overflowX: 'scroll',\n                            justifyContent: 'flex-start',\n                            margin: '10px'\n                          }}\n                        >\n                          {artists.map((artist: any) => (\n                            <button\n                              key={uuidv4()}\n                              className=\"button\"\n                              style={{\n                                flexShrink: 0,\n                                color: 'white',\n                                width: 'auto',\n                                height: '100px',\n                                backgroundImage: `url(\"${\n                                  artist.images[2] ? artist.images[2].url : ''\n                                }\")`,\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                overflow: 'hidden'\n                              }}\n                              onClick={e => {\n                                e.preventDefault();\n                                this.setState({ albums: [] }, () =>\n                                  this.getAlbums(artist.id)\n                                );\n                              }}\n                            >\n                              <p\n                                style={{\n                                  color: 'white',\n                                  zIndex: 5\n                                }}\n                              >\n                                {artist.name}\n                              </p>\n                              <div\n                                style={{\n                                  zIndex: 1,\n                                  position: 'absolute',\n                                  top: '50%',\n                                  left: '50%',\n                                  transform: 'translate(-50%,-50%)',\n                                  width: '100%',\n                                  height: '100%',\n                                  background: 'rgba(0,0,0,.6)'\n                                }}\n                              ></div>\n                            </button>\n                          ))}\n                          {nextArtists ? (\n                            <button\n                              className=\"button\"\n                              onClick={e => {\n                                e.preventDefault();\n                                this.getArtists();\n                              }}\n                              style={{\n                                width: 'auto',\n                                height: '100px',\n                                flexShrink: 0\n                              }}\n                            >\n                              Load More\n                            </button>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n\n                    {searchBy === SearchBy.ARTIST && albums && albums.length ? (\n                      <div\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center'\n                        }}\n                      >\n                        <p style={{ margin: 'auto' }}>Select an Album</p>\n                        <div\n                          style={{\n                            width: '100%',\n                            display: 'inline-flex',\n                            overflowX: 'scroll',\n                            justifyContent: 'flex-start',\n                            margin: '10px'\n                          }}\n                        >\n                          {albums.map((album: any) => (\n                            <button\n                              key={uuidv4()}\n                              className=\"button\"\n                              style={{\n                                flexShrink: 0,\n                                color: 'white',\n                                width: 'auto',\n                                height: '100px',\n                                backgroundImage: `url(\"${\n                                  album.images &&\n                                  album.images[2] &&\n                                  album.images[2].url\n                                    ? album.images[2].url\n                                    : ''\n                                }\")`,\n                                backgroundSize: 'cover',\n                                backgroundPosition: 'center',\n                                overflow: 'hidden'\n                              }}\n                              onClick={e => {\n                                e.preventDefault();\n\n                                this.setState(\n                                  {\n                                    showTracksTable: false,\n                                    showAlbumTracksTable: false,\n                                    showArtistAlbums: false\n                                  },\n                                  () => {\n                                    localStorage.setItem(\n                                      'spotify_path',\n                                      `https://api.spotify.com/v1/albums/${album.id}/tracks`\n                                    );\n                                    localStorage.setItem(\n                                      'spotify_item_title',\n                                      album.name\n                                    );\n                                    this.setState(\n                                      {\n                                        showAlbumTracksTable: true,\n                                        selectedAlbum: album\n                                      },\n                                      () => {}\n                                    );\n                                  }\n                                );\n                              }}\n                            >\n                              <p\n                                style={{\n                                  color: 'white',\n                                  zIndex: 5\n                                }}\n                              >\n                                {album.name}\n                              </p>\n                              <div\n                                style={{\n                                  zIndex: 1,\n                                  position: 'absolute',\n                                  top: '50%',\n                                  left: '50%',\n                                  transform: 'translate(-50%,-50%)',\n                                  width: '100%',\n                                  height: '100%',\n                                  background: 'rgba(0,0,0,.6)'\n                                }}\n                              ></div>\n                            </button>\n                          ))}\n                          {nextAlbums ? (\n                            <button\n                              className=\"button\"\n                              onClick={e => {\n                                e.preventDefault();\n                                this.getAlbums('');\n                              }}\n                              style={{\n                                width: 'auto',\n                                height: '100px',\n                                flexShrink: 0\n                              }}\n                            >\n                              Load More\n                            </button>\n                          ) : null}\n                        </div>\n                      </div>\n                    ) : null}\n                  </div>\n                ) : (\n                  <div\n                    className=\"card\"\n                    style={{ display: 'flex', justifyContent: 'center' }}\n                  >\n                    <button\n                      className=\"button\"\n                      onClick={() => {\n                        this.setState({ showArtistAlbums: true });\n                      }}\n                    >\n                      Expand Search Results\n                    </button>\n                  </div>\n                )}\n              </div>\n            ) : null}\n            {showAlbumTracksTable ? <TracksTable searchResults={true} /> : null}\n            {showTracksTable ? <TracksTable searchResults={true} /> : null}\n          </div>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Tracks, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default compose<any>(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Search);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\n\nimport Search from '../search/Search';\nimport { get_local_storage_status } from '../../checkStorage';\n\naxios.defaults.withCredentials = true;\n\ninterface HomeProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n}\n\ninterface HomeState {\n  displayName: string;\n}\n\nclass Home extends Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = { displayName: '' };\n    get_local_storage_status();\n  }\n\n  componentDidMount() {\n    const code = new URLSearchParams(window.location.search).get('code');\n    if (code) {\n      this.authenticateUser();\n      return;\n    }\n    if (\n      this.props.isAuthenticated ||\n      !localStorage.getItem('logged_in_tonalify')\n    )\n      return;\n\n    this.getProfile();\n  }\n\n  async authenticateUser() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Authenticating'\n      });\n      await axios.get(\n        `${API_ROOT}/authorize?code=${new URLSearchParams(\n          window.location.search\n        ).get('code')}`,\n        {\n          withCredentials: true\n        }\n      );\n\n      this.getProfile();\n\n      this.props.finishPendingRequest(requestId);\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Authenticating',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async getProfile() {\n    const requestId = uuidv4();\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Fetching Profile'\n      });\n      const profile = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: 'https://api.spotify.com/v1/me',\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (profile.data && profile.data.id) {\n        this.props.authenticate(profile.data.id);\n        this.props.addFlashMessage({\n          type: FLASH_MESSAGE_TYPES.SUCCESS,\n          text: 'Logged In!',\n          id: uuidv4()\n        });\n        this.setState({ displayName: profile.data.display_name });\n        localStorage.setItem('logged_in_tonalify', profile.data.display_name);\n\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Profile',\n        id: uuidv4()\n      });\n      this.props.finishPendingRequest(requestId);\n    }\n  }\n\n  async login() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Logging In'\n      });\n      const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n      this.props.finishPendingRequest(requestId);\n      if (loginUri && loginUri.data) {\n        window.location.href = loginUri.data;\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    }\n  }\n\n  render() {\n    const { isAuthenticated } = this.props;\n    const displayName = localStorage.getItem('logged_in_tonalify');\n    return (\n      <div className=\"home-view-wrapper\">\n        {isAuthenticated ? (\n          <div className=\"section\">\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <div\n                className=\"has-text-centered\"\n                style={{\n                  maxWidth: '400px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  flexDirection: 'column'\n                }}\n              >\n                <p className=\"title\">Welcome, {displayName}</p>{' '}\n                <p>\n                  Browse your library and make track selections based on key or\n                  tempo, then export your selection as a Spotify playlist. This\n                  app won't modify your playlists, it will only add new\n                  playlists that you create\n                </p>\n              </div>\n            </div>\n            <div className=\"section\">\n              <div className=\"container is-widescreen has-text-centered\">\n                <div className=\"links\">\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/search\"\n                  >\n                    <p>Search</p>\n                  </NavLink>\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-albums\"\n                  >\n                    <p>Your Albums</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/your-playlists\"\n                  >\n                    <p>Your Playlists</p>\n                  </NavLink>\n\n                  <NavLink\n                    className=\"link-card has-background-primary has-text-white is-size-4\"\n                    to=\"/selection\"\n                  >\n                    <p>Export Selection</p>\n                  </NavLink>\n                </div>\n                <hr />\n                <div className=\"buy-me-coffee-wrapper\">\n                  <a\n                    className=\"bmc-button has-background-link\"\n                    href=\"https://www.buymeacoffee.com/tonalify\"\n                  >\n                    <img\n                      src=\"https://cdn.buymeacoffee.com/buttons/bmc-new-btn-logo.svg\"\n                      alt=\"Buy me a coffee\"\n                    />\n                    <span\n                      style={{ marginLeft: '5px', fontSize: '19px !important' }}\n                    >\n                      Buy me a coffee\n                    </span>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {!isAuthenticated ? <Search login={() => this.login()} /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: (userId: string) =>\n      dispatch({ type: AUTHENTICATE, payload: userId }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id }),\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  AUTHENTICATE,\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\nimport { get_local_storage_status } from '../../checkStorage';\n\ninterface AlbumsAndPlaylistsProps {\n  route: any;\n  history: any;\n  type: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\ninterface AlbumsAndPlaylistsState {\n  collection: any[];\n  showTracks: boolean;\n  tracksPath: string;\n  showTable: boolean;\n  selectedPlaylistPath: string;\n  selectedPlaylistTitle: string;\n  errorFetching: boolean;\n  query: string;\n  spotifyPath: string;\n  fetching: boolean;\n  collectionType: string;\n}\n\nclass AlbumsAndPlaylists extends Component<\n  AlbumsAndPlaylistsProps,\n  AlbumsAndPlaylistsState\n> {\n  constructor(props: AlbumsAndPlaylistsProps) {\n    super(props);\n    this.state = {\n      collection: [],\n      showTracks: false,\n      tracksPath: '',\n      showTable: false,\n      selectedPlaylistPath: '',\n      selectedPlaylistTitle: '',\n      errorFetching: false,\n      query: '',\n      spotifyPath:\n        this.props.type === 'PLAYLISTS'\n          ? 'https://api.spotify.com/v1/me/playlists?limit=50'\n          : 'https://api.spotify.com/v1/me/albums?limit=50',\n      fetching: false,\n      collectionType: this.props.type === 'PLAYLISTS' ? 'Playlist' : 'Album'\n    };\n    get_local_storage_status();\n  }\n\n  componentDidMount() {\n    this.getPlaylists();\n  }\n\n  async getPlaylists() {\n    const requestId = uuidv4();\n    try {\n      this.setState({ fetching: true });\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message:\n          this.props.type === 'PLAYLISTS'\n            ? 'Fetching Playlists'\n            : 'Fetching Albums'\n      });\n      const collection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: this.state.spotifyPath,\n          spotify_payload: null,\n          crud_operation: 'get'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (!collection || !collection.data || !collection.data.items) return;\n\n      const { next } = collection.data;\n\n      this.setState(\n        {\n          collection: [...this.state.collection].concat(\n            this.props.type === 'PLAYLISTS'\n              ? collection.data.items\n              : collection.data.items.map((item: any) => item.album)\n          ),\n          spotifyPath: next,\n          fetching: false\n        },\n        () => {\n          if (!next) return;\n          this.getPlaylists();\n        }\n      );\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.setState({ errorFetching: true, fetching: false });\n    }\n  }\n\n  open(id: string, title: string) {\n    localStorage.setItem(\n      'spotify_path',\n      `https://api.spotify.com/v1/${\n        this.props.type === 'PLAYLISTS' ? 'playlists' : 'albums'\n      }/${id}/tracks`\n    );\n    localStorage.setItem('spotify_item_title', title);\n    this.props.history.push('/tracks');\n  }\n\n  search(query: any) {\n    this.setState({ query });\n  }\n\n  filterCollection() {\n    return [...this.state.collection].filter((item: any) => {\n      const { description, name } = item;\n      const query = this.state.query.toLocaleLowerCase();\n      if (\n        (description &&\n          description\n            .toString()\n            .toLowerCase()\n            .includes(query)) ||\n        (name &&\n          name\n            .toString()\n            .toLowerCase()\n            .includes(query))\n      )\n        return item;\n    });\n  }\n\n  render() {\n    let items =\n      this.state.query && this.state.query.length\n        ? this.filterCollection()\n        : this.state.collection;\n    return (\n      <div className=\"playlists-view-wrapper\">\n        <div className=\"section\">\n          <div className=\"container has-text-centered playlists-and-albums-header\">\n            <p className=\"title\">Your {this.state.collectionType}s</p>\n\n            <p>Choose {this.state.collectionType} to Select Tracks From</p>\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"container is-widescreen\">\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"search-input\">\n                Search Your {this.state.collectionType}s\n              </label>\n              <div className=\"search-playlists-input-wrapper\">\n                <input\n                  id=\"search-input\"\n                  className=\"search-input input\"\n                  onChange={e => this.search(e.target.value)}\n                  placeholder=\"Search\"\n                  value={this.state.query}\n                ></input>\n                {this.state.query.length ? (\n                  <button\n                    onClick={() => {\n                      this.setState({ query: '' });\n                    }}\n                  >\n                    <CloseIcon className=\"has-text-link\" />\n                  </button>\n                ) : null}\n              </div>\n            </div>\n            {!this.state.errorFetching ? (\n              <div className=\"playlists-wrapper\">\n                {items.length ? (\n                  items.map((item: any) => (\n                    <div\n                      style={{\n                        backgroundImage:\n                          item.images && item.images[0] && item.images[0].url\n                            ? `url(${item.images[0].url})`\n                            : 'none',\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center'\n                      }}\n                      key={uuidv4()}\n                      className=\"playlist-wrapper has-background-grey-lighter\"\n                      onClick={() => this.open(item.id, item.name)}\n                    >\n                      <p\n                        style={{\n                          color: 'white',\n                          position: 'absolute',\n                          top: '50%',\n                          left: '50%',\n                          transform: 'translate(-50%,-50%)',\n                          zIndex: 5,\n                          padding: '10px',\n                          background: 'rgba(0,0,0,.8)',\n                          borderRadius: '5px'\n                        }}\n                      >\n                        {item.name}\n                      </p>\n                      <div\n                        style={{\n                          width: '100%',\n                          height: '100%',\n                          position: 'absolute',\n                          top: '50%',\n                          left: '50%',\n                          transform: 'translate(-50%,-50%)',\n                          background: 'rgba(0,0,0,.4)',\n                          zIndex: 2\n                        }}\n                      ></div>\n                    </div>\n                  ))\n                ) : !this.state.fetching ? (\n                  <p>no results</p>\n                ) : null}\n              </div>\n            ) : (\n              <p className=\"notification is-danger\">\n                Error Loading {this.state.collectionType}s, Refresh the Page\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    authenticate: () => dispatch({ type: AUTHENTICATE }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nfunction mapStateToProps(state: GlobalState) {\n  return {};\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps)\n)(AlbumsAndPlaylists);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  AUTHENTICATE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AuthenticateProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\nexport default function(ComposedComponent: any, extraProps?: any): any {\n  class Authenticate extends React.Component<AuthenticateProps> {\n    componentDidMount() {\n      this.checkAndRedirect();\n    }\n\n    componentDidUpdate() {\n      this.checkAndRedirect();\n    }\n\n    async checkAndRedirect() {\n      const { isAuthenticated } = this.props;\n      if (isAuthenticated) return;\n      const requestId = uuidv4();\n\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          message: 'Fetching Profile',\n          type: AJAX_REQUEST_TYPES.PROFILE\n        });\n\n        const profile = await axios.post(\n          `${API_ROOT}/spotify-request`,\n          {\n            spotify_path: 'https://api.spotify.com/v1/me',\n            spotify_payload: null,\n            crud_operation: 'get'\n          },\n          {\n            withCredentials: true,\n            headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n          }\n        );\n\n        this.props.finishPendingRequest(requestId);\n\n        if (profile.data && profile.data.id) {\n          this.props.authenticate(profile.data.id);\n          return;\n        }\n\n        this.props.history.push('/home');\n      } catch (error) {\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    render() {\n      return (\n        <div>\n          {this.props.isAuthenticated ? (\n            <ComposedComponent {...(this.props, extraProps)} />\n          ) : null}\n        </div>\n      );\n    }\n  }\n\n  const mapDispatchToProps = (dispatch: any) => {\n    return {\n      authenticate: (userId: string) =>\n        dispatch({ type: AUTHENTICATE, payload: userId }),\n      addPendingRequest: (request: any) =>\n        dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n      finishPendingRequest: (id: any) =>\n        dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n    };\n  };\n\n  const mapStateToProps = (state: GlobalState) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(Authenticate);\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { NavLink } from 'react-router-dom';\nimport { disableBodyScroll, enableBodyScroll } from '../../htmlScrollLock';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES,\n  FLASH_MESSAGE_TYPES\n} from '../../constants/constants';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  ADD_FLASH_MESSAGE\n} from '../../actions/index.actions';\n\nimport { AnalysisModal } from '../analysisModal/AnalysisModal';\nimport { get_local_storage_status } from '../../checkStorage';\n\ninterface TableProps {\n  userId: string;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n  addFlashMessage: Function;\n  isAuthenticated: boolean;\n}\n\ninterface TableState {\n  trackList: any;\n  filtered: boolean;\n  key: string | null;\n  mode: string | null;\n  sort: any;\n  errorFetching: boolean;\n  disableTable: boolean;\n  query: string;\n  trackSelection: any;\n  modalActive: boolean;\n  fetchingAnalysis: boolean;\n  trackAnalysis: any;\n  trackToAnalyze: any;\n}\n\nconst SortButton: any = (\n  column: any,\n  selectedColumn: any,\n  direction: any,\n  sortColumn: Function\n): any =>\n  column === selectedColumn ? (\n    <th onClick={e => sortColumn(e)}>\n      {column}\n      {direction === 0 || !direction ? <>&#8593;&#8595;</> : null}\n      {direction === 1 ? <>&#8593;</> : null}\n      {direction === 2 ? <>&#8595;</> : null}\n    </th>\n  ) : (\n    <th\n      onClick={e => {\n        sortColumn(e);\n      }}\n    >\n      {column}&#8593;&#8595;\n    </th>\n  );\n\nclass SelectionTable extends Component<TableProps, TableState> {\n  constructor(props: TableProps) {\n    super(props);\n\n    const storedSelection: any = localStorage.getItem('tonalify_selection');\n    const parsedSelection: any = JSON.parse(storedSelection);\n\n    this.state = {\n      trackList: [],\n      filtered: false,\n      key: null,\n      mode: null,\n      sort: { column: null, direction: null },\n      errorFetching: false,\n      disableTable: false,\n      query: '',\n      trackSelection: parsedSelection ? parsedSelection : [],\n      modalActive: false,\n      fetchingAnalysis: false,\n      trackAnalysis: {},\n      trackToAnalyze: {}\n    };\n\n    get_local_storage_status();\n  }\n\n  filterByKey(e: any) {\n    if (e.target.name === 'key') {\n      this.setState({\n        key: e.target.value,\n        filtered: !!e.target.value || !!this.state.mode\n      });\n\n      return;\n    }\n\n    if (e.target.name === 'mode') {\n      this.setState({\n        mode: e.target.value,\n        filtered: !!e.target.value || !!this.state.key\n      });\n    }\n  }\n\n  getFilteredTracks() {\n    const { key, mode } = this.state;\n    const filtered = [...this.state.trackSelection].filter((track: any) => {\n      if (key && mode && track.key === key && track.mode === mode) {\n        return track;\n      }\n      if (key && !mode && track.key === key) {\n        return track;\n      }\n      if (!key && mode && track.mode === mode) {\n        return track;\n      }\n\n      if (!key && !mode) {\n        return track;\n      }\n    });\n\n    if (!this.state.query) {\n      return filtered;\n    }\n\n    return filtered.filter((track: any) => {\n      const { name, artist, tempo, mode, key } = track;\n      let passesFilter = false;\n      [name, artist, tempo, mode, key].map((property: any) => {\n        if (\n          property &&\n          property\n            .toString()\n            .toLowerCase()\n            .includes(this.state.query.toLocaleLowerCase())\n        ) {\n          passesFilter = true;\n        }\n      });\n\n      if (passesFilter) return track;\n    });\n  }\n\n  search(e: any) {\n    if (e.target.value && e.target.value.length) {\n      this.setState({ query: e.target.value, filtered: true });\n      return;\n    }\n\n    this.setState({ query: '', filtered: false });\n  }\n\n  removeFromSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection: any = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n\n    const updatedSelection = oldSelection.filter(\n      (cachedTrack: any) => cachedTrack.id !== track.id\n    );\n\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  addToSelection(track: any) {\n    const selectionString: any = localStorage.getItem('tonalify_selection');\n    const oldSelection = JSON.parse(selectionString)\n      ? JSON.parse(selectionString)\n      : [];\n    const updatedSelection = [...oldSelection, track];\n    localStorage.setItem(\n      'tonalify_selection',\n      JSON.stringify(updatedSelection)\n    );\n\n    this.setState({ trackSelection: updatedSelection });\n  }\n\n  async exportSelection(e: any) {\n    e.preventDefault();\n    const requestId = uuidv4();\n    const updatePlaylistRequestId = uuidv4();\n    const newPlaylistName = e.target.playlist_name.value;\n    const newPlaylistDescription = e.target.playlist_description.value;\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Creating New Playlist'\n      });\n      const exportedSelection = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/users/${this.props.userId}/playlists`,\n          spotify_payload: {\n            name: newPlaylistName,\n            description: newPlaylistDescription\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      this.props.finishPendingRequest(requestId);\n\n      if (\n        !exportedSelection ||\n        !exportedSelection.data ||\n        !exportedSelection.data.id\n      ) {\n        return;\n      }\n\n      this.props.addPendingRequest({\n        id: updatePlaylistRequestId,\n        type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n        message: 'Adding Tracks To Playlist'\n      });\n\n      const tracks = this.state.filtered\n        ? this.getFilteredTracks()\n        : this.state.trackSelection;\n\n      const updatedPlaylist = await axios.post(\n        `${API_ROOT}/spotify-request`,\n        {\n          spotify_path: `https://api.spotify.com/v1/playlists/${exportedSelection.data.id}/tracks`,\n          spotify_payload: {\n            uris: tracks.map((track: any) => track.uri)\n          },\n          crud_operation: 'post'\n        },\n        {\n          withCredentials: true,\n          headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n        }\n      );\n\n      if (\n        !updatedPlaylist ||\n        !updatedPlaylist.data ||\n        !updatedPlaylist.data.snapshot_id\n      )\n        return;\n\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.SUCCESS,\n        text: `Created ${newPlaylistName}`,\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(updatePlaylistRequestId);\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Creating Playlist',\n        id: uuidv4()\n      });\n    }\n  }\n\n  async login() {\n    const requestId = uuidv4();\n\n    try {\n      this.props.addPendingRequest({\n        id: requestId,\n        type: AJAX_REQUEST_TYPES.PROFILE,\n        message: 'Logging In'\n      });\n      const loginUri: { data: string } = await axios.get(`${API_ROOT}/login`);\n      this.props.finishPendingRequest(requestId);\n      if (loginUri && loginUri.data) {\n        window.location.href = loginUri.data;\n        return;\n      }\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    } catch (error) {\n      this.props.finishPendingRequest(requestId);\n      this.props.addFlashMessage({\n        type: FLASH_MESSAGE_TYPES.ERROR,\n        text: 'Error Fetching Login URL',\n        id: uuidv4()\n      });\n    }\n  }\n\n  sortColumn(column: string) {\n    let direction = 1;\n    if (this.state.sort.column !== column) {\n      direction = 1;\n    } else {\n      switch (this.state.sort.direction) {\n        case 0:\n          direction = 1;\n          break;\n        case 1:\n          direction = 2;\n          break;\n        case 2:\n          direction = 0;\n          break;\n      }\n    }\n    this.setState({\n      sort: { column, direction }\n    });\n  }\n\n  getSortedTracks(filteredTracks: any) {\n    const { sort } = this.state;\n    const { direction, column } = sort;\n    return [...filteredTracks].sort((first: any, second: any) => {\n      if (direction === 1) return first[column] > second[column] ? 1 : -1;\n      if (direction === 2) return first[column] < second[column] ? 1 : -1;\n      return 1;\n    });\n  }\n\n  async getAnalysis(track: any) {\n    const requestId = uuidv4();\n    this.props.addPendingRequest({\n      id: requestId,\n      type: AJAX_REQUEST_TYPES.USER_LIBRARY,\n      message: 'Fetching Audio Details'\n    });\n    this.setState(\n      {\n        fetchingAnalysis: true,\n        modalActive: true,\n        trackToAnalyze: track\n      },\n      () => {\n        disableBodyScroll(document.querySelector('#modal-content'));\n      }\n    );\n    const analyzed = await axios.post(\n      `${API_ROOT}/${\n        this.props.isAuthenticated ? 'spotify-request' : 'spotify-search'\n      }`,\n      {\n        spotify_path: `https://api.spotify.com/v1/audio-analysis/${track.id}`,\n        spotify_payload: null,\n        crud_operation: 'get'\n      },\n      {\n        withCredentials: true,\n        headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n      }\n    );\n\n    this.props.finishPendingRequest(requestId);\n\n    this.setState({\n      trackAnalysis: analyzed.data,\n      fetchingAnalysis: false\n    });\n  }\n\n  render() {\n    const keys = [\n      'C',\n      'C#',\n      'D',\n      'D#',\n      'E',\n      'F',\n      'F#',\n      'G',\n      'G#',\n      'A',\n      'A#',\n      'B'\n    ];\n\n    const tracks = this.state.filtered\n      ? this.getFilteredTracks()\n      : this.state.trackSelection;\n\n    const sortedTracks = this.getSortedTracks(tracks);\n\n    const {\n      fetchingAnalysis,\n      trackAnalysis,\n      trackToAnalyze,\n      trackSelection\n    } = this.state;\n\n    const { isAuthenticated } = this.props;\n\n    return (\n      <div className=\"user-selection-wrapper\">\n        {this.state.modalActive\n          ? AnalysisModal(\n              () => {\n                enableBodyScroll(document.querySelector('#modal-content'));\n                this.setState({ modalActive: false });\n              },\n              fetchingAnalysis,\n              trackAnalysis,\n              trackToAnalyze,\n              trackSelection,\n              (track: any) => this.addToSelection(track),\n              (track: any) => this.removeFromSelection(track)\n            )\n          : null}\n        {!this.state.errorFetching ? (\n          <>\n            {isAuthenticated ? (\n              <>\n                <div className=\"section\">\n                  <div className=\"container has-text-centered is-widescreen\">\n                    <p className=\"title\">Export To Spotify</p>\n                    <p>\n                      Modify and export your current selection or return to your{' '}\n                      <NavLink to=\"/your-playlists\">Playlists</NavLink> and{' '}\n                      <NavLink to=\"/your-albums\">Albums</NavLink> to continue\n                      adding tracks\n                    </p>\n                  </div>\n                </div>\n                <div className=\"section\">\n                  <div className=\"columns is-centered\">\n                    <div className=\"form-wrapper box column is-half\">\n                      <div className=\"has-text-centered\">\n                        <p>Export Playlist</p>\n                      </div>\n\n                      <form\n                        id=\"playlist-form\"\n                        className=\"create-playlist-form\"\n                        onSubmit={e => this.exportSelection(e)}\n                      >\n                        <div className=\"playlist-inputs\">\n                          <div className=\"field\">\n                            <label htmlFor=\"name\" className=\"label\">\n                              Name\n                            </label>\n                            <input\n                              id=\"name\"\n                              className=\"input\"\n                              name=\"playlist_name\"\n                              placeholder=\"Playlist Name\"\n                            ></input>\n                          </div>\n                          <div className=\"field\">\n                            <label htmlFor=\"description\" className=\"label\">\n                              Description\n                            </label>\n                            <textarea\n                              id=\"description\"\n                              rows={2}\n                              className=\"playlist-description textarea\"\n                              name=\"playlist_description\"\n                              placeholder=\"Playlist Description\"\n                            ></textarea>\n                          </div>\n                        </div>\n                        <div className=\"export-button-wrapper\">\n                          <button className=\"export-button button is-primary\">\n                            Create\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"section\">\n                <div className=\"container has-text-centered is-widescreen\">\n                  <p className=\"title\">Export To Spotify</p>\n                  <p>\n                    <a href=\"\" onClick={() => this.login()}>\n                      Login\n                    </a>{' '}\n                    to Export your selection to a spotify playlist. The\n                    selection will still be here after logging in\n                  </p>\n                </div>\n              </div>\n            )}\n\n            <div className=\"table-section-wrapper\">\n              <div className=\"table-wrapper\">\n                {this.state.disableTable ? (\n                  <div className=\"table-ajax-cover\">\n                    <div className=\"ajax-spinner\">\n                      <div className=\"spinner\"></div>\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"table-controls-wrapper\">\n                  <div className=\"key-and-mode-filter-wrapper\">\n                    <form\n                      onChange={e => {\n                        this.filterByKey(e);\n                      }}\n                    >\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"key\">\n                            <option\n                              selected={!this.state.key}\n                              disabled\n                              value=\"\"\n                            >\n                              Key\n                            </option>\n                            {keys.map(key => (\n                              <option key={uuidv4()} value={key}>\n                                {key}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        {this.state.key ? (\n                          <button onClick={e => this.setState({ key: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                      <div className=\"filter-wrapper\">\n                        <div className=\"select\">\n                          <select name=\"mode\">\n                            <option\n                              selected={!this.state.mode}\n                              disabled\n                              value=\"\"\n                            >\n                              mode\n                            </option>\n                            <option value=\"major\">major</option>\n                            <option value=\"minor\">minor</option>\n                          </select>\n                        </div>\n                        {this.state.mode ? (\n                          <button onClick={e => this.setState({ mode: null })}>\n                            <CloseIcon className=\"has-text-link\" />\n                          </button>\n                        ) : null}\n                      </div>\n                    </form>\n                  </div>\n                  <div className=\"search-input-wrapper field\">\n                    <input\n                      className=\"input is-small\"\n                      onChange={e => this.search(e)}\n                      placeholder={'Search'}\n                      value={this.state.query}\n                    ></input>\n                    {this.state.query.length ? (\n                      <button\n                        onClick={() => {\n                          this.setState({ query: '' });\n                        }}\n                      >\n                        <CloseIcon className=\"has-text-link\" />\n                      </button>\n                    ) : null}{' '}\n                  </div>\n                </div>\n\n                <table className=\"table is-bordered is-striped \">\n                  <thead>\n                    <tr>\n                      <th>deselect</th>\n\n                      {SortButton(\n                        'name',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('name');\n                        }\n                      )}\n\n                      {SortButton(\n                        'key',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('key');\n                        }\n                      )}\n\n                      {SortButton(\n                        'mode',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('mode');\n                        }\n                      )}\n\n                      {SortButton(\n                        'tempo',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('tempo');\n                        }\n                      )}\n\n                      {SortButton(\n                        'artist',\n                        this.state.sort.column,\n                        this.state.sort.direction,\n                        (e: any) => {\n                          e.preventDefault();\n                          this.sortColumn('artist');\n                        }\n                      )}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {sortedTracks.map((row: any) => (\n                      <tr key={uuidv4()}>\n                        <td align=\"center\">\n                          <RemoveIcon\n                            className={`selection-button-icon has-text-link ${\n                              this.state.disableTable ? 'disabled-icon' : ''\n                            }`}\n                            onClick={() => {\n                              this.removeFromSelection(row);\n                            }}\n                          />\n                        </td>\n                        <td>\n                          <a onClick={() => this.getAnalysis(row)}>\n                            {row.name}\n                          </a>\n                        </td>\n                        <td>{row.key}</td>\n                        <td>{row.mode}</td>\n                        <td>{Number(row.tempo)}</td>\n                        <td>{row.artist}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </>\n        ) : (\n          <p className=\"notification is-danger\">\n            Error Loading Track Selection, Refresh the Page\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state: any) {\n  const { isAuthenticated } = state.auth;\n  return { isAuthenticated, userId: state.auth.id };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    addFlashMessage: (message: any) =>\n      dispatch({ type: ADD_FLASH_MESSAGE, payload: message }),\n    addPendingRequest: (request: any) =>\n      dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n    finishPendingRequest: (id: any) =>\n      dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionTable);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { GlobalState } from './reducers/index.reducer';\n\ninterface AjaxSpinnerProps {\n  requests: any[];\n}\ninterface AjaxSpinnerState {}\n\nclass AjaxSpinner extends Component<AjaxSpinnerProps, AjaxSpinnerState> {\n  constructor(props: AjaxSpinnerProps) {\n    super(props);\n    this.state = {};\n  }\n\n  // componentDidUpdate(previousProps: any) {\n  //   const previousLastRequest =\n  //     previousProps.requests[previousProps.requests.length - 1];\n  //   const lastRequest = this.props.requests[this.props.requests.length - 1];\n  //   if (\n  //     lastRequest &&\n  //     previousLastRequest &&\n  //     lastRequest.id !== previousLastRequest.id\n  //   ) {\n  //     this.renderSpinner();\n  //     return;\n  //   }\n\n  //   if (!previousLastRequest && lastRequest) {\n  //     this.renderSpinner();\n  //   }\n  // }\n\n  // renderSpinner() {\n  //   const request = this.props.requests[this.props.requests.length - 1];\n  //   if (!request) return;\n  //   setTimeout(() => {\n  //     this.props.finishRequest(request.id);\n  //   }, 2000);\n  // }\n\n  render() {\n    const { requests } = this.props;\n    const request = requests[requests.length - 1];\n    return request ? (\n      <div className=\"spinner-wrapper\">\n        <div className=\"spinner-content\">\n          <div>\n            <div className=\"spinner\"></div>\n          </div>\n          {request ? <p>{request.message}</p> : null}\n        </div>\n      </div>\n    ) : null;\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {};\n};\n\nconst mapStateToProps = (state: GlobalState) => {\n  return {\n    requests: state.ajax.requests\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AjaxSpinner);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { GlobalState } from '../../reducers/index.reducer';\nimport {\n  ADD_PENDING_REQUEST,\n  FINISH_PENDING_REQUEST,\n  AUTHENTICATE\n} from '../../actions/index.actions';\nimport {\n  API_ROOT,\n  HTTP_ORIGIN,\n  AJAX_REQUEST_TYPES\n} from '../../constants/constants';\n\ninterface AuthenticateProps {\n  authenticate: Function;\n  isAuthenticated: boolean;\n  history: any;\n  addPendingRequest: Function;\n  finishPendingRequest: Function;\n}\n\nexport default function(ComposedComponent: any, extraProps?: any): any {\n  class CheckAuth extends React.Component<AuthenticateProps> {\n    componentDidMount() {\n      this.check();\n    }\n\n    componentDidUpdate() {\n      this.check();\n    }\n\n    async check() {\n      const { isAuthenticated } = this.props;\n      if (isAuthenticated || localStorage.getItem('logged_in_tonalify')) return;\n      const requestId = uuidv4();\n\n      try {\n        this.props.addPendingRequest({\n          id: requestId,\n          message: 'Fetching Profile',\n          type: AJAX_REQUEST_TYPES.PROFILE\n        });\n\n        const profile = await axios.post(\n          `${API_ROOT}/spotify-request`,\n          {\n            spotify_path: 'https://api.spotify.com/v1/me',\n            spotify_payload: null,\n            crud_operation: 'get'\n          },\n          {\n            withCredentials: true,\n            headers: { 'Access-Control-Allow-Origin': HTTP_ORIGIN }\n          }\n        );\n\n        this.props.finishPendingRequest(requestId);\n\n        if (profile.data && profile.data.id) {\n          this.props.authenticate(profile.data.id);\n          return;\n        }\n      } catch (error) {\n        this.props.finishPendingRequest(requestId);\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...(this.props, extraProps)} />;\n    }\n  }\n\n  const mapDispatchToProps = (dispatch: any) => {\n    return {\n      authenticate: (userId: string) =>\n        dispatch({ type: AUTHENTICATE, payload: userId }),\n      addPendingRequest: (request: any) =>\n        dispatch({ type: ADD_PENDING_REQUEST, payload: request }),\n      finishPendingRequest: (id: any) =>\n        dispatch({ type: FINISH_PENDING_REQUEST, payload: id })\n    };\n  };\n\n  const mapStateToProps = (state: GlobalState) => {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  };\n\n  return compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps)\n  )(CheckAuth);\n}\n","import './App.css';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport 'bulma/css/bulma.css';\n\nimport reducer from './reducers/index.reducer';\n\nimport FlashMessages from './FlashMessages';\nimport Navbar from './components/navbar/Navbar';\nimport Home from './components/home/Home';\nimport Search from './components/search/Search';\nimport AlbumsAndPlaylists from './components/albumsAndPlaylists/AlbumsAndPlaylists';\nimport authRequired from './components/auth/RequireAuth';\nimport TracksTable from './components/tracks/TracksTable';\nimport SelectionTable from './components/userSelection/UserSelection';\nimport AjaxSpinner from './AjaxSpinner';\nimport { get_local_storage_status } from './checkStorage';\nimport checkAuth from './components/auth/CheckAuth';\n\nconst store = createStore(\n  combineReducers(reducer),\n  composeWithDevTools(\n    applyMiddleware(thunkMiddleware)\n    // other store enhancers if any\n  )\n);\n\nget_local_storage_status();\n\nconst renderFlashMessages = () => {};\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <AjaxSpinner />\n          <FlashMessages />\n          <Navbar />\n          <Switch>\n            <Route path=\"/search\" component={checkAuth(Search)}></Route>\n            <Route\n              path=\"/your-playlists\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'PLAYLISTS'\n              })}\n            ></Route>\n            <Route\n              path=\"/your-albums\"\n              component={authRequired(AlbumsAndPlaylists, {\n                type: 'ALBUMS'\n              })}\n            ></Route>\n            <Route path=\"/tracks\" component={checkAuth(TracksTable)}></Route>\n            <Route\n              path=\"/selection\"\n              component={checkAuth(SelectionTable)}\n            ></Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './styles.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}